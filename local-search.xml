<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Comments on Differential Geometry Class</title>
    <link href="/2024/05/17/Comments-on-Differential-Geometry-Class/"/>
    <url>/2024/05/17/Comments-on-Differential-Geometry-Class/</url>
    
    <content type="html"><![CDATA[<p>In the semester of 2024 Spring, I took <ahref="https://bulletins.nyu.edu/courses/math_uh/">DifferentialGeometry</a> by Professor Hisham Sati.</p><p>The course is undoubtedly intense and covers a broad range ofadvanced topics. Professor Sati has designed it with the rigor of agraduate-level course, as he himself mentioned.</p><p>Professor Sati is both personable and generous in his gradingapproach. However, I sometimes feel that the course could be betterprepared. His method of teaching primarily involves transcribing notesdirectly from his materials to the board. Interestingly, my peers havenoted that his approach in topology was more engaging.</p><p>All course notes are handwritten, which was unexpected. It's apparentthat Professor Sati invests considerable effort into preparing thesenotes, though they occasionally contain typos and may not be as polishedas published textbooks. Nevertheless, his handwriting is clear, and hisexamples are easy to understand. The direct transcription of notes tothe board can be challenging to follow at times, which sometimes affectsmy ability to stay engaged. Additionally, while the notes are concise,they are not always conducive to independent study. This prompted me tocreate several blogs specifically to discuss and clarify concepts indifferential geometry. <ahref="https://blog.slray.com/2024/04/21/resources-for-differential-geometry/">Resources</a>,<ahref="https://blog.slray.com/2024/04/09/Introduction-to-Quotient-Spaces-in-Topology/">QuotienSpace</a>, etc.</p><p>Professor Sati tailored the course content to be accessible byintegrating elements of linear algebra and multivariable calculus.However, despite not requiring algebra, category theory, or topology asprerequisites, these topics are frequently referenced, which can beconfusing. For instance, terms like 'homeomorphism' and 'isomorphism'still puzzle me.</p><p>The course structure includes:</p><ul><li>Review of linear algebra and calculus 3</li><li>Implicit function theorem</li><li>Extension of multivariable calculus to matrix functions, coveringgeneral linear, orthogonal, and special orthogonal groups, amongothers</li><li>Multilinear algebra and tensors</li><li>Manifolds: from extrinsic to intrinsic concepts</li><li>Differential maps between manifolds</li><li>Tangent spaces</li><li>Immersions, submersions, and submanifolds</li><li>Vector bundles, including fiber bundles and vector fields onmanifolds</li><li>Differential forms</li><li>Riemannian geometry</li><li>Riemannian functionals and general relativity</li></ul><p>This structure reflects the complexity and depth of the topicscovered in the course.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Courses Review</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Courses Comments</tag>
      
      <tag>Courses Review</tag>
      
      <tag>differential geometry</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Filling Gaps in Time Series</title>
    <link href="/2024/05/07/Filling-Gaps-in-Time-Series/"/>
    <url>/2024/05/07/Filling-Gaps-in-Time-Series/</url>
    
    <content type="html"><![CDATA[<p>I implemented this algorithm for filling gaps in a time series data.The full Repository is here: <ahref="https://github.com/LiSiruiRay/Filling-gaps-in-chaotic-time-series">Repo</a>,where you can check the paper my Professor Paparella published, based onwhich this algorithm is implemented.</p><p>Here is a good-looking demo.</p><p>see <a href="filling_gap_implement_demo.html">this</a></p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Numerical Method</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Numerical Method</tag>
      
      <tag>Applied Math</tag>
      
      <tag>Time Series</tag>
      
      <tag>Algorithms</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Laurent Series for 1/(e^z - 1)</title>
    <link href="/2024/04/29/Laurent-series-for-1-e-z-1/"/>
    <url>/2024/04/29/Laurent-series-for-1-e-z-1/</url>
    
    <content type="html"><![CDATA[<h1 id="source-of-the-problem">Source of the problem</h1><p><em>Basic Complex Analysis</em> 3rd Edition by Jerrold E. Marsden andMichael J. Hoffman (1999). Exercise #11 on page 236.</p><img src="/2024/04/29/Laurent-series-for-1-e-z-1/Question.png" class="" title="Question on the book"><h1 id="solution">Solution</h1><p>To find the Laurent series expansion of <spanclass="math inline">\(\frac{1}{e^z - 1}\)</span> around <spanclass="math inline">\(z = 0\)</span>, we start by expressing <spanclass="math inline">\(e^z - 1\)</span> as a power series. We knowthat:</p><p><span class="math inline">\(e^z - 1 = \sum_{n=1}^{\infty}\frac{z^n}{n!}\)</span></p><p>The Laurent series for <span class="math inline">\(\frac{1}{e^z -1}\)</span> with undetermined coefficients is:</p><p><span class="math inline">\(\frac{1}{e^z - 1} = \frac{b_1}{z} + a_0 +a_1z + a_2z^2 + \ldots\)</span></p><p>To find the coefficients, we multiply the two series and set theproduct equal to 1:</p><p><span class="math display">\[\begin{align*}\frac{1}{e^z - 1} \cdot (e^z - 1) &amp;= \left( \frac{b*1}{z} + a_0 +a_1z + a_2z^2 + \ldots \right) \left( \sum*{n=1}^{\infty} \frac{z^n}{n!}\right)\\ &amp;=b_1 + (\frac{b_1}{2} + a_0)z + (\frac{b_1}{6} + \frac{a_0}{2} + a_1)z^2+ \ldots\\ &amp;=1\end{align*}\]</span></p><p>By equating the coefficients of the powers of <spanclass="math inline">\(z\)</span> on both sides of the equation, we get asystem of equations:</p><ul><li>The coefficient of <span class="math inline">\(\frac{1}{z}\)</span>gives us <span class="math inline">\(b_1 = 1\)</span>.</li><li>The constant term gives us <span class="math inline">\(\frac{b_1}{2}+ a_0 = 0\)</span>.</li><li>And so on for the higher powers of <spanclass="math inline">\(z\)</span>.</li></ul><p>Solving these equations sequentially will give us the values of <spanclass="math inline">\(b_1\)</span>, <spanclass="math inline">\(a_0\)</span>, <spanclass="math inline">\(a_1\)</span>, etc.</p><p>For example:</p><p><span class="math inline">\(b_1 = 1\)</span></p><p><span class="math inline">\(\frac{b_1}{2} + a_0 = 0 \implies a_0 =-\frac{1}{2}\)</span></p><p>And you would continue this process to solve for <spanclass="math inline">\(a_1\)</span>, <spanclass="math inline">\(a_2\)</span>, and so on.</p><h1 id="more-resources">More resources</h1><ul><li><ahref="https://www.youtube.com/watch?v=t47BufNTLvg&amp;ab_channel=pentagramprime">AYouTube Video</a></li><li><ahref="https://math.stackexchange.com/questions/1006615/laurent-series-expansion-of-1-ez-1">math.stackexchang</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Analysis</category>
      
      <category>Complex Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Analysis</tag>
      
      <tag>Complex Analysis</tag>
      
      <tag>Laurent Series</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>resources for differential geometry</title>
    <link href="/2024/04/21/resources-for-differential-geometry/"/>
    <url>/2024/04/21/resources-for-differential-geometry/</url>
    
    <content type="html"><![CDATA[<h1 id="textbook">Textbook</h1><h2id="textbook-i-used-for-differential-geometry-class-at-new-york-university-abu-dhabi">TextBookI used for <ahref="https://bulletins.nyu.edu/courses/math_uh/">DifferentialGeometry</a> class at New York University, Abu Dhabi</h2><ul><li><ahref="https://link.springer.com/book/10.1007/978-1-4614-7732-7">FirstSteps in Differential Geometry</a> by <em>Riemannian, Contact,Symplectic</em>. Part of <ahref="https://www.springer.com/series/0666">UTM</a> Series</li><li><ahref="https://link.springer.com/book/10.1007/978-1-4419-7400-6">AnIntroduction to Manifolds</a> by <em><ahref="https://link.springer.com/search?dc.creator=Loring+W.+Tu">LoringW. Tu</a></em></li></ul><h2 id="more-readings-i-found">More Readings I found</h2><ul><li><ahref="https://link.springer.com/book/10.1007/978-1-4419-9982-5">Introductionto Smooth Manifolds</a> by <em>John M. Lee</em></li><li><ahref="https://link.springer.com/book/10.1007/978-3-319-04150-6">Introductionto Matrix Analysis and Applications</a> by <em>Fumio Hiai , DénesPetz</em></li><li><ahref="https://link.springer.com/book/10.1007/978-1-4612-1126-6">LieGroups, Lie Algebras, and Their Representations</a> by <em>V. S.Varadarajan</em>. <a href="https://www.springer.com/series/0136">GTM102</a></li><li><ahref="https://link.springer.com/book/10.1007/978-1-4613-9425-9">MultilinearAlgebra</a> by <em>Werner Greub</em>. Part of <ahref="https://www.springer.com/series/0223">UTX</a></li><li><ahref="https://link.springer.com/book/10.1007/978-0-387-29403-2">RiemannianGeometry</a> by <em>Peter Petersen</em></li><li><em>Differential Geometry of Curves and Surfaces</em> by<em>Manfredo P. do Carmo</em></li></ul><h1 id="passages-i-read">Passages I read</h1><h2 id="tensor">Tensor</h2><h3 id="in-chinese">In Chinese</h3><ul><li>"看完本文, 彻底理解张量" 系列： <ahref="https://zhuanlan.zhihu.com/p/508715535">看完本文,彻底理解张量(上)</a>, <ahref="https://zhuanlan.zhihu.com/p/508715717">看完本文,彻底理解张量(下)</a>, and <ahref="https://zhuanlan.zhihu.com/p/565588180">矢量算符是啥?复内积怎么升降指标? 「彻底理解张量」拓展篇</a>. I only read the firstone (several time), cuz this is enough for my course. This is a reallygood series.</li></ul><h2 id="manifold">Manifold</h2><h3 id="in-chinese-1">In Chinese</h3><ul><li><ahref="https://zhuanlan.zhihu.com/p/622263134">几何学中最伟大的发明之一——流形，其背后的几何直觉与数学方法</a></li></ul><h2 id="vector-bundle-in-english">Vector Bundle (In English)</h2><ul><li><ahref="https://pi.math.cornell.edu/~hatcher/VBKT/VBpage.html">VectorBundles &amp; K-Theory</a> pdf can be found in the link. Very good bookon introducing vector bundle.</li></ul><h1 id="videos">Videos</h1><h1 id="in-chinese-2">In Chinese</h1><ul><li><ahref="https://www.bilibili.com/video/BV1JH4y177KC/?spm_id_from=333.788&amp;vd_source=d84085799dfdb99d199a04d156250394">北京某高校《李群和李代数》</a>.Still updating. This is a graduate level couse, I only watched the firstthree videos. But those are enough for providing a more abstract,deeper, and more concise understanding of what I am learning now.</li><li><ahref="https://www.bilibili.com/video/BV1PK4y1Q7BU/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d84085799dfdb99d199a04d156250394">最美数学系列— 什么是微分流形</a>. Very intuitive introduction to manifold, tangentspace, etc. The tangent space part is really helpful for me.</li><li><ahref="https://www.bilibili.com/video/BV1o341197jS/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d84085799dfdb99d199a04d156250394">Ayumu谈谈商空间、商映射、商拓扑</a>. Very clean, detailed, easy-to-understandapproach for understand Quotient space, my blog <ahref="https://blog.slray.com/2024/04/09/Introduction-to-Quotient-Spaces-in-Topology/">Introductionto Quotient Spaces in Topology</a> is translated from this video.</li></ul><h1 id="in-english-youtube">In English, YouTube</h1><ul><li><ahref="https://www.youtube.com/watch?v=8ptMTLzV4-I&amp;list=PLJHszsWbB6hrkmmq57lX8BV-o-YIOFsiG&amp;ab_channel=eigenchris">TensorsFor Beginners</a>. The Best video introducing tensors I've seen so far.I watched this several times on airplane. Really helpful.</li><li><ahref="https://www.youtube.com/watch?v=ABQ0w08nTBQ&amp;t=14s&amp;ab_channel=FermionPhysics">ManifoldsExplained in 5 Levels of Difficulty</a>. A general introduction tomanifold.</li><li><ahref="https://www.youtube.com/watch?v=zIjBArHTPZ4&amp;ab_channel=GeometryForPhysicists">Whatis a manifold?</a>. A general introduction to manifold. Very intuitiveintroduction.</li><li><ahref="https://www.youtube.com/watch?v=CEXSSz0gZI4&amp;list=PLRlVmXqzHjUQHEx63ZFxV-0Ortgf-rpJo&amp;ab_channel=XylyXylyX">Whatis a Manifold?</a>. Longer, more regious introduction.</li><li><ahref="https://www.youtube.com/watch?v=2ottRuDA5WA&amp;t=5s&amp;ab_channel=MathForLife">RealProjective Space, n = 1</a> and <ahref="https://www.youtube.com/watch?v=TDtwgpQfJlc&amp;t=474s&amp;ab_channel=MathForLife">RealProjective Space, n=2</a>. Really intuitive and clear introduction toprojective space.</li><li><ahref="https://www.youtube.com/watch?v=sVFWrMCfje8&amp;list=PLCgncMh0TrCmrkvT7zW0x32flMJLuYMT5&amp;ab_channel=HarpreetBedi">VectorBundles and Char Classes</a>. Very good series, the book <ahref="https://pi.math.cornell.edu/~hatcher/VBKT/VBpage.html">VectorBundles &amp; K-Theory</a> is recommanded here.</li><li><ahref="https://www.youtube.com/playlist?list=PLBh2i93oe2qvRGAtgkTszX7szZDVd6jh1">Manifolds</a>.Video from <em>The Bright Side of Mathematics</em>, very good YouTuberon Math. This video series introduces manifold from topologicalperspective, while I learned from calculus and linear algebraperspective.</li></ul><h1 id="course-resources">Course Resources</h1><ul><li><ahref="https://www.ocf.berkeley.edu/~pengzhou/courses/math214/home">BerkeleyMath 214: Math 214: Differentiable manifolds</a>. This couse hashomework with solution, a good resource for self study.</li></ul>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Resources Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>differential geometry</tag>
      
      <tag>Resource Share</tag>
      
      <tag>Practice Problem</tag>
      
      <tag>Vector Bundle</tag>
      
      <tag>Notes</tag>
      
      <tag>Public Courses</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>resources for automated therom proving</title>
    <link href="/2024/04/21/resources-for-automated-therom-proving/"/>
    <url>/2024/04/21/resources-for-automated-therom-proving/</url>
    
    <content type="html"><![CDATA[<p>Next semester I will be taking <em>CSCI-UA 480 Special Topics:Principles of Programming Languages</em> by Professor <ahref="https://cs.nyu.edu/~wies/">Thomas Wies</a>.</p><p>This course will be important for me to take further steps inautomated thereom proving.</p><p>Here are some resources Prof Wies introduced.</p><ul><li>A series of books for introduction of functional programming: <ahref="https://softwarefoundations.cis.upenn.edu/">Software FoundationSeries</a></li><li>Book written by Prof Wies' Team <ahref="https://link.springer.com/book/10.1007/978-3-031-01806-0">AutomatedVerification of Concurrent Search Structures</a></li></ul><p>Here are some more video-type resource I found:</p><ul><li><ahref="https://www.fun-mooc.fr/en/courses/introduction-functional-programming-ocaml/">Introductionto Functional Programming in OCaml</a> (This course is archieved, buttheir video is on YouTube). <ahref="https://www.youtube.com/watch?v=o9-K0X2710Y&amp;list=PLGC2in6hSHQcmT_cz4t7ePeQtTCkNkvll&amp;index=4&amp;ab_channel=Roshan%2a">YouTubeLink</a><ul><li>I also found the <ahref="https://github.com/bugczw/Introduction-to-Functional-Programming-in-OCaml">GitHubRepo of the hw</a>, <a href="https://github.com/uds-psl/Prog">Textbookand Project</a>, and <ahref="https://github.com/philsaxton/OCamlMOOC">Solution to thehw</a>.</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Resources Share</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Resource Share</tag>
      
      <tag>Functional Programming</tag>
      
      <tag>Coq</tag>
      
      <tag>Automated Therom Proving</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Introduction to Quotient Spaces in Topology</title>
    <link href="/2024/04/09/Introduction-to-Quotient-Spaces-in-Topology/"/>
    <url>/2024/04/09/Introduction-to-Quotient-Spaces-in-Topology/</url>
    
    <content type="html"><![CDATA[<p>This blog is part of a series designed to demystify various conceptswithin the realm of linear algebra and topology. Following ourdiscussion on vectors, we will now turn our attention to quotient spaces— a fundamental concept in topological study.</p><p><ahref="https://www.bilibili.com/video/BV1o341197jS/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d84085799dfdb99d199a04d156250394">Ayumu'slecture</a> provides an accessible approach to explainingquotient-related topics in topology. This blog aims to continue thattradition, ensuring that complex ideas are broken down intocomprehensible, bite-sized pieces for anyone interested in thisfascinating aspect of mathematics.</p><h1 id="quotient-spaces-simplified">Quotient Spaces Simplified</h1><p>I encountered this concept while delving into topological manifolds,and here's a simplified explanation.</p><h2 id="quotienting-a-primer">Quotienting: A Primer</h2><p>Generally speaking, 'quotienting' is the process of categorizing,classifying, or dividing. A familiar example from primary school is thedivision of natural numbers. For instance, if we have 8 apples and wishto distribute them equally among 4 people, we perform the operation<span class="math inline">\(8 \div 4\)</span>, yielding 2. This resultis known as the quotient. But what does this really mean?</p><p>Consider a group of apples, with specific colors allocated to eachperson:</p><img src="/2024/04/09/Introduction-to-Quotient-Spaces-in-Topology/apple_devide.png" class="" title="Giving apples"><ul><li>Blue apples are given to Ann.</li><li>Gray apples are given to Bob.</li><li>Red apples are given to Tony.</li><li>Green apples are given to Mike.</li></ul><p>In this case, we have categorized or classified or divided the 8apples. We can clear see that we devided 8 apples into 4 classes, eachof which has 2 apples.</p><h2 id="understanding-the-quotient-topology">Understanding the QuotientTopology</h2><p>Let's extend this concept to a topological space. Given a topologicalspace <span class="math inline">\((X, \tau)\)</span>, we can similarlycategorize or divide the space. This process involves :</p><ol type="1"><li>Defining an <em><ahref="https://en.wikipedia.org/wiki/Equivalence_relation">equivalencerelation</a></em> on <span class="math inline">\(X\)</span>.</li><li>This relation partitions <span class="math inline">\(X\)</span> into<em><ahref="https://en.wikipedia.org/wiki/Equivalence_class">equivalenceclasses</a></em>.</li><li>These classes can be viewed as a division of <spanclass="math inline">\(X\)</span>.</li><li>This partitioning results in the <em><ahref="https://en.wikipedia.org/wiki/Equivalence_class">quotientset</a></em> <span class="math inline">\(X/_\sim\)</span>.</li><li>There is a <em><ahref="https://en.wikipedia.org/wiki/Canonical_map">canonical projection(or natural map)</a></em> from <span class="math inline">\(X\)</span> to<span class="math inline">\(X/_\sim\)</span>.</li><li>A <em><ahref="https://en.wikipedia.org/wiki/Surjective_function">surjection</a></em>followes.</li></ol><p>Once one of these elements is established, the others follownaturally. Thus, there is no order of which happens and which followes,they live togethor, die together.</p><h2 id="the-interconnectedness-of-quotient-concepts">TheInterconnectedness of Quotient Concepts</h2><p>Let's discuss how the first five concepts occur together. This isrelatively straightforward. Then, we will examine how the fifth conceptleads to the sixth. The next section will focus on the reverse: how thesixth concept informs the first five.</p><p>Consider an <em>equivalence relation</em> <spanclass="math inline">\(\sim\)</span> (which is reflexive, transitive, andsymmetric) on a set <span class="math inline">\(X\)</span>. Thispartitions <span class="math inline">\(X\)</span> into equivalenceclasses, such that:</p><p><span class="math display">\[X/_\sim = \{[x] : x \in X\}, \quad\text{where} \quad [x] = \{y \in X : y \sim x\}.\]</span></p><p>It's evident that the empty set is not a part of <spanclass="math inline">\(X/_\sim\)</span>. Moreover, these equivalenceclasses are mutually exclusive and their union constitutes <spanclass="math inline">\(X\)</span>. Thus, we have effectively partitioned<span class="math inline">\(X\)</span>.</p><p>The resulting partition <span class="math inline">\(X/_\sim\)</span>is termed the <em>quotient set</em>. Accompanying this set, there is anatural or <em>canonical projection</em> that maps each element <spanclass="math inline">\(x\)</span> in <spanclass="math inline">\(X\)</span> to its equivalence class <spanclass="math inline">\([x]\)</span> (denoted <spanclass="math inline">\(x \mapsto [x]\)</span>).</p><p>This mapping is easily verified as a <em>surjection</em>, whichguarantees that every equivalence class in <spanclass="math inline">\(X/_\sim\)</span> has at least one preimage in<span class="math inline">\(X\)</span>, since no equivalence class isempty.</p><h2 id="from-surjection-to-equivalence-classes">From Surjection toEquivalence Classes</h2><p>Surjection implies the existence of equivalence classes, partitioningof the set, and deciding a canonical projection. If we assume asurjection <span class="math inline">\(f: X \to Y\)</span> where <spanclass="math inline">\(f(x) = y\)</span>, we know that for each <spanclass="math inline">\(y\)</span> in <spanclass="math inline">\(Y\)</span>, the preimage <spanclass="math inline">\(f^{-1}(y)\)</span> is non-empty. This preimage canserve as an equivalence class.</p><p>If we define an equivalence relation <spanclass="math inline">\(\sim\)</span> such that <spanclass="math inline">\(a \sim b\)</span> if <spanclass="math inline">\(f(a) = f(b)\)</span>, then we discover theequivalence classes <span class="math inline">\(\{[x]: f^{-1}(y) \,\text{for} \, f(x) = y\}\)</span>.</p><img src="/2024/04/09/Introduction-to-Quotient-Spaces-in-Topology/suje.png" class="" title="Giving apples"><p>This allows us to observe that the set <spanclass="math inline">\(\{f^{-1}(y): y \in Y\}\)</span> is effectively thequotient set <span class="math inline">\(X/_\sim\)</span> ( that is,<span class="math inline">\(Y \cong X/_\sim\)</span>) as each <spanclass="math inline">\(y\)</span> in <spanclass="math inline">\(Y\)</span> corresponds uniquely to an equivalenceclass in <span class="math inline">\(X\)</span>, establishing abijection between <span class="math inline">\(Y\)</span> and <spanclass="math inline">\(X/_\sim\)</span>.</p><p>In our next blog, we will explore further into the nuances ofquotient spaces and their applications. Join us as we continue to unpackthe layered concepts of topology in a way that is accessible andengaging.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Topology</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Differential Geometry</tag>
      
      <tag>Topology</tag>
      
      <tag>Quotient Spaces</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>An Elementary Approach to Proving a Continuous Function with All Zero Fourier Coefficients is Identically Zero</title>
    <link href="/2024/03/02/An-Elementary-Approach-to-Proving-a-Continuous-Function-with-All-Zero-Fourier-Coefficients-is-Identically-Zero/"/>
    <url>/2024/03/02/An-Elementary-Approach-to-Proving-a-Continuous-Function-with-All-Zero-Fourier-Coefficients-is-Identically-Zero/</url>
    
    <content type="html"><![CDATA[<p>When delving into the fascinating world of Fourier series and theirconvergence properties for functions within the $ C^N $ space, weencounter a fundamental question: Can a continuous function, which hasall its Fourier coefficients equal to zero, be anything other thanidentically zero? This question not only probes the nature of Fourieranalysis but also tests our understanding of function representation andorthogonality. In this blog post, we explore an elementary approach toproving that a periodic $ C^1 $ function with all its Fouriercoefficients set to zero is indeed identically zero.</p><h3 id="the-context-of-the-proof">The Context of the Proof</h3><p>The importance of this proof arises while proving the convergence ofFourier series for $ C^N $ functions. The Fourier series allows us torepresent periodic functions as the sum of sines and cosines, which areelemental to various fields of physics and engineering, particularlywhere waveforms and oscillations come into play.</p><h3 id="simplifying-the-problem">Simplifying the Problem</h3><p>To prove our theorem, it suffices to consider the case where $ h(0)&gt; 0 $. Why? Because any point on a periodic function can be shiftedto the origin through a phase shift, and if $ h(0) &lt; 0 $, we cansimply consider <span class="math inline">\(-h(x)\)</span> instead. Thisreduces our problem to a standard form, focusing our attention on thebehavior of the function at a single, crucial point.</p><h3 id="strategy-for-the-proof">Strategy for the Proof</h3><p>Our general approach to proving the theorem is by contradiction. Weassume that there exists a continuous periodic function $ h $ with allits Fourier coefficients equal to zero, yet $ h $ is not identicallyzero. To navigate this proof, we introduce a special function $ P_n(x)$, constructed to aid in our analysis.</p><h3 id="crafting-the-function-p_nx">Crafting the Function $ P_n(x)$</h3><p>The function $ P_n(x) $ is defined as:</p><p><span class="math inline">\(P_n(x) = (1 + cos(2\pi x) - cos(2\pi\delta))^n\)</span></p><p>This function is particularly chosen for its Fourier seriesproperties and its behavior within and outside a certain interval.</p><h3 id="key-properties-of-p_nx">Key Properties of $ P_n(x) $</h3><p>$ P_n(x) $ possesses several critical properties that are pivotal inour proof:</p><ol type="1"><li>It is composed entirely of Fourier basis functions.</li><li>Within the interval <span class="math inline">\(|x| \leq\delta\)</span>, $P_n(x) &gt; 1 $, ensuring that it amplifies the valueof $ h(x) $ within this region.</li><li>Outside this interval, but within <span class="math inline">\(|x|\leq \frac{1}{2}\)</span>, $ P_n(x) &lt; 1 $, which diminishes theimpact of $ h(x) $.</li><li>As $ n $, $ P_n(x) $ approaches zero for <spanclass="math inline">\(|x| &gt; \delta\)</span>, aligning with theproperties of the Dirac delta function.</li></ol><iframe scrolling="no" title="P_function_fourier_zero_proof" src="https://www.geogebra.org/material/iframe/id/dr6pm969/width/700/height/500/border/888888/sfsb/true/smb/false/stb/false/stbh/false/ai/false/asb/false/sri/false/rc/false/ld/false/sdz/true/ctl/false" width="700px" height="500px" style="border:0px;"></iframe><h3 id="the-contradiction">The Contradiction</h3><p>Using these properties, we integrate $ h(x)P_n(x) $ over one periodand find that the integral must be zero since $ h(x) $ has zero Fouriercoefficients. However, due to the properties of $ P_n(x) $, particularlywithin the <span class="math inline">\(\delta\)</span> interval, we areguaranteed a non-zero contribution to the integral from $ h(0) &gt; 0 $,leading to a contradiction unless $ h $ is zero everywhere.</p><h3 id="detailed-proof-steps">Detailed Proof Steps</h3><p><strong>Theorem</strong>: Let $ h $ be a $ C^1 $ periodic functionwith period $ L $. If all the Fourier coefficients of $ h $ are zero,then $ h(x) $ is identically zero for all $ x $.</p><p><strong>Proof</strong>:</p><ol type="1"><li><strong>Assumption</strong>: Assume $ h $ is not identically zero,but all its Fourier coefficients are zero. Without loss of generality,let us assume <span class="math inline">\(h(0) = \alpha &gt; 0\)</span>.By continuity of $ h $, there exists a <spanclass="math inline">\(\delta &gt; 0\)</span> such that <spanclass="math inline">\(h(x) \geq \frac{\alpha}{2}\)</span> for <spanclass="math inline">\(|x| \leq \delta\)</span>.</li><li><strong>Constructing $ P_n(x) $</strong>: Define $ P_n(x) $ as $P_n(x) = (1 + cos(2x) - cos(2))^n $. $ P_n(x) $ is constructed to havethe following properties:<ul><li>$P_n(x) $ for <span class="math inline">\(|x| \leq\delta\)</span></li><li>$P_n(x) &lt; 1 $ for <span class="math inline">\(\delta &lt; |x|\leq \frac{1}{2}\)</span> - $ P_n(x) $ for <spanclass="math inline">\(\delta &lt; |x| \leq \frac{1}{2}\)</span> as <spanclass="math inline">\(n \to \inf\)</span></li></ul></li><li><strong>Application of $ P_n(x) $</strong>: Multiply $ h(x) $ by$P_n(x) $ and integrate over one period from <spanclass="math inline">\(-\frac{L}{2}\)</span> to <spanclass="math inline">\(\frac{L}{2}\)</span>: <spanclass="math display">\[0 = \int_{-\frac{L}{2}}^{\frac{L}{2}} h(x)P_n(x) dx\]</span> This is because the Fourier coefficients of $ h(x) $ are zero,implying that $ h(x) $ is orthogonal to all the basis functions in theFourier series, and hence the integral of the product is zero.</li><li><strong>Splitting the Integral</strong>: Divide the integral intotwo parts: one over the interval where <span class="math inline">\(|x|\leq \delta\)</span> and the other where<span class="math inline">\(|x|&gt; \delta\)</span>: <span class="math display">\[0 = \int_{|x| \leq \delta} h(x)P_n(x) dx + \int_{\delta &lt; |x| \leq\frac{L}{2}} h(x)P_n(x) dx\]</span></li><li><strong>Contradiction</strong>: As <span class="math inline">\(n \to\infty\)</span>, the second integral tends to zero because $ P_n(x) $for <span class="math inline">\(\delta &lt; |x| \leq\frac{1}{2}\)</span>. However, in the first integral, since <spanclass="math inline">\(h(x) \geq \frac{\alpha}{2}\)</span>for <spanclass="math inline">\(|x| \leq \delta\)</span> and <spanclass="math inline">\(P_n(x) \geq 1\)</span>, the integral is boundedbelow by <span class="math inline">\(\frac{\alpha}{2}\)</span> times themeasure of the interval <span class="math inline">\(|x| \leq\delta\)</span>, which is a positive number. This leads to acontradiction because the sum of a positive number and a number tendingto zero cannot be zero.</li><li><strong>Conclusion</strong>: Since assuming that $ h $ is notidentically zero leads to a contradiction, we conclude that $ h(x) $must be identically zero for all $ x $. Thus, any $ C^1 $ periodicfunction with all zero Fourier coefficients is identically zero.</li></ol><p>This completes the proof. It demonstrates the power of Fourier seriesand the orthogonality of trigonometric functions, providing an elegantmethod to prove that a function with no frequency components (i.e., allzero Fourier coefficients) must be a flat, zero function.</p><h3 id="summarizing-the-proof">Summarizing the Proof</h3><p>The most critical step in our proof is the introduction of $ P_n(x)$, which serves as a magnifying glass at the origin, ensuring that if $h(x) $ is non-zero at $ x = 0 $, it will contribute to the integraldespite the zero Fourier coefficients elsewhere. This clever use of $P_n(x) $'s properties allows us to</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ARM Mac execute x86 command</title>
    <link href="/2024/01/10/ARM-Mac-execute-x86-command/"/>
    <url>/2024/01/10/ARM-Mac-execute-x86-command/</url>
    
    <content type="html"><![CDATA[<h1id="how-can-i-make-my-mac-m1-pro-chip-to-execute-command-under-x86">Howcan I make my mac (M1 Pro chip) to execute command under x86?</h1><p>To run x86 commands or applications on a Mac with an M1 Pro chip,which uses Apple's ARM-based architecture, you can use the Rosetta 2translation environment. Rosetta 2 enables apps built for Intel x86architecture to run on Apple Silicon Macs. Here's how you can set thisup and use it:</p><ol type="1"><li><p><strong>Install Rosetta 2 (if not alreadyinstalled):</strong></p><ul><li>Open Terminal.</li><li>Type<code>/usr/sbin/softwareupdate --install-rosetta --agree-to-license</code>and hit Enter.</li><li>This command will download and install Rosetta 2 on your Mac.</li></ul></li><li><p><strong>Run x86 Terminal Applications:</strong></p><ul><li>For one-time use of an x86 command, precede your command with<code>arch -x86_64</code>. For example:<code>arch -x86_64 &lt;command&gt;</code>.</li><li>This tells the system to run the command using the x86_64architecture.</li></ul></li><li><p><strong>Set Up an x86 Terminal Environment:</strong></p><ul><li>If you regularly use x86 applications, you can duplicate theTerminal app and set the duplicate to always open in Rosetta mode.</li><li>To do this, find Terminal in Finder (usually in the Utilities folderwithin Applications), right-click, and choose<code>Duplicate</code>.</li><li>Right-click on the duplicate, choose <code>Get Info</code>, and thenselect the <code>Open using Rosetta</code> checkbox.</li><li>Now, whenever you open this duplicated Terminal app, it will run inx86 mode by default.</li></ul></li><li><p><strong>Installing x86 Versions of Software:</strong></p><ul><li>Some software might require you to specifically download the x86version. This is typically noted on the software's download page.</li><li>Install the software as usual. Rosetta 2 will automatically handlethe translation.</li></ul></li><li><p><strong>Limitations:</strong></p><ul><li>While Rosetta 2 is quite powerful, there might be some performanceoverhead compared to running natively on Apple Silicon.</li><li>Not all x86 applications are guaranteed to work flawlessly underRosetta 2.</li></ul></li><li><p><strong>Updates and Software Management:</strong></p><ul><li>Keep your macOS and apps updated for optimal performance andcompatibility.</li><li>Some applications have been updated with native Apple Siliconsupport, so it's a good idea to check for these versions for betterperformance.</li></ul></li></ol><p>Remember that Rosetta 2 is a stopgap solution while developerstransition their software to native Apple Silicon support. Over time,the need to use Rosetta 2 should diminish as more applications offernative ARM support.</p><h1id="what-about-i-want-to-enter-a-state-that-all-the-rest-of-the-command-should-be-executed-under-x86">Whatabout I want to enter a state that all the rest of the command should beexecuted under x86?</h1><p>To enter a state where all subsequent commands in a terminal sessionare executed under the x86 architecture on your M1 Pro Mac, you canstart a Rosetta 2 translated shell. This will allow you to run aterminal session entirely under the x86_64 architecture, ensuring thatall commands and applications launched from that session are treated asx86.</p><p>Here's how you can do it:</p><ol type="1"><li><p><strong>Open Terminal.</strong></p></li><li><p><strong>Start a Rosetta 2 translated shell by executing thefollowing command:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span> -x86_64 /bin/zsh<br></code></pre></td></tr></table></figure><ul><li>This command starts a new instance of the Zsh shell (the defaultshell on macOS) under the x86_64 architecture. If you prefer to use Bashor another shell, you can replace <code>/bin/zsh</code> with the path toyour preferred shell, like <code>/bin/bash</code>.</li></ul></li><li><p><strong>Verify the Architecture (Optional):</strong></p><ul><li>To confirm that you're running under the x86_64 architecture, youcan use the <code>arch</code> command: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span><br></code></pre></td></tr></table></figure></li><li>This should return <code>i386</code>, indicating that you are in anx86_64 emulation environment (Rosetta 2 translates x86_64 to i386 forcompatibility).</li></ul></li><li><p><strong>Run Commands:</strong></p><ul><li>Now, any command you execute in this shell will automatically rununder the x86_64 architecture.</li></ul></li><li><p><strong>Exit x86 Mode:</strong></p><ul><li>When you're done and want to return to the native ARM architecture,simply type <code>exit</code> or close the Terminal window. This willend the x86_64 emulation session.</li></ul></li></ol><p>Remember, running commands and applications under Rosetta 2 mighthave some performance overhead compared to running them natively on yourM1 Pro chip. Also, not all x86 applications and commands may workperfectly under Rosetta 2, but most should function as expected.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Check Which System is the Python based on</title>
    <link href="/2024/01/10/Check-Which-System-is-the-Python-based-on/"/>
    <url>/2024/01/10/Check-Which-System-is-the-Python-based-on/</url>
    
    <content type="html"><![CDATA[<p>When installing some libraries in Python, I sometimes encounter theproblem of mis installing the version of python. Sometimes I need alibrary on my M1 Pro chip but my conda installed x86 version. Here aresome method to check which python you installed.</p><h1 id="check-if-the-python-installed-is-x86-or-arm">Check if the pythoninstalled is x86 or arm</h1><p>To determine whether the Python installation on your system is x86(32-bit or 64-bit Intel architecture) or ARM (architecture used in manymodern mobile devices and the Apple M1/M2 chips), you can use Pythonitself to check. Follow these steps:</p><ol type="1"><li><p><strong>Open Python Interpreter</strong>: Open a terminal orcommand prompt and type <code>python</code> or <code>python3</code>,then press Enter. This will open the Python interpreter.</p></li><li><p><strong>Check System Architecture</strong>: In the Pythoninterpreter, enter the following commands:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> platform<br><span class="hljs-built_in">print</span>(platform.machine())<br></code></pre></td></tr></table></figure></li></ol><p>This command will output the architecture type of your Pythoninstallation. Here's what the outputs generally mean:</p><ul><li><strong>Outputs like 'x86', 'x86_64', 'AMD64'</strong>: Theseindicate an x86 architecture (32-bit or 64-bit Intel or AMDprocessors).</li><li><strong>Outputs like 'arm64', 'aarch64'</strong>: These indicate anARM architecture (common in modern mobile devices, and Apple's M1/M2series chips).</li></ul><p>Let's run this code in the current Python environment todemonstrate.</p><p>The output from the Python environment here is <code>'x86_64'</code>,which indicates that this Python installation is running on an x86architecture, specifically a 64-bit Intel or AMD processor.</p><p>You can use the same method on your system to check whether yourPython installation is x86 or ARM.</p><h1 id="is-there-a-command-line-version">Is there a command lineversion?</h1><p>Yes, there is a command-line method to check the architecture of thePython installation without entering the Python interpreter. You can usethe following command in your terminal or command prompt:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -c <span class="hljs-string">&quot;import platform; print(platform.machine())&quot;</span><br></code></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 -c <span class="hljs-string">&quot;import platform; print(platform.machine())&quot;</span><br></code></pre></td></tr></table></figure><p>This command executes a short Python script directly from the commandline. It imports the <code>platform</code> module and prints out themachine type, which indicates the architecture.</p><ul><li>If the output is something like <code>'x86'</code>,<code>'x86_64'</code>, or <code>'AMD64'</code>, it's an x86architecture.</li><li>If it says <code>'arm64'</code>, <code>'aarch64'</code>, or similar,it's an ARM architecture.</li></ul><p>You should choose <code>python</code> or <code>python3</code> basedon how Python is installed on your system. Some systems may use<code>python</code> for Python 2 and <code>python3</code> for Python 3,while others might only have Python 3 installed as<code>python</code>.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Some Comparing lemmas in analysis (epsilon delta language)</title>
    <link href="/2023/12/18/Some-Comparing-lemmas-in-analysis-epsilon-delta-language/"/>
    <url>/2023/12/18/Some-Comparing-lemmas-in-analysis-epsilon-delta-language/</url>
    
    <content type="html"><![CDATA[<h1 id="lemma-of-less-than">lemma of "less than"</h1><h2 id="content">Content:</h2><p><span class="math inline">\(x, y \in \Bbb{R}\)</span>, <spanclass="math inline">\(\forall \epsilon \gt 0\)</span>, <spanclass="math inline">\(x \lt y + \epsilon\)</span>, then <spanclass="math inline">\(x \leq y\)</span></p><h2 id="proof">Proof</h2><img src="/2023/12/18/Some-Comparing-lemmas-in-analysis-epsilon-delta-language/less_than.jpg" class="" title="Proof"><h1 id="lemma-of-equal">lemma of "Equal"</h1><h2 id="content-1">Content:</h2><p><span class="math inline">\(x, y \in \Bbb{R}\)</span>, <spanclass="math inline">\(\forall \epsilon \gt 0\)</span>, <spanclass="math inline">\(x = y + \epsilon\)</span>, then <spanclass="math inline">\(x = y\)</span></p><h2 id="proof-1">Proof</h2><img src="/2023/12/18/Some-Comparing-lemmas-in-analysis-epsilon-delta-language/equal.jpg" class="" title="Proof">]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Analysis</tag>
      
      <tag>Real Analysis</tag>
      
      <tag>Metric</tag>
      
      <tag>Functional Space</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>A Fun Limit: relationship between (n!)^(1/n) and n</title>
    <link href="/2023/12/18/A-Fun-Limit-relationship-between-n-1-n-and-n/"/>
    <url>/2023/12/18/A-Fun-Limit-relationship-between-n-1-n-and-n/</url>
    
    <content type="html"><![CDATA[<p>We all know that <span class="math inline">\(n^n &gt;&gt; n! &gt;&gt;a^n &gt;&gt; n^a &gt;&gt; n\)</span>, but what about <spanclass="math inline">\((n!)^{\frac{1}{n}}\)</span> and <spanclass="math inline">\(n\)</span>?</p><h1 id="proof">Proof</h1><img src="/2023/12/18/A-Fun-Limit-relationship-between-n-1-n-and-n/limit_proof.jpg" class="" title="Proof"><h2 id="a-lemma">A lemma</h2><p>The proof of</p><p><span class="math display">\[\liminf _{n\rightarrow \infty }\dfrac{a_{n+1}}{a_{n}}\leq \liminf_{n\rightarrow \infty }\sqrt[n] {a_n}\leq \limsup _{n\rightarrow \infty}\sqrt[n] {a_n}\leq \limsup _{n\rightarrow \infty }\dfrac{a_{n}+1}{a_n}\]</span></p><p>Can be found <ahref="/2023/12/18/Relationship-between-Ratio-and-Root-test/">here</a></p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Analysis</tag>
      
      <tag>Real Analysis</tag>
      
      <tag>Limit</tag>
      
      <tag>Order of infinity</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Relationship between Ratio and Root test</title>
    <link href="/2023/12/18/Relationship-between-Ratio-and-Root-test/"/>
    <url>/2023/12/18/Relationship-between-Ratio-and-Root-test/</url>
    
    <content type="html"><![CDATA[<h1 id="proof">Proof</h1><img src="/2023/12/18/Relationship-between-Ratio-and-Root-test/Root_Ratio_1.jpg" class="" title="Proof part 1"><img src="/2023/12/18/Relationship-between-Ratio-and-Root-test/Root_Ratio_2.jpg" class="" title="Proof part 2"><h1 id="more-information">More information</h1><ul><li>Mathematical Association of America: <ahref="https://maa.org/sites/default/files/0025570x33450.di021200.02p0190s.pdf">TheRelation Between the Root and Ratio Tests</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Analysis</tag>
      
      <tag>Real Analysis</tag>
      
      <tag>Limit</tag>
      
      <tag>Order of infinity</tag>
      
      <tag>Ratio Test</tag>
      
      <tag>Root Test</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>convergence of sum of sin(aknx)/n</title>
    <link href="/2023/12/17/convergence-of-sum-of-sin-aknx-n/"/>
    <url>/2023/12/17/convergence-of-sum-of-sin-aknx-n/</url>
    
    <content type="html"><![CDATA[<h1 id="the-prove">The prove</h1><p>The convergence of the sum of <spanclass="math inline">\(\sum_{n=1}^{\infty}\frac{sin(anx)}{x}\)</span></p><img src="/2023/12/17/convergence-of-sum-of-sin-aknx-n/sin_pic1.jpg" class=""><img src="/2023/12/17/convergence-of-sum-of-sin-aknx-n/sin_pic2.jpg" class=""><h1 id="conclusion">Conclusion</h1><p>Thus, we conclude that</p><p><span class="math display">\[\sum_{n=1}^{\infty} \frac{sin(anx)}{x}\]</span></p><ul><li>Pointwise convergent (only) on open interval <spanclass="math inline">\(\left(0, 2\pi\right)\)</span>;</li><li>Uniformly convergent on any close sub interval of <spanclass="math inline">\(\left(0, 2\pi\right)\)</span>.</li><li>The series on the other hand converges for every <spanclass="math inline">\(x\)</span>.</li></ul><h1 id="more-information-about-the-theroem">More information about thetheroem</h1><p>More information can be found:</p><ul><li>Math.stackexchagne:<ul><li><ahref="https://math.stackexchange.com/questions/4332419/on-the-pointwise-convergence-of-sum-n-ge-1-frac-sin-nxn-to-the-sawtoot">Pointwisecovergent of <span class="math inline">\(\sum_{n=1}^{\infty}\frac{sin(anx)}{x}\)</span></a></li><li><ahref="https://math.stackexchange.com/questions/1215465/showing-sum-frac-sinnxn-converges-pointwise">Showing<span class="math inline">\(\sum_{n=1}^{\infty}\frac{sin(anx)}{x}\)</span> converges pointwise</a></li></ul></li><li>Reddit<ul><li><ahref="https://www.reddit.com/r/math/comments/aee8c/%CF%83einxn_is_what_function/">Σe^(inx)/nis what function?</a></li></ul></li><li>Related YouTube Videos:<ul><li><ahref="https://www.youtube.com/watch?v=z1DEAX6lPOg&amp;ab_channel=blackpenredpen">usingcomplex numbers to evaluate the sum of sin(n)/n</a></li></ul></li><li>A Chinese Video Platform:<ul><li><ahref="https://www.bilibili.com/video/BV16h4y1K729/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d84085799dfdb99d199a04d156250394">Pointwisecovergent of <span class="math inline">\(\sum_{n=1}^{\infty}\frac{sin(anx)}{x}\)</span></a></li></ul></li><li>A Chinese text forum:<ul><li><ahref="https://www.zhihu.com/question/464373158">∑(∞，n=1)sinnx/n,D=(0,2π)一致收敛余项准则能做吗？</a></li></ul></li><li>Related Theroems:<ul><li><ahref="https://en.wikipedia.org/wiki/Dirichlet%27s_test">Dirichlet'stest</a></li></ul></li><li>Similar Questions:<ul><li><ahref="https://www.zhihu.com/question/462036978/answer/1912301484">怎么求∑(1→∞)sin²n/n² 的和？</a></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Analysis</tag>
      
      <tag>Real Analysis</tag>
      
      <tag>Limit</tag>
      
      <tag>Order of infinity</tag>
      
      <tag>Convergence of Sum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>x &gt; sinx: Three ways of proving</title>
    <link href="/2023/12/15/x-sinx-Three-ways-of-proving/"/>
    <url>/2023/12/15/x-sinx-Three-ways-of-proving/</url>
    
    <content type="html"><![CDATA[<p>More information can be found here:</p><ul><li>A Chinese Platform: <ahref="https://www.zhihu.com/question/20142934">How to prove <spanclass="math inline">\(sin(x) &lt; x\)</span> regiously?</a></li><li>Math.stackexchange: <ahref="https://math.stackexchange.com/questions/2433051/sine-inequality-how-to-prove-that-sinx-le-x-for-x-in-mathbbr">Sineinequality: How to prove that <spanclass="math inline">\(|sin(𝑥)|≤|𝑥|\)</span></a></li></ul><img src="/2023/12/15/x-sinx-Three-ways-of-proving/Way1.jpg" class="" title="Description and Way1"><img src="/2023/12/15/x-sinx-Three-ways-of-proving/Way2.jpg" class="" title="Description and Way1"><img src="/2023/12/15/x-sinx-Three-ways-of-proving/Way3.jpg" class="" title="Description and Way1">]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Metric in L^p</title>
    <link href="/2023/11/24/Metric-in-L-p/"/>
    <url>/2023/11/24/Metric-in-L-p/</url>
    
    <content type="html"><![CDATA[<h1 id="metric-in-lp">Metric in L^p</h1><p>This is a note for proof of</p><p><span class="math display">\[\left[ \int _{a}^{b}\left| f\left( x\right) \right|^{p}dx\right]^{\frac{1}{p}}\]</span></p><p>is a norm of <span class="math inline">\(L^p\)</span> space. Here isthe structure of the whole proof (separated into different blogs):<img src="/2023/11/24/Metric-in-L-p/structure_of_the_prove.png" class="" title="structure of the notes"></p><h1 id="general-introduction">General introduction</h1><p>In this prove, we will use <ahref="https://en.wikipedia.org/wiki/Young%27s_inequality_for_products">Young'sinequality for products</a> to prove <ahref="https://en.wikipedia.org/wiki/H%C3%B6lder%27s_inequality">Hölder'sinequality</a>, then prove <ahref="https://en.wikipedia.org/wiki/Minkowski_inequality">Minkowskiinequality</a>.</p><p>The proof of <ahref="https://en.wikipedia.org/wiki/Young%27s_inequality_for_products">Young'sinequality for products</a> has been shown in my other blog: <ahref="https://blog.slray.com/2023/11/24/Three-Ways-of-Proving-Young-s-inequality-for-products/">ThreeWays of Proving Young's inequality for products</a></p><h1 id="llama">Llama:</h1><h2 id="youngs-inequality-for-products"><strong>Young's inequality forproducts:</strong></h2><p><span class="math inline">\(a, b, p, q \in \Bbb{R}\)</span></p><p>If <span class="math inline">\(a ≥ 0\)</span> and <spanclass="math inline">\(b ≥ 0\)</span>, and if <spanclass="math inline">\(p &gt; 1\)</span> and <spanclass="math inline">\(q &gt; 1\)</span> such that <spanclass="math inline">\(\dfrac{1}{p}+\dfrac{1}{q}=1\)</span>, then</p><p><span class="math display">\[ab\leq \dfrac{a^{p}}{p}+\dfrac{b^{q}}{q}.\]</span></p><p>Equality holds if and only if <span class="math inline">\(a^p =b^q\)</span>.</p><hr /><p>I met this theorem in Rudin’s <ahref="https://web.math.ucsb.edu/~agboola/teaching/2021/winter/122A/rudin.pdf">PRINCIPLESOF MATHEMATICAL ANALYSIS</a> Exercise 6.10.</p><h1 id="proof-of-hölders-inequality">Proof of <ahref="https://en.wikipedia.org/wiki/H%C3%B6lder%27s_inequality">Hölder'sinequality</a></h1><h2 id="hölders-inequality-continuous"><ahref="https://en.wikipedia.org/wiki/H%C3%B6lder%27s_inequality">Hölder'sinequality</a> (continuous)</h2><p><span class="math inline">\(f, g\)</span> is continuous on <spanclass="math inline">\([a, b]\)</span>, then</p><p><span class="math display">\[\int ^{b}_{a}\left| f\left( x\right) g\left( x\right) \right| dx\leq\left[ \int _{a}^{b}\left| f\left( x\right) \right| ^{p}dx\right]^{\dfrac{1}{p}}\left[ \int _{a}^{b}\left| g\left( x\right) \right|^qdx\right] ^{\dfrac{1}{q}},\]</span></p><p>where <span class="math inline">\(p&gt;1\)</span>, and <spanclass="math inline">\(p\)</span> and <spanclass="math inline">\(q\)</span> conjugate (<spanclass="math inline">\(\frac{1}{p} + \frac{1}{q} = 1\)</span>).</p><p>Equality holds if one of <span class="math inline">\(f, g\)</span> iszero, or exist <span class="math inline">\(\lambda\)</span> and <spanclass="math inline">\(\mu\)</span> (<spanclass="math inline">\(\lambda\mu &gt; 0\)</span>) such that</p><p><span class="math display">\[\lambda\left|f\right|^p = \mu\left|g\right|^q\]</span></p><h2 id="remark-of-the-theorem">Remark of the theorem</h2><p>Notice this is actually the <ahref="https://en.wikipedia.org/wiki/Inner_product_space">innerproduct</a> of functions. I learned the concept of inner product spacein <ahref="https://math.berkeley.edu/courses/choosing/lowerdivcourses/math54">Math54 - Linear Algebra &amp; Differential Equations</a> at UC Berkeley.Here is a <ahref="https://www.youtube.com/watch?v=mFXpwNaYCMQ&amp;list=PLShth7hrtLHO2U1XkrI6ZgMyuPHDxRcob&amp;index=93&amp;ab_channel=LuvreetSangha">video</a>introducing the concept.</p><p>In this way, the equality-hold-condition can be seen as two vectors(functions) are <ahref="https://en.wikipedia.org/wiki/Linear_independence">linearlydependent</a>.</p><p>The discrete form of <ahref="https://en.wikipedia.org/wiki/H%C3%B6lder%27s_inequality">Hölder'sinequality</a> thus could be see as vectors in <spanclass="math inline">\(\Bbb{R}^n\)</span>.</p><h2 id="proof-of-hölders-inequality-continuous">Proof of <ahref="https://en.wikipedia.org/wiki/H%C3%B6lder%27s_inequality">Hölder'sinequality</a> (continuous)</h2><p>Let</p><p><span class="math display">\[\begin{aligned}A=\dfrac{\left| f\left( x\right) \right| }{\left( \int_{a}^{b}\left| f\left( x\right) \right| ^{p}dx\right) ^{\dfrac{1}{p}}}\\B=\dfrac{\left| g\left( x\right) \right| }{\left( \int _{a}^{b}\left|g\left( x\right) \right| ^{q}dx\right) ^{\dfrac{1}{q}}}\end{aligned}\]</span></p><blockquote><p>We will first see <span class="math inline">\(AB ≤\dfrac{A^{p}}{p}+\dfrac{B^{q}}{q}\)</span>, then we integral both sideto get right side (<spanclass="math inline">\(\dfrac{A^{p}}{p}+\dfrac{B^{q}}{q}\)</span>) be<span class="math inline">\(1\)</span>, then we see the relationshipbetween the denominator and numerator.</p></blockquote><p>We have</p><p><span class="math display">\[\begin{aligned}AB &amp;= \dfrac{\left| f\left( x\right) \right| \left| g\left( x\right)\right| }{\left(  \int _{a}^{b}|f\left( x\right) | ^{p}dx\right)^{\dfrac{1}{p}}\left( \int _{a}^{b}\left| g\left( x\right) \right|^{q}dx\right)^{\dfrac{1}{q}}} \\&amp;\leq \dfrac{A^{p}}{p}+\dfrac{B^{q}}{q} \\&amp;= \dfrac{1}{p}\cdot \dfrac{\left| f\left( x\right) \right|^{p}}{\int _{a}^{b}\left| f\left( x\right) \right|^{p}dx}+\dfrac{1}{q}\cdot \dfrac{\left| g\left( x\right) \right|^{q}}{\int _{a}^{b}\left| g\left( x\right) \right| ^{q}dx}\end{aligned}\]</span></p><p>Rewrite in a clean way:</p><p><span class="math display">\[\dfrac{\left| f\left( x\right) \right| \left| g\left( x\right) \right|}{\left(  \int _{a}^{b}|f\left( x\right) | ^{p}dx\right)^{\dfrac{1}{p}}\left( \int _{a}^{b}\left| g\left( x\right) \right|^{q}dx\right)^{\dfrac{1}{q}}}\le \dfrac{1}{p}\cdot \dfrac{\left| f\left( x\right) \right| ^{p}}{\int_{a}^{b}\left| f\left( x\right) \right| ^{p}dx}+\dfrac{1}{q}\cdot\dfrac{\left| g\left( x\right) \right| ^{q}}{\int _{a}^{b}\left| g\left(x\right) \right| ^{q}dx}\]</span></p><p>We integrate both side and get</p><p><span class="math display">\[\begin{aligned}\int ^{b}_{a}ABdx&amp;=\int _{a}^{b}\dfrac{ |f\left( x\right) \left| \right| g\left(x\right) | }{\left( \int _{a}^{b}\left| f\left( x\right) \right|^{p}dx\right) ^{\dfrac{1}{p}}\left(  \int _{a}^{b}|g(x)| ^{q}dx\right)^{\dfrac{1}{q}}}dx \\&amp;=\dfrac{ \int _{a}^{b}|f\left( x\right) \left| \right| g\left(x\right) | dx}{\left( \int _{a}^{b}\left| f\left( x\right) \right|^{p}dx\right) ^{\dfrac{1}{p}}\left(  \int _{a}^{b}|g(x)| ^{q}dx\right)^{\dfrac{1}{q}}}\\&amp;\leq \int _{a}^{b}\dfrac{1}{p}\cdot \dfrac{\left| f\left( x\right)\right| ^{p}}{ \int ^{b}_{a}| f\left( x\right)|^{p}dx}dx+\int_{a}^{b}\dfrac{1}{q}\cdot\dfrac{\left| g\left( x\right) \right|^{q}}{\int _{a}^{b}\left| g\left( x\right) \right| ^{q}dx}dx\\&amp;=\dfrac{1}{p}\int _{a}^{b}\dfrac{\left| f\left( x\right) \right|^{p}}{\int ^{b}_{a}\left| f\left( x\right) \right|^{p}dx}dx+\dfrac{1}{q}\int _{a}^{b}\dfrac{\left| g\left( x\right)\right| ^{q}}{\int _{a}^{b}\left| g\left( x\right) \right| ^{q}dx}dx\\&amp;=\dfrac{1}{p}\cdot \dfrac{\int _{a}^{b}\left| f\left( x\right)\right| ^{p}dx}{\int ^{b}_{a}\left| f\left( x\right) \right|^{p}dx}+\dfrac{1}{q}\cdot \dfrac{\int _{a}^{b}\left| g\left( x\right)\right| ^{q}dx}{\int _{a}^{b}\left| g\left( x\right) \right| ^{q}dx}\\&amp;=\dfrac{1}{p}+\dfrac{1}{q}\\&amp;=1\end{aligned}\]</span></p><blockquote><p>Note that <span class="math inline">\(\left( \int _{a}^{b}\left|f\left( x\right) \right| ^{p}dx\right) ^{\dfrac{1}{p}}\)</span>and <spanclass="math inline">\(\left( \int _{a}^{b}\left| g\left( x\right)\right| ^{q}dx\right) ^{\dfrac{1}{q}}\)</span> are both constant, thuswhen integrate over them, they remain the same.</p></blockquote><p>Rewrite in a clean way:</p><p><span class="math display">\[\begin{aligned}\dfrac{ \int _{a}^{b}|f\left( x\right) \left| \right| g\left( x\right) |dx}{\left( \int _{a}^{b}\left| f\left( x\right) \right| ^{p}dx\right)^{\dfrac{1}{p}}\left(  \int _{a}^{b}|g(x)| ^{q}dx\right)^{\dfrac{1}{q}}}&amp;\leq1\\\int _{a}^{b}|f\left( x\right) \left| \right| g\left( x\right) | dx&amp;\leq\left( \int _{a}^{b}\left| f\left( x\right) \right| ^{p}dx\right)^{\dfrac{1}{p}}\left(  \int _{a}^{b}|g(x)| ^{q}dx\right) ^{\dfrac{1}{q}}\end{aligned}\]</span></p><p>By this, we proved the theorem.</p><h1 id="proof-of-hölders-inequality-discrete">Proof of Hölder'sInequality (discrete)</h1><p>Consider two sequences <span class="math inline">\((\mathbf{a} =(a_1, a_2, ..., a_n))\)</span> and <spanclass="math inline">\((\mathbf{b} = (b_1, b_2, ..., b_n))\)</span>, andlet <span class="math inline">\(p, q &gt; 1\)</span> with <spanclass="math inline">\(\frac{1}{p} + \frac{1}{q} = 1\)</span>. We want toshow that</p><p><span class="math display">\[\sum_{i=1}^{n} a_i b_i \leq \left( \sum_{i=1}^{n} a_i^p\right)^{\frac{1}{p}} \left( \sum_{i=1}^{n} b_i^q \right)^{\frac{1}{q}}.\]</span></p><p>Define the sequences <span class="math inline">\(A_i\)</span> and<span class="math inline">\(B_i\)</span> as follows:</p><p><span class="math display">\[A_i = \frac{a_i}{\left( \sum_{i=1}^{n} a_i^p \right)^{\frac{1}{p}}},\quad B_i = \frac{b_i}{\left( \sum_{i=1}^{n} b_i^q\right)^{\frac{1}{q}}}, \quad i=1,2,...,n.\]</span></p><p>From Young's inequality, we have <span class="math inline">\(a_i b_i\leq \frac{1}{p} a_i^p + \frac{1}{q} b_i^q\)</span>, or in terms of<span class="math inline">\(A_i\)</span> and <spanclass="math inline">\(B_i\)</span>:</p><p><span class="math display">\[A_i B_i \leq \frac{1}{p} A_i^p + \frac{1}{q} B_i^q, \quad i=1,2,...,n.\]</span></p><p>Summing over all <span class="math inline">\(i\)</span>, we get</p><p><span class="math display">\[\sum_{i=1}^{n} A_i B_i \leq \sum_{i=1}^{n} \left( \frac{1}{p} A_i^p +\frac{1}{q} B_i^q \right) = \frac{1}{p} \sum_{i=1}^{n} A_i^p +\frac{1}{q} \sum_{i=1}^{n} B_i^q.\]</span></p><p>Since the right-hand side equals <spanclass="math inline">\(\frac{1}{p} + \frac{1}{q} = 1\)</span>, wehave</p><p><span class="math display">\[\sum_{i=1}^{n} a_i b_i = \left( \sum_{i=1}^{n} a_i^p\right)^{\frac{1}{p}} \left( \sum_{i=1}^{n} b_i^q \right)^{\frac{1}{q}}\sum_{i=1}^{n} A_i B_i \leq \left( \sum_{i=1}^{n} a_i^p\right)^{\frac{1}{p}} \left( \sum_{i=1}^{n} b_i^q \right)^{\frac{1}{q}}.\]</span></p><p>This concludes the proof of Hölder's inequality in its discreteform.</p><h2 id="connection-to-the-cauchy-schwarz-inequality">Connection to theCauchy-Schwarz Inequality</h2><p>Note that for <span class="math inline">\(p = q = 2\)</span>,Hölder's inequality reduces to the well-known Cauchy-Schwarzinequality:</p><p><span class="math display">\[(a, b)^2 \leq (a, a)(b, b) \Rightarrow (a, b) \leq \sqrt{(a, a)(b, b)}.\]</span></p><p>The discrete version of Hölder's inequality is thus a generalizationof the Cauchy-Schwarz inequality to <spanclass="math inline">\(\Bbb{R}^n\)</span>.</p><h1 id="proof-of-minkowski-inequality">Proof of <ahref="https://en.wikipedia.org/wiki/Minkowski_inequality">Minkowskiinequality</a></h1><h2 id="minkowski-inequality-continuous"><ahref="https://en.wikipedia.org/wiki/Minkowski_inequality">Minkowskiinequality</a> (continuous)</h2><p>Let <span class="math inline">\(f, g\)</span> be functions on theinterval <span class="math inline">\([a, b]\)</span>, and let <spanclass="math inline">\(p &gt; 1\)</span>. Minkowski's inequality statesthat</p><p><span class="math display">\[\left( \int_{a}^{b} |f(x) + g(x)|^p dx \right)^{\frac{1}{p}} \leq \left(\int_{a}^{b} |f(x)|^p dx \right)^{\frac{1}{p}} + \left( \int_{a}^{b}|g(x)|^p dx \right)^{\frac{1}{p}}.\]</span></p><p>where <span class="math inline">\(p&gt;1\)</span>. Equality holds iffthere exist <span class="math inline">\(\lambda ≥ 0\)</span> such that<span class="math inline">\(f = \lambda g\)</span> or <spanclass="math inline">\(g = \lambda f\)</span></p><h2 id="proof-of-minkowski-inequality-continuous-form">Proof of <ahref="https://en.wikipedia.org/wiki/Minkowski_inequality">Minkowskiinequality</a> (continuous form)</h2><p>The proof begins with the triangle inequality:</p><p><span class="math display">\[\begin{aligned}\int_{a}^{b} |f(x) + g(x)|^p dx &amp;= \int_{a}^{b} |f(x) +g(x)|^{p-1}|f(x) + g(x)| dx\\&amp;\leq \int_{a}^{b} |f(x) + g(x)|^{p-1}|f(x)| dx + \int_{a}^{b} |f(x)+ g(x)|^{p-1}|g(x)| dx\end{aligned}\]</span></p><p>Apply Hölder's inequality to the right-hand side:</p><p>One of them is</p><p><span class="math display">\[\int_{a}^{b} |f(x) + g(x)|^{p-1}|f(x)| dx \leq \left[\int_{a}^{b} |f(x)+ g(x)|^p dx \right]^{\frac{p-1}{p}} \left\{\int_{a}^{b}|f(x)|^{p}dx\right\}^{\frac{1}{p}}\]</span></p><p>Thus</p><p><span class="math display">\[\int_{a}^{b} |f(x) + g(x)|^{p-1}|f(x)| dx + \int_{a}^{b} |f(x) +g(x)|^{p-1}|g(x)| dx \\\leq \left[\int_{a}^{b} |f(x) + g(x)|^p dx \right]^{\frac{p-1}{p}}\left\{\left[\int_{a}^{b} |f(x)|^{p}dx\right]^{\frac{1}{p}} +\left[\int_{a}^{b} |g(x)|^{p}dx\right]^{\frac{1}{p}}\right\}\]</span></p><p>Divide <span class="math inline">\(\left[\int_{a}^{b} |f(x) + g(x)|^pdx \right]\)</span>to both side of the equation, we got</p><p><span class="math display">\[\left( \int_{a}^{b} |f(x) + g(x)|^p dx \right)^{\frac{1}{p}} \leq \left(\int_{a}^{b} |f(x)|^p dx \right)^{\frac{1}{p}} + \left( \int_{a}^{b}|g(x)|^p dx \right)^{\frac{1}{p}}.\]</span></p><p>This completes the proof of Minkowski's inequality.</p><h2 id="minkowski-inequality-discrete"><ahref="https://en.wikipedia.org/wiki/Minkowski_inequality">Minkowskiinequality</a> (discrete)</h2><p>For sequences <span class="math inline">\(\mathbf{a} = (a_1, a_2,..., a_n)\)</span> and <span class="math inline">\(\mathbf{b} = (b_1,b_2, ..., b_n)\)</span> with <span class="math inline">\(p &gt;1\)</span>, Minkowski's inequality can be expressed as:</p><p><span class="math display">\[\left( \sum_{i=1}^{n} |a_i + b_i|^p \right)^{\frac{1}{p}} \leq \left(\sum_{i=1}^{n} |a_i|^p \right)^{\frac{1}{p}} + \left( \sum_{i=1}^{n}|b_i|^p \right)^{\frac{1}{p}}.\]</span></p><p>where <span class="math inline">\(p&gt;1\)</span>. Equality holds iffthere exist <span class="math inline">\(\lambda ≥ 0\)</span> such that<span class="math inline">\(\mathbf{a} = \lambda \mathbf{b}\)</span> or<span class="math inline">\(\mathbf{b} = \lambda \mathbf{a}\)</span></p><h2 id="proof-of-minkowski-inequality-discrete-form">Proof of <ahref="https://en.wikipedia.org/wiki/Minkowski_inequality">Minkowskiinequality</a> (discrete form)</h2><p><span class="math display">\[\left( \sum_{i=1}^{n} |a_i + b_i|^p \right)^{\frac{1}{p}} \leq \left(\sum_{i=1}^{n} |a_i|^p \right)^{\frac{1}{p}} + \left( \sum_{i=1}^{n}|b_i|^p \right)^{\frac{1}{p}}.\]</span></p><p>The proof utilizes the triangle inequality in the following way:</p><p><span class="math display">\[\sum_{i=1}^{n} |a_i + b_i|^p = \sum_{i=1}^{n} |a_i + b_i|^{p-1}|a_i +b_i|.\]</span></p><p>By applying the triangle inequality, of</p><p><span class="math display">\[|a_i + b_i|^{p-1}|a_i + b_i| \leq |a_i + b_i|^{p-1}|a_i| + |a_i +b_i|^{p-1}|b_i|.\]</span></p><p>We get</p><p><span class="math display">\[\sum_{i=1}^{n} |a_i + b_i|^p = \sum_{i=1}^{n} |a_i + b_i|^{p-1}|a_i +b_i| \leq \sum_{i=1}^{n} |a_i + b_i|^{p-1}|a_i| + \sum_{i=1}^{n} |a_i +b_i|^{p-1}|b_i|\]</span></p><p>From Hölder's inequality we get</p><p><span class="math display">\[\sum_{i=1}^{n} |a_i + b_i|^{p-1}|a_i| + \sum_{i=1}^{n} |a_i +b_i|^{p-1}|b_i| \leq \left(\sum_{i=1}^{n} |a_i +b_i|^{p}\right)^{\frac{p-1}{p}} \left[ \left(\sum_{i=1}^{n}|a_i|^p\right)^{\frac{1}{p}} + \left(\sum_{i=1}^{n}|b_i|^p\right)^{\frac{1}{p}}\right]\]</span></p><p>Dividing both sides by <span class="math inline">\(\left(\sum_{i=1}^{n} |a_i + b_i|^{p} \right)^{\frac{p-1}{p}}\)</span>, wearrive at Minkowski's inequality:</p><p><span class="math display">\[\left( \sum_{i=1}^{n} |a_i + b_i|^p \right)^{\frac{1}{p}} \leq \left(\sum_{i=1}^{n} |a_i|^p \right)^{\frac{1}{p}} + \left( \sum_{i=1}^{n}|b_i|^p \right)^{\frac{1}{p}}.\]</span></p><p>This concludes the proof of the discrete form of Minkowski'sinequality.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Math</category>
      
      <category>Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Analysis</tag>
      
      <tag>Real Analysis</tag>
      
      <tag>Metric</tag>
      
      <tag>Functional Space</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Rudin Analysis Exercise 2.23</title>
    <link href="/2023/10/31/Rudin-Analysis-Exercise-2-23/"/>
    <url>/2023/10/31/Rudin-Analysis-Exercise-2-23/</url>
    
    <content type="html"><![CDATA[<h1 id="rudin-e2.23">Rudin E2.23</h1><p>This question is a prerequisite for Exercise 2.25, which correspondsto the Exercise 43.4 in <em>Foundations of MathematicalAnalysis</em></p><h1 id="question">Question</h1><p>Exercise 2.23 A collection <span class="math inline">\({V_α}\)</span>of open sets of <span class="math inline">\(X\)</span> is said to be abase for <span class="math inline">\(X\)</span> if the following istrue: For every <span class="math inline">\(x \in X\)</span> and everyopen set <span class="math inline">\(G \subset X\)</span> such that<span class="math inline">\(x \in G\)</span> , we have <spanclass="math inline">\(x \in V_\alpha \subset G\)</span> for some <spanclass="math inline">\(\alpha\)</span>. In other words, every open set in<span class="math inline">\(X\)</span> is the union of a subcollectionof <span class="math inline">\({V_\alpha}\)</span>.<strong>Prove</strong> that every separable metric space has a countablebase. Hint: Take all neighborhoods with rational radius and center insome countable dense subset of <spanclass="math inline">\(X\)</span>.</p><blockquote><p>A metric space is called <em>separable</em> if it contains acountable dense subset.</p></blockquote><h2 id="understand">Understand:</h2><p>For this question, we need to prove two things: there is a base andthe base is countable (remember base is a collection of set—set ofset).</p><p>We are given that <span class="math inline">\(X\)</span> isseparable. This is a hint itself. <span class="math inline">\(X\)</span>will contain a countable dense subset. This provide a feature ofcountable.</p><p>If we see the hint, we can also connect the countability with therational radius.</p><h2 id="prove">Prove:</h2><p>Since <span class="math inline">\(X\)</span> is separable, let <spanclass="math inline">\(\{x_1, x_2, …\}\)</span> be a dense (alsocountable) subset of <span class="math inline">\(X\)</span>.</p><p><span class="math inline">\(\forall m \in \Bbb{N}, r\in \Bbb{Q}, r\gt 0\)</span>, we let <span class="math inline">\(V_{m, r} = \{y : y\in N_{r}(x_m)\}\)</span>.</p><p>Since <span class="math inline">\(\Bbb{Q}, \Bbb{N}\)</span> are bothcountable, thus the collection of <span class="math inline">\(V_{m,r}\)</span> is countable.</p><p>(Notice this is not saying that <span class="math inline">\(V_{m,r}\)</span> is countable, this is saying that <spanclass="math inline">\(\{V_{m, r}\}_{m, r}\)</span> is countable)</p><p>Let <span class="math inline">\(V = \{V_{m, r}\}\)</span></p><p>Also, <span class="math inline">\(V_{m, r}\)</span> is open.(Actually <span class="math inline">\(V_{m, r} = N_{r}(x_m)\)</span>,which is open.)</p><p>Thus we found a countable collection of open set <spanclass="math inline">\(V\)</span>.</p><p>Now we will prove this <span class="math inline">\(V\)</span> is abase for <span class="math inline">\(X\)</span>.</p><p>To achieve this, we generally want to show: <spanclass="math inline">\(\forall \ open \ G \subset X, \exists V_{m,r} \inV: V \subset G\)</span></p><p>Yet this is of course not enough, to we actually need to also showthat for all points in <span class="math inline">\(G\)</span>, there isa <span class="math inline">\(V_{m, r} \in V\)</span> such that thispoint also in <span class="math inline">\(V_{m, r}\)</span></p><p>Let <span class="math inline">\(x \in X\)</span>, <spanclass="math inline">\(\exists \ open \ G: x \in G\)</span>. Since <spanclass="math inline">\(G\)</span> is open, all points in <spanclass="math inline">\(G\)</span> must be interior points of <spanclass="math inline">\(G\)</span>.</p><p>Thus <span class="math inline">\(x\)</span> is an interior point of<span class="math inline">\(G\)</span>. Thus, <spanclass="math inline">\(\exists \delta: N_\delta(x) \in G\)</span>.</p><p>Since <span class="math inline">\(\{x_1, x_2, …\}\)</span> is densein <span class="math inline">\(X\)</span>, <spanclass="math inline">\(\exists k \in N: x_k \inN_{\frac{\delta}{2}}(x)\)</span>.</p><p>This also means that <span class="math inline">\(x \inN_{\frac{\delta}{2}}(x_k)\)</span>. Thus <span class="math inline">\(x\in V_{k, \frac{\delta}{2}}\)</span>. Thus, <spanclass="math inline">\(V\)</span> is a base of <spanclass="math inline">\(X\)</span>.</p><hr /><p>The original proof I saw was from</p><img src="/2023/10/31/Rudin-Analysis-Exercise-2-23/original_E_2_23.png" class="" title="original question and proof"><p><ahref="https://minds.wisconsin.edu/bitstream/handle/1793/67009/rudin%20ch%202.pdf?sequence=10&amp;isAllowed=y">https://minds.wisconsin.edu/bitstream/handle/1793/67009/rudinch 2.pdf?sequence=10&amp;isAllowed=y</a></p><p>I was wondering the following questions:</p><ul><li>Why we need rational radius.</li><li>Why do we always have such <span class="math inline">\(x_k\)</span>in the open ball.</li><li>What is the second part doing.</li></ul><p>I provided my understanding of the proof.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Learning Logs</category>
      
      <category>Math</category>
      
      <category>Analysis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
      <tag>Analysis</tag>
      
      <tag>Real Analysis</tag>
      
      <tag>Rudin</tag>
      
      <tag>Countablility</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Operator Precedence in C</title>
    <link href="/2023/10/26/Operator-Precedence-in-C/"/>
    <url>/2023/10/26/Operator-Precedence-in-C/</url>
    
    <content type="html"><![CDATA[<p>This blog record how I debugged a problem while I was implementingfloat subtraction solely based on integer subtraction.</p><h1 id="operator-precedence-in-c">Operator Precedence in C</h1><p>What is some potential problem of the following code:</p><p>This code is a special case when subtracting two float numbers withdifferent sign.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span> (sign_f != sign_g) &#123;<br>    sign_res = sign_f;<br>    mantissa_res = mantissa_f + mantissa_g;<br>    <span class="hljs-keyword">if</span> (mantissa_res &amp; BIT24_MASK == BIT24_MASK) &#123;<br>      mantissa_res &gt;&gt;= <span class="hljs-number">1</span>;<br>      exp_res++;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>As I mentioned in the title, I was trying to check whether<code>mantissa_f + mantissa_g</code> exceeded the 2. If so, I need toreduce it to 1 point something and change the exponent. Yet the ifstatement does not work as I expected. This is because the<strong><code>==</code></strong> operator has a higher precedence thanthe <strong><code>&amp;</code></strong> operator.</p><p>Thus, the correct way of writing is<code>if ((mantissa_res &amp; BIT24_MASK) == BIT24_MASK)</code> or<code>if (mantissa_res &amp; BIT24_MASK)</code></p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Learning Logs</category>
      
      <category>C</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>C</tag>
      
      <tag>operator</tag>
      
      <tag>debug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WebSocket on stock data with latency issue</title>
    <link href="/2023/10/17/WebSocket-on-stock-data-with-latency-issue/"/>
    <url>/2023/10/17/WebSocket-on-stock-data-with-latency-issue/</url>
    
    <content type="html"><![CDATA[<h1 id="websocket-on-stock-data-with-latency-issue">WebSocket on stockdata with latency issue</h1><p>This is a record of me learning WebSocket way of extractinglow-latency stock price data.</p><h1 id="pythonwebsocket">Python&amp;WebSocket</h1><p>I will use the example of extracting stock data to demonstrate theprocess.</p><hr /><p>WebSockets allow for two-way communication with a remote host, andthey're perfect for receiving real-time stock data updates.</p><p>Here's a step-by-step guide using the Python <code>websocket</code>library:</p><ol type="1"><li><strong>Installation</strong>: First, you'll need to install the<code>websocket-client</code> library. You can do this via<code>pip</code>:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install websocket-client<br></code></pre></td></tr></table></figure><ol type="1"><li><strong>Connecting to the WebSocket</strong>: You'll establish aconnection to the WebSocket using the provided URL.</li><li><strong>Sending &amp; Receiving Messages</strong>: Once theconnection is established, you can send and receive messages.</li></ol><p>Here's a basic example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> websocket<br><span class="hljs-keyword">import</span> json<br><br><span class="hljs-comment"># Callbacks for the WebSocket</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_message</span>(<span class="hljs-params">ws, message</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Received: <span class="hljs-subst">&#123;message&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_error</span>(<span class="hljs-params">ws, error</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Error: <span class="hljs-subst">&#123;error&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_close</span>(<span class="hljs-params">ws, close_status_code, close_msg</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;WebSocket Closed&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_open</span>(<span class="hljs-params">ws</span>):<br>    <span class="hljs-comment"># This function runs when the connection is established.</span><br>    <span class="hljs-comment"># You can send a message or set up whatever you need.</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;WebSocket Opened&quot;</span>)<br>    <span class="hljs-comment"># For example, to send a message:</span><br>    <span class="hljs-comment"># ws.send(&quot;Your message here&quot;)</span><br><br><span class="hljs-comment"># Set up the WebSocket connection</span><br>ws = websocket.WebSocketApp(<br>    <span class="hljs-string">&quot;ws://example.com/socket&quot;</span>,<br>    on_message=on_message,<br>    on_error=on_error,<br>    on_close=on_close,<br>)<br>ws.on_open = on_open<br><br><span class="hljs-comment"># Keep the connection running</span><br>ws.run_forever()<br><br></code></pre></td></tr></table></figure><ul><li><code>on_message</code>: This function is called whenever a newmessage is received from the WebSocket.</li><li><code>on_error</code>: This function is called when there's an errorwith the WebSocket.</li><li><code>on_close</code>: This function is called when the WebSocket isclosed.</li><li><code>on_open</code>: This function is called when the WebSocketconnection is successfully established.</li></ul><p>With this script, every time the WebSocket receives a message (e.g.,a stock price update), it will print that message to the console.</p><ol type="1"><li><strong>Keeping the program running</strong>: Yes, once theconnection is established, you have to keep your program running tocontinue receiving messages. The <code>run_forever()</code> functionkeeps the program running and the WebSocket connection alive. If youstop the program, you'll disconnect from the WebSocket.</li></ol><p><strong>Note</strong>: Always be careful when hardcoding API keys orsharing them. They should be kept secret. It's good practice to loadthem from environment variables or external configuration files.</p><h2 id="send-a-message">Send a message</h2><p>To send a message using the <code>websocket</code> library in Python,you'll use the <code>send</code> method of the WebSocket object. Themessage typically needs to be a string, so if you're sending a JSONmessage like the one you provided, you'll need to serialize it to astring using <code>json.dumps()</code>.</p><p>Here's how you can integrate message sending into the previouscode:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> websocket<br><span class="hljs-keyword">import</span> json<br><br><span class="hljs-comment"># Callbacks for the WebSocket</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_message</span>(<span class="hljs-params">ws, message</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Received: <span class="hljs-subst">&#123;message&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_error</span>(<span class="hljs-params">ws, error</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Error: <span class="hljs-subst">&#123;error&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_close</span>(<span class="hljs-params">ws, close_status_code, close_msg</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;WebSocket Closed&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_open</span>(<span class="hljs-params">ws</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;WebSocket Opened&quot;</span>)<br><br>    <span class="hljs-comment"># Send subscription message</span><br>    message = &#123;<br>        <span class="hljs-string">&quot;action&quot;</span>: <span class="hljs-string">&quot;subscribe&quot;</span>,<br>        <span class="hljs-string">&quot;params&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;symbols&quot;</span>: <span class="hljs-string">&quot;AAPL,RY,RY:TSX,EUR/USD,BTC/USD&quot;</span><br>        &#125;<br>    &#125;<br><br>    ws.send(json.dumps(message))<br><br><span class="hljs-comment"># Set up the WebSocket connection</span><br>ws = websocket.WebSocketApp(<br>    <span class="hljs-string">&quot;ws://example.com/socket&quot;</span>,<br>    on_message=on_message,<br>    on_error=on_error,<br>    on_close=on_close,<br>)<br>ws.on_open = on_open<br><br><span class="hljs-comment"># Keep the connection running</span><br>ws.run_forever()<br><br></code></pre></td></tr></table></figure><p>When the WebSocket connection is opened, the <code>on_open</code>callback is triggered. Within that function, I've added the code to sendyour sample message. The message is first defined as a Python dictionaryand then converted to a JSON string using <code>json.dumps()</code>.After that, it's sent to the WebSocket using the <code>send</code>method.</p><h2 id="but-how-can-i-see-what-message-the-server-sent-me">But how can Isee what message the server sent me?</h2><p>In the example code I provided, every time the server sends a messageto your WebSocket client, the <code>on_message</code> callback functionis triggered. Inside this function, we've set up a simple printstatement to display the message:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_message</span>(<span class="hljs-params">ws, message</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Received: <span class="hljs-subst">&#123;message&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>With this setup, any message received from the server will be printedto the console.</p><p>However, if you'd like to process or analyze the messages in someway, you can modify the <code>on_message</code> function. For example,if the server sends JSON messages and you want to convert them to aPython dictionary to extract certain data, you can do the following:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_message</span>(<span class="hljs-params">ws, message</span>):<br>    data = json.loads(message)<br>    <span class="hljs-comment"># Now &#x27;data&#x27; is a Python dictionary. You can access its elements like:</span><br>    <span class="hljs-comment"># value = data[&#x27;someKey&#x27;]</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Received: <span class="hljs-subst">&#123;data&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>In this modified version, the received message is deserialized from aJSON string into a Python dictionary using <code>json.loads()</code>.Then you can access and process the data within the dictionary asneeded.</p><h1 id="inter-process-communication">Inter-process communication</h1><p>If you want to maintain a connection in one script and send messagesfrom another script, you'll need a mechanism for inter-processcommunication.</p><p>Here's one approach using a combination of a WebSocket in one scriptand a message queue in another script:</p><ol type="1"><li><strong>WebSocket script</strong>: This script establishes andmaintains the WebSocket connection. It also listens for new messages tosend from a message queue (e.g., using Python's<code>queue.Queue</code>).</li><li><strong>Command-line script</strong>: This script allows you toenter new messages and adds them to the queue.</li></ol><p>Both scripts communicate using the shared message queue.</p><h3 id="example-implementation">Example Implementation:</h3><p><strong>1. websocket_script.py</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> websocket<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> queue<br><span class="hljs-keyword">import</span> threading<br><br><span class="hljs-comment"># Shared message queue</span><br>msg_queue = queue.Queue()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_message</span>(<span class="hljs-params">ws, message</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Received: <span class="hljs-subst">&#123;message&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_error</span>(<span class="hljs-params">ws, error</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Error: <span class="hljs-subst">&#123;error&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_close</span>(<span class="hljs-params">ws</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;WebSocket Closed&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_open</span>(<span class="hljs-params">ws</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;WebSocket Opened&quot;</span>)<br><br>    <span class="hljs-comment"># Thread to listen for new messages from the queue</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send_from_queue</span>():<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            message = msg_queue.get()<br>            ws.send(json.dumps(message))<br>            msg_queue.task_done()<br><br>    threading.Thread(target=send_from_queue).start()<br><br>ws = websocket.WebSocketApp(<br>    <span class="hljs-string">&quot;ws://example.com/socket&quot;</span>,<br>    on_message=on_message,<br>    on_error=on_error,<br>    on_close=on_close,<br>)<br>ws.on_open = on_open<br>ws.run_forever()<br><br></code></pre></td></tr></table></figure><p><strong>2. command_line_script.py</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> queue<br><br><span class="hljs-comment"># Use the same shared message queue as the WebSocket script</span><br>msg_queue = queue.Queue()<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    user_input = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Enter message action (e.g., &#x27;subscribe&#x27;): &quot;</span>)<br>    <span class="hljs-keyword">if</span> user_input:<br>        <span class="hljs-comment"># Construct your message here based on the input</span><br>        message = &#123;<br>            <span class="hljs-string">&quot;action&quot;</span>: user_input,<br>            <span class="hljs-string">&quot;params&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;symbols&quot;</span>: <span class="hljs-string">&quot;AAPL,RY,RY:TSX,EUR/USD,BTC/USD&quot;</span><br>            &#125;<br>        &#125;<br>        msg_queue.put(message)<br><br></code></pre></td></tr></table></figure><h3 id="instructions">Instructions:</h3><ol type="1"><li>Start <code>websocket_script.py</code> first to establish theWebSocket connection.</li><li>Then, run <code>command_line_script.py</code>. This script willprompt you to enter new messages. Whenever you enter a message, it getsadded to the queue, and the WebSocket script picks it up and sends it tothe server.</li></ol><p>Note: This example uses a simple shared <code>queue.Queue()</code> todemonstrate the concept. In practice, especially if the scripts were torun in different environments, you'd use something like a message broker(e.g., RabbitMQ, Redis) or some other IPC (Inter-Process Communication)mechanism.</p><h1 id="latency-from-processing-data">Latency from processing data</h1><h3 id="situation1">Situation1</h3><p>websocket send me 100 messages in 3 second. But I wrote a function toprocess each message, in the <code>on_message()</code> functionprovided, this function takes 2 second to process message, then how isthe rest of the message doing? For example, I have 100 messages in 3second, but I need to kind of like wait for 2 second for the firstmessage to be processed. Will I loss the result of 99 messages orsomething?</p><h3 id="solution1">Solution1</h3><p>If the processing of each message takes a significant amount of time(like the 2 seconds per message in your example), the WebSocket'sevent-driven model can indeed be a bottleneck. However, the WebSocketlibrary won't drop messages because they arrive too quickly; instead,messages will be queued up and processed one at a time as the<code>on_message</code> handler is called. Here's a breakdown of thebehavior:</p><ol type="1"><li><strong>WebSocket Message Queue</strong>: The underlying WebSocketlibrary will maintain an internal message queue. As messages come infrom the server, they're placed in this queue. The<code>on_message</code> handler is called for each message in the orderthey arrived.</li><li><strong>Processing Time</strong>: If processing each message takes 2seconds, then the <code>on_message</code> handler will be occupied for 2seconds for each message. During this time, new incoming messages willbe queued up but not processed. After the current message is finishedprocessing, the next message in the queue will be passed to the<code>on_message</code> handler.</li><li><strong>Potential Issues</strong>:<ul><li><strong>Latency</strong>: There will be a growing delay (latency)between when a message is received and when it is processed. In yourexample, the 100th message will be delayed by almost 200 seconds (2seconds * 100) before it's processed.</li><li><strong>Memory Consumption</strong>: If messages arrive faster thanthey can be processed for an extended period, this can lead to increasedmemory consumption as the queue grows.</li></ul></li><li><strong>Solutions</strong>:<ul><li><strong>Multithreading/Asynchronous Processing</strong>: Use threadsor asynchronous tasks to process messages in parallel. This way, the<code>on_message</code> handler can quickly hand off the processing toanother thread/task and be ready for the next message almostimmediately.</li><li><strong>Filtering Messages</strong>: If not all messages need to beprocessed, you can add a filtering mechanism to discard unneededmessages before processing.</li><li><strong>Optimizing Processing</strong>: Look for ways to make theprocessing function faster.</li><li><strong>Distributed Processing</strong>: For more advancedscenarios, consider using distributed processing systems (like Celery)to offload message processing to worker nodes.</li></ul></li></ol><p>Here's a quick example using threading to process messages:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> websocket<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> threading<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">process_message</span>(<span class="hljs-params">message</span>):<br>    <span class="hljs-comment"># Your 2-second processing code here</span><br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_message</span>(<span class="hljs-params">ws, message</span>):<br>    threading.Thread(target=process_message, args=(message,)).start()<br><br><span class="hljs-comment"># ... rest of the WebSocket code ...</span><br></code></pre></td></tr></table></figure><p>In this example, each message starts a new thread for processing,allowing <code>on_message</code> to return almost immediately. Thisprevents the growing latency issue, but be cautious about starting toomany threads at once; there's overhead associated with each thread. Ifyou expect to handle a large volume of messages, consider using a threadpool or a more advanced solution like asynchronous processing ordistributed task queues.</p><h3 id="situation2">Situation2</h3><p>If I am trying to store all the data to my database (postgres,locally), what if that time exceeded the data coming time? DoespostgreSQL also provide something like a websocket where I can injectdata faster? What if can't?</p><p>Can I use a cache design then? For example, my websocket give me newmessage every seconde. But I have a queue (or like a buffer pool) thatstore the message, I will then store the data from the queue, so thatwhen websocket stopped sending message, my machine still works oninjecting the data. I know that db could inject data fast, but I mightneed to process the data before I inject it, that is why I am thinkingabout a new design.</p><h3 id="solution2">Solution2</h3><p>When dealing with high-frequency data input, especially fromreal-time sources like a WebSocket, and when there's a need to processand store this data in a relational database like PostgreSQL, there areseveral strategies to optimize and prevent data loss or excessivelatency.</p><ol type="1"><li><strong>Batch Inserts</strong>:<ul><li>Rather than inserting each message into the database one by one, youcan accumulate messages into batches and then perform a single batchinsert. Databases are generally more efficient at handling batchoperations than individual record inserts.</li></ul></li><li><strong>Caching &amp; Buffering</strong>:<ul><li>As you mentioned, using a cache or buffer can be effective. You canstore incoming messages in an in-memory structure (like a list inPython) or an in-memory database (like Redis). Once the buffer reaches acertain size or after a certain time interval, you can then process andbatch insert the accumulated messages into PostgreSQL.</li></ul></li><li><strong>Processing Optimization</strong>:<ul><li>If there's a need to process the data before inserting it, considerparallelizing this processing using threads or asynchronous tasks.</li></ul></li><li><strong>Database Optimization</strong>:<ul><li>Make sure the PostgreSQL tables are properly indexed to handle theinsert operations efficiently. Sometimes, disabling indexes during amassive insert and then rebuilding them afterward can be faster.</li><li>Consider using a connection pooler like <code>pgBouncer</code> toreduce the overhead of establishing new connections for each insertoperation.</li></ul></li><li><strong>Asynchronous Processing</strong>:<ul><li>Consider using task queues like <code>Celery</code> with a messagebroker like <code>RabbitMQ</code> or <code>Redis</code>. When a messagearrives, place it in the task queue. Workers will then pick up thesetasks and process and insert them into the database. This decouples therate of message arrival from the rate of database insertion.</li></ul></li><li><strong>Database Write-Ahead Log (WAL) Settings</strong>:<ul><li>Fine-tuning PostgreSQL's WAL settings can improve write performance.However, be cautious as changing these settings can also impact thedurability guarantees of the database.</li></ul></li></ol><p>Here's a simple conceptual example using an in-memory buffer forbatch inserts:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> websocket<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> time<br><br>BUFFER_SIZE = <span class="hljs-number">100</span>  <span class="hljs-comment"># Adjust as needed</span><br>buffer = []<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">process_and_store_in_db</span>(<span class="hljs-params">messages</span>):<br>    <span class="hljs-comment"># Process and batch insert the messages into PostgreSQL</span><br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">on_message</span>(<span class="hljs-params">ws, message</span>):<br>    <span class="hljs-keyword">global</span> buffer<br>    buffer.append(message)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(buffer) &gt;= BUFFER_SIZE:<br>        process_and_store_in_db(buffer)<br>        buffer = []<br><br><span class="hljs-comment"># ... rest of the WebSocket code ...</span><br><br><span class="hljs-comment"># You might also want to set up a periodic flush to handle cases where the</span><br><span class="hljs-comment"># buffer doesn&#x27;t reach BUFFER_SIZE within a certain time interval.</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">periodic_flush</span>():<br>    <span class="hljs-keyword">global</span> buffer<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">if</span> buffer:<br>            process_and_store_in_db(buffer)<br>            buffer = []<br>        time.sleep(<span class="hljs-number">10</span>)  <span class="hljs-comment"># Adjust the flush interval as needed</span><br><br><span class="hljs-keyword">import</span> threading<br>threading.Thread(target=periodic_flush).start()<br><br></code></pre></td></tr></table></figure><p>This example keeps messages in an in-memory buffer. Once the bufferreaches a certain size (<code>BUFFER_SIZE</code>), it processes andbatch inserts the messages into the database. There's also a periodicflush to handle cases where messages come in slowly and the bufferdoesn't get filled quickly.</p><p>Remember that these are just strategies. Depending on the exactrequirements, hardware, network conditions, and the volume of data, theideal solution might be a combination of the above methods.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Learning Logs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>WebSocket</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WebSocket Introduction</title>
    <link href="/2023/10/17/WebSocket-Introduction/"/>
    <url>/2023/10/17/WebSocket-Introduction/</url>
    
    <content type="html"><![CDATA[<h1 id="introduction-of-websocket">Introduction of WebSocket</h1><p>WebSockets are a fascinating topic, especially when it comes toreal-time applications like stock price updates.</p><h3 id="what-is-websocket">What is WebSocket?</h3><p>WebSocket is a communication protocol that provides full-duplex(two-way) communication channels over a single, long-lived connection.It is designed to be implemented in web browsers and web servers, but itcan be used by any client or server application. The WebSocket protocolmakes it possible to establish a persistent, low-latency connectionbetween the client (like a web browser) and the server.</p><h3 id="how-is-websocket-different-from-http">How is WebSocket differentfrom HTTP?</h3><ol type="1"><li><strong>Persistent Connection</strong>: Unlike HTTP where eachrequest opens a new connection, a WebSocket connection is establishedonce and remains open, allowing for real-time data transfer.</li><li><strong>Full Duplex</strong>: WebSocket is bidirectional, meaningboth the server and client can send messages to each otherindependently.</li><li><strong>Low Latency</strong>: Since the connection is persistent,there's no need to reestablish it, which can reduce data transferdelays.</li></ol><h3id="why-is-websocket-suitable-for-real-time-data-like-stock-prices">Whyis WebSocket suitable for real-time data like stock prices?</h3><ol type="1"><li><strong>Real-time updates</strong>: With WebSocket, the server canpush updates to the client as soon as new data is available, without theclient having to request it.</li><li><strong>Efficiency</strong>: Reduces the overhead and latencyassociated with opening and closing multiple HTTP connections.</li><li><strong>Reduced Network Traffic</strong>: Instead of repeatedlypolling an API over HTTP, which involves sending headers andestablishing connections, you can receive data as it's updated,minimizing network traffic.</li></ol><h3 id="how-to-use-websocket-for-stock-price-updates">How to useWebSocket for stock price updates?</h3><ol type="1"><li><strong>Establishing a Connection</strong>: The client requests aWebSocket connection by using the "ws" (or "wss" for secure WebSocket)URI scheme. For example: <code>ws://example.com/socket</code>.</li><li><strong>Handling Messages</strong>: Once connected, both the serverand client can send and receive messages. In the context of stockprices, the server would push price updates to the client as they becomeavailable.</li><li><strong>Closing the Connection</strong>: Either the client or servercan initiate closing the WebSocket connection.</li></ol><h3 id="example-in-javascript">Example in JavaScript:</h3><p>Here's a simple example of how you might use WebSockets in JavaScriptto get stock price updates:</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">// Create a connection to the server</span><br><span class="hljs-keyword">let</span> socket = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebSocket</span>(<span class="hljs-string">&quot;ws://example.com/stock-price&quot;</span>);<br><br><span class="hljs-comment">// Connection established</span><br>socket.<span class="hljs-property">onopen</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Connected to the server&quot;</span>);<br>&#125;;<br><br><span class="hljs-comment">// Handle incoming messages (like stock price updates)</span><br>socket.<span class="hljs-property">onmessage</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) &#123;<br>  <span class="hljs-keyword">let</span> stockData = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(event.<span class="hljs-property">data</span>);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Received stock price:&quot;</span>, stockData.<span class="hljs-property">price</span>);<br>&#125;;<br><br><span class="hljs-comment">// Connection closed</span><br>socket.<span class="hljs-property">onclose</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) &#123;<br>  <span class="hljs-keyword">if</span> (event.<span class="hljs-property">wasClean</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<br>      <span class="hljs-string">`Connection closed cleanly, code=<span class="hljs-subst">$&#123;event.code&#125;</span>, reason=<span class="hljs-subst">$&#123;event.reason&#125;</span>`</span><br>    );<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Connection died&quot;</span>);<br>  &#125;<br>&#125;;<br><br><span class="hljs-comment">// Error handling</span><br>socket.<span class="hljs-property">onerror</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;WebSocket Error:&quot;</span>, error);<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="considerations">Considerations:</h3><ol type="1"><li><strong>Server Support</strong>: The server needs to support theWebSocket protocol. Not all APIs will offer WebSocket endpoints, soyou'll need to choose or build a backend that does.</li><li><strong>Fallbacks</strong>: Not all networks and proxies supportWebSockets. You might need a fallback mechanism like long polling forthese scenarios.</li><li><strong>Security</strong>: Just like HTTP has HTTPS, WebSocket hasWSS (WebSocket Secure) which encrypts the data.</li></ol><p>In the context of stock prices, using WebSockets can provide asignificant advantage in terms of real-time data delivery with reducedlatency. If the stock trading platform or data provider offers aWebSocket API, it would be a great choice for your application.</p><h1 id="postman-on-websocket">Postman on WebSocket</h1><p>You can use Postman to connect to a WebSocket! Postman is widelyknown for its capabilities with HTTP requests, but as of version 8.0,Postman added support for WebSocket testing. This makes it a handy toolfor testing and exploring WebSocket services as well.</p><p>Here's how you can use Postman to connect to a WebSocket:</p><ol type="1"><li><strong>Open Postman</strong>: Start the Postman application.</li><li><strong>Select WebSocket</strong>: In the top-left corner where youwould typically select an HTTP method like GET or POST, you'll find anoption for <code>WS</code> (WebSocket). Select that.</li><li><strong>Enter WebSocket URL</strong>: In the request URL field,enter your WebSocket URL. WebSocket URLs typically start with<code>ws://</code> (for unencrypted) or <code>wss://</code> (forencrypted, similar to HTTPS). For example:<code>ws://example.com/socket</code>.</li><li><strong>Connect</strong>: Click on the "Connect" button. Postmanwill try to establish a connection to the WebSocket server.</li><li><strong>Send &amp; Receive Messages</strong>: Once connected, youcan send messages to the server and view the messages received from theserver in real-time.</li><li><strong>Close the Connection</strong>: You can manually disconnectfrom the WebSocket server by clicking the "Disconnect" button.</li><li><strong>Additional Options</strong>: Postman also provides optionsfor setting custom headers, viewing connection details, and more.</li></ol><p>Remember that while Postman provides a convenient interface forworking with WebSockets, it's primarily for testing and exploration.When you're building an actual application, you'll be implementingWebSocket logic in your chosen programming language and framework.</p><p>Happy testing!</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Learning Logs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>WebSocket</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Import LEAN into elan</title>
    <link href="/2023/10/12/Import-LEAN-into-elan/"/>
    <url>/2023/10/12/Import-LEAN-into-elan/</url>
    
    <content type="html"><![CDATA[<h1 id="import-lean-into-elan">Import LEAN into <code>elan</code></h1><p>Notice:</p><ul><li>I will use lean v3.42.1 for the demonstration</li></ul><p>This is a tutorial on how to override/import LEAN into<code>elan</code>, so that you can regulate different versions of LEANwith a version control system.</p><h1 id="problem-with-elan">Problem with <code>elan</code>,</h1><p>As I mentioned in the blog: <ahref="https://blog.slray.com/2023/10/12/Installing-LEAN-on-arm-based-Mac-%E2%80%94-Manually-compile-and-install/">https://blog.slray.com/2023/10/12/Installing-LEAN-on-arm-based-Mac-—-Manually-compile-and-install/</a></p><p>The problem with <code>elan</code> is that when you are trying todownload LEAN3, it pops:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ elan install lean3<br>info: downloading component <span class="hljs-string">&#x27;lean&#x27;</span><br>Error(Download(HttpStatus(404)), State &#123; next_error: None, backtrace: InternalBacktrace &#123; backtrace: None &#125; &#125;)<br>error: could not download nonexistent lean version `lean3`<br>info: caused by: could not download file from <span class="hljs-string">&#x27;https://github.com/leanprover/lean4/releases/expanded_assets/lean3&#x27;</span> to <span class="hljs-string">&#x27;/Users/ray/.elan/tmp/i3pouyka8f1tcrdn_file&#x27;</span><br>info: caused by: http request returned an unsuccessful status code: 404<br></code></pre></td></tr></table></figure><p>Here are the instructions on how to install LEAN manually (downloadsource code, and compile):</p><ul><li><ahref="https://blog.slray.com/2023/10/12/Installing-LEAN-on-arm-based-Mac-%E2%80%94-Manually-compile-and-install/">InstallingLEAN on arm based Mac — Manually compile and install</a></li><li><ahref="https://blog.slray.com/2023/10/11/Setting-Up-Lean-on-an-M1-Mac-A-Debugging-Journey/">SettingUp Lean on an M1 Mac: A Debugging Journey</a></li></ul><h1 id="check-your-lean">Check your LEAN</h1><p>Now you have install LEAN, if you <code>make install</code> ed, youcan use</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lean --version<br></code></pre></td></tr></table></figure><p>globally. If not, you can still check by</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">path/to/your/lean --version<br></code></pre></td></tr></table></figure><p>If you do not know the path, you may use the following command</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">where</span> lean<br></code></pre></td></tr></table></figure><p>This will generate a path like</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ <span class="hljs-built_in">where</span> lean<br>/Users/ray/.elan/bin/lean<br>/usr/local/bin/lean<br>/usr/local/bin/lean<br></code></pre></td></tr></table></figure><p>Since you have not imported the lean into your <code>elan</code>, youmight not see the first line.</p><h1 id="import-lean-to-elan">Import LEAN to <code>elan</code></h1><p>Now, to integrate it with <code>elan</code>, follow these steps:</p><ol type="1"><li><strong>Locate the Binaries</strong>: (mentioned above) If you'veinstalled Lean using <code>make install</code>, by default, the binariesare likely placed in <code>/usr/local/bin</code>. However, if youspecified a custom installation path using the<code>DCMAKE_INSTALL_PREFIX</code> option, then the binaries will be inthe <code>bin</code> subdirectory of that location.</li></ol><p>For example, if you set the install prefix to<code>/path/to/your/desired/install/location</code>, then the binariesshould be in<code>/path/to/your/desired/install/location/bin</code>.</p><ol type="1"><li><p><strong>Integrate with <code>elan</code></strong>:</p><ul><li>First, find out where <code>elan</code> stores its toolchains onyour system. This is typically in the <code>~/.elan/toolchains</code>directory.</li><li>Create a new directory inside <code>toolchains</code> with arecognizable name, e.g., <code>lean3.42.1-cmake</code>.</li><li>Copy the binaries (from the location in step 1) into this newdirectory.</li></ul><p>For example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/.elan/toolchains/lean3.42.1-cmake<br><span class="hljs-built_in">cp</span> /path/to/your/binaries/* ~/.elan/toolchains/lean3.42.1-cmake/<br><br></code></pre></td></tr></table></figure></li><li><p><strong>Set the Custom Build as Default</strong>: Use<code>elan</code> to set this custom build as the default version:<code>bash elan default lean3.42.1-cmake</code></p></li><li><p><strong>Verify the Installation</strong>: Now, when you run<code>lean --version</code>, it should use your custom-built version.Verify this to ensure everything is set up correctly.</p></li><li><p><strong>Important Note</strong>: When integrating custom buildswith <code>elan</code>, be cautious about updating <code>elan</code> orchanging configurations. Custom toolchains might be overwritten ordisrupted. Always have a backup of your custom build to ensure you canrestore it if needed.</p></li></ol><p>This process should allow you to use your custom-built version ofLean with <code>elan</code>.</p><h1 id="make-install-detailed-example"><code>make install</code>detailed example</h1><p>The process is very similar.</p><ol type="1"><li><p><strong>Prepare a New Toolchain Directory for<code>elan</code></strong>:</p><p>First, create a directory inside <code>elan</code>'s toolchainsfolder. This is where you'll place the custom-built version of Lean.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/.elan/toolchains/lean3.42.1-cmake<br><br></code></pre></td></tr></table></figure></li><li><p><strong>Copy the Lean Binaries</strong>:</p><p>Copy the <code>lean</code>, <code>leanchecker</code>, and<code>leanpkg</code> binaries (and any other related binaries) from<code>/usr/local/bin</code> to the custom toolchain directory you justcreated.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /usr/local/bin/lean ~/.elan/toolchains/lean3.42.1-cmake/bin/<br><span class="hljs-built_in">cp</span> /usr/local/bin/leanchecker ~/.elan/toolchains/lean3.42.1-cmake/bin/<br><span class="hljs-built_in">cp</span> /usr/local/bin/leanpkg ~/.elan/toolchains/lean3.42.1-cmake/bin/<br><br></code></pre></td></tr></table></figure></li><li><p><strong>Set the Custom Build as Default in<code>elan</code></strong>:</p><p>Use <code>elan</code> to set this custom build as the defaultversion:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">elan default lean3.42.1-cmake<br></code></pre></td></tr></table></figure></li><li><p><strong>Verification</strong>:</p><p>After setting the custom build as default, you can check whichversion of Lean is being used by running:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lean --version<br></code></pre></td></tr></table></figure><p>This should point to your custom-built version. Also,<code>elan show</code> will tell you the currently activetoolchain.</p></li></ol><p>Remember, by integrating with <code>elan</code>, you gain theadvantage of easily switching between different versions of Lean.However, when you update <code>elan</code> or modify its settings, becautious. Custom toolchains might be affected, so it's always good tokeep a backup of your custom build.</p><h1 id="problem-of-...eanpkgmain.lean-not-found">Problem of<code>.../eanpkg/main.lean' not found</code></h1><p>I downloaded the correct version of lean, and installed it, and withelan set it as default and global. But I still got</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ leanpkg configure<br>&lt;unknown&gt;:1:1: error: file <span class="hljs-string">&#x27;..../.elan/toolchains/lean3.42.1-cmake/leanpkg/leanpkg/main.lean&#x27;</span> not found<br></code></pre></td></tr></table></figure><p>Notice that the command <code>leanpkg configure</code> is not relatedto this blog, this blog is one of the series of installing miniF2FGithub repo(which is also why I have to install lean3 instead of 4). Youmight still, however, encounter the same problem if your project isusing the same command.</p><hr /><h2 id="solution">Solution</h2><p>The error suggests that <code>leanpkg</code> is looking for its mainLean file (i.e., <code>main.lean</code>) in the custom toolchaindirectory but isn't finding it. This is likely because when we set upthe custom toolchain, we primarily focused on the binaries and didn'taccount for the other necessary files and directories that<code>leanpkg</code> and Lean itself might rely on.</p><p>To resolve this:</p><ol type="1"><li><p><strong>Copy Necessary Files</strong>:</p><p>In addition to the binaries, you may need to copy over other requiredfiles or directories from the compiled Lean source to the customtoolchain directory. In this case, it's specifically looking for the<code>leanpkg</code> directory and its contents.</p><p>From the root of your Lean source directory (where you compiledLean), you can do:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r path/to/lean3.42.1-cmake-source/leanpkg ~/.elan/toolchains/lean3.42.1-cmake/<br></code></pre></td></tr></table></figure><p>This assumes the source for <code>3.42.1</code> is in<code>path/to/lean3.42.1-cmake-source/</code> and that you named yourcustom toolchain <code>lean3.42.1-cmake</code>. Adjust the pathsaccordingly.</p></li><li><p><strong>Re-run <code>leanpkg</code></strong>:</p><p>After copying the necessary files, try running<code>leanpkg configure</code> again.</p></li><li><p><strong>Check for Further Missing Files</strong>:</p><p>If you encounter more errors about missing files, you'll need torepeat the process: identify the missing files or directories, copy themfrom the Lean source directory to the custom toolchain directory, andthen retry the command.</p></li></ol><p>Keep in mind that manually setting up a custom toolchain can be a bittricky since we're trying to replicate the exact structure and contentsthat Lean expects. It may require some trial and error to get everythingright.</p><p>If you continue to face issues, another option might be to bypass<code>elan</code> temporarily for <code>leanpkg</code> operations anduse the binaries directly, but integrating with <code>elan</code> ismore convenient in the long run.</p><h1 id="not-a-directory-problem">“Not a directory” problem</h1><p>I encountered the problem of</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ <span class="hljs-built_in">cp</span> -r leanpkg ~/.elan/toolchains/lean3.42.1-cmake/<br><span class="hljs-built_in">cp</span>: /Users/ray/.elan/toolchains/lean3.42.1-cmake/leanpkg: Not a directory<br><span class="hljs-built_in">cp</span>: leanpkg: unable to copy extended attributes to /Users/ray/.elan/toolchains/lean3.42.1-cmake/leanpkg: Operation not permitted<br><span class="hljs-built_in">cp</span>: /Users/ray/.elan/toolchains/lean3.42.1-cmake/leanpkg/leanpkg.path: Not a directory<br><span class="hljs-built_in">cp</span>: /Users/ray/.elan/toolchains/lean3.42.1-cmake/leanpkg/leanpkg: Not a directory<br><span class="hljs-built_in">cp</span>: leanpkg/leanpkg: unable to copy extended attributes to /Users/ray/.elan/toolchains/lean3.42.1-cmake/leanpkg/leanpkg: Not a directory<br><span class="hljs-built_in">cp</span>: /Users/ray/.elan/toolchains/lean3.42.1-cmake/leanpkg/leanpkg/git.olean: Not a directory<br></code></pre></td></tr></table></figure><p>while I was moving the files. The problem mainly suggest:</p><ol type="1"><li>Permission not enough</li><li>There are files conflict</li></ol><h2 id="solution-1">solution</h2><ol type="1"><li><p><strong>Remove any conflicting files or directories</strong>:</p><p>It seems there might already be a file named <code>leanpkg</code> inyour custom toolchain directory. We need to ensure that there are noconflicts before copying over the directory.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf ~/.elan/toolchains/lean3.42.1-cmake/leanpkg<br></code></pre></td></tr></table></figure><p>This command will remove the <code>leanpkg</code> file or directoryin your custom toolchain directory if it exists.</p></li><li><p><strong>Copy the <code>leanpkg</code> directoryagain</strong>:</p><p>From your Lean source directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r leanpkg ~/.elan/toolchains/lean3.42.1-cmake/<br></code></pre></td></tr></table></figure></li></ol><p>This should copy the <code>leanpkg</code> directory without anyconflicts. If you encounter more permission errors, you might need touse <code>sudo</code> with the <code>cp</code> command, but only do soif you're sure about the paths and operations, as using<code>sudo</code> can affect system-critical files if usedincorrectly.</p><h1 id="leanpkg-is-looking-for-wrong-lean"><code>leanpkg</code> islooking for wrong LEAN</h1><p>I installed different versions of LEAN, I previously installed onefor 3.4.2 (official release). While installing, I met problem of that<code>leanpkg</code> is looking for the file under<code>'/Users/ray/.elan/toolchains/lean3.4.2-cmake/leanpkg/leanpk</code>instead of<code>'/Users/ray/.elan/toolchains/lean3.42.1-cmake/leanpkg/leanpk</code></p><h2 id="solution-2">Solution</h2><p>The discrepancy you're seeing suggests that somewhere,<code>leanpkg</code> is still referencing the old toolchain path (from<code>3.4.2-cmake</code>) instead of the new one(<code>3.42.1-cmake</code>). This can happen due to a few reasons:</p><ol type="1"><li><p><strong>Elan Configuration</strong>: If you've set the defaultversion in <code>elan</code> to <code>lean3.4.2-cmake</code> or there'san override active, then tools will default to that version.</p><p>To ensure you're using <code>3.42.1-cmake</code> as the default:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">elan default lean3.42.1-cmake<br></code></pre></td></tr></table></figure></li><li><p><strong>Local Project Configuration</strong>: If you're in a Leanproject directory, there might be a <code>.lean-version</code> file or a<code>lean_version</code> field in the <code>leanpkg.toml</code> filethat specifies which version to use. Make sure this is set to<code>3.42.1</code> or delete the <code>.lean-version</code> file todefault to the global setting.</p></li><li><p><strong>PATH Issues</strong>: It's also possible that there'ssome issue with how your <code>PATH</code> environment variable is setup. Maybe the older version's path is taking precedence. You can checkwhich <code>leanpkg</code> is being used by:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">which</span> leanpkg<br></code></pre></td></tr></table></figure><p>This will tell you the path of the <code>leanpkg</code> binary that'scurrently being executed.</p></li><li><p><strong>Binary References</strong>: The <code>leanpkg</code>binary itself might be hardcoded or configured to reference paths fromits compilation or installation. This is less likely, but it'spossible.</p></li></ol><p>For immediate relief:</p><ol type="1"><li><p><strong>Rename Old Toolchain</strong>: Temporarily, you canrename the old toolchain directory to something else to ensure it's notbeing used:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> ~/.elan/toolchains/lean3.4.2-cmake ~/.elan/toolchains/lean3.4.2-cmake-backup<br></code></pre></td></tr></table></figure><p>This way, even if something is trying to reference the old toolchain,it won't find it, forcing it to default to the availabletoolchain.</p></li></ol><p>By systematically following these checks and changes, you should beable to pinpoint and resolve the issue. If all else fails, you may needto perform a fresh setup of <code>elan</code> and your Leaninstallations to clear out any lingering configurations.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Debug Logs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>LEAN</tag>
      
      <tag>elan</tag>
      
      <tag>automated theorem proving</tag>
      
      <tag>Programming Tips</tag>
      
      <tag>arm based system</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Installing LEAN on arm based Mac — Manually compile and install</title>
    <link href="/2023/10/12/Installing-LEAN-on-arm-based-Mac-%E2%80%94-Manually-compile-and-install/"/>
    <url>/2023/10/12/Installing-LEAN-on-arm-based-Mac-%E2%80%94-Manually-compile-and-install/</url>
    
    <content type="html"><![CDATA[<h1id="installing-lean-on-arm-based-mac-manually-compile-and-install">InstallingLEAN on arm based Mac — Manually compile and install</h1><p>This is a tutorial on how to compile LEAN from source code andinstall it. Next, we will see how to move it to <code>elan</code> (nextpost)</p><h1 id="problem-with-elan">Problem with <code>elan</code></h1><p><code>elan</code> does not provide any installation for lean3 on armbased Mac anymore.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ elan install lean3<br>info: downloading component <span class="hljs-string">&#x27;lean&#x27;</span><br>Error(Download(HttpStatus(404)), State &#123; next_error: None, backtrace: InternalBacktrace &#123; backtrace: None &#125; &#125;)<br>error: could not download nonexistent lean version `lean3`<br>info: caused by: could not download file from <span class="hljs-string">&#x27;https://github.com/leanprover/lean4/releases/expanded_assets/lean3&#x27;</span> to <span class="hljs-string">&#x27;/Users/ray/.elan/tmp/i3pouyka8f1tcrdn_file&#x27;</span><br>info: caused by: http request returned an unsuccessful status code: 404<br></code></pre></td></tr></table></figure><p>Thus, we should install LEAN manually, there are two choices:</p><ol type="1"><li>Download the binary file directly, then put to<code>~/.elan/toolchains/</code>, I demonstrated how to do that in myblog: <strong><ahref="https://blog.slray.com/2023/10/11/Setting-Up-Lean-on-an-M1-Mac-A-Debugging-Journey/">SettingUp Lean on an M1 Mac: A Debugging Journey</a></strong></li><li>Download the source code, compile yourself, install, then move thebinary files to <code>elan</code> folder.</li></ol><p><strong>This blog will focus mainly on the second way.</strong></p><h2 id="links-for-downloading-lean">Links for downloading LEAN:</h2><ul><li>Community: This could be confusing. You might checked the link athttps://github.com/leanprover-community/mathlib, yet this will lead youto the <ahref="https://leanprover-community.github.io/lean3/get_started.html">officialwebsite</a>. If you want to install it manually (so that you canregulate versions), you want to check <strong><ahref="https://github.com/leanprover-community/lean">thislink</a></strong>, which is written in the <ahref="https://github.com/leanprover-community/mathlib/blob/master/OLD_README.md">OLD_README.md</a>.</li><li>Official release: https://github.com/leanprover/lean3/releases<ul><li>For arm based mac, you may want to download the<code>lean-3.4.2-darwin.zip</code>, but you might meet the problem ofthe following <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ ./lean --version<br>dyld[22512]: Library not loaded: /usr/local/opt/gmp/lib/libgmp.10.dylib<br>  Referenced from: &lt;A8A24233-8885-3A1A-83F9-0071B27AF08A&gt; /Users/ray/.elan/toolchains/lean3-manual/bin/lean<br>  Reason: tried: <span class="hljs-string">&#x27;/usr/local/opt/gmp/lib/libgmp.10.dylib&#x27;</span> (no such file), <span class="hljs-string">&#x27;/System/Volumes/Preboot/Cryptexes/OS/usr/local/opt/gmp/lib/libgmp.10.dylib&#x27;</span> (no such file), <span class="hljs-string">&#x27;/usr/local/opt/gmp/lib/libgmp.10.dylib&#x27;</span> (no such file), <span class="hljs-string">&#x27;/usr/local/lib/libgmp.10.dylib&#x27;</span> (no such file), <span class="hljs-string">&#x27;/usr/lib/libgmp.10.dylib&#x27;</span> (no such file, not <span class="hljs-keyword">in</span> dyld cache)<br>[1]    22512 abort      ./lean --version<br></code></pre></td></tr></table></figure></li></ul></li></ul><h1 id="download-source-code-for-lean-community">Download source codefor LEAN (community)</h1><p>The process is similar for official release. You can download either<code>Source code(zip)</code> or <code>Source code(tar.gz)</code> fromthe official release.</p><h2 id="download-source-code-for-specific-version">Download source codefor specific version</h2><p>Remember, clone this link:https://github.com/leanprover-community/lean</p><p>Here are the full steps (I will use v3.42.1 as an example):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/leanprover-community/lean<br><span class="hljs-built_in">cd</span> lean<br>git checkout v3.42.1<br></code></pre></td></tr></table></figure><p>Here is the full output (don’t copy this)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">❯ git <span class="hljs-built_in">clone</span> https://github.com/leanprover-community/lean<br>Cloning into <span class="hljs-string">&#x27;lean&#x27;</span>...<br>remote: Enumerating objects: 152824, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (452/452), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (220/220), <span class="hljs-keyword">done</span>.<br>remote: Total 152824 (delta 242), reused 324 (delta 205), pack-reused 152372<br>Receiving objects: 100% (152824/152824), 55.76 MiB | 14.88 MiB/s, <span class="hljs-keyword">done</span>.<br>Resolving deltas: 100% (112549/112549), <span class="hljs-keyword">done</span>.<br>❯ <span class="hljs-built_in">cd</span> lean<br>❯ <span class="hljs-built_in">ls</span><br>LICENSE   bors.toml images    script    tmp<br>README.md doc       leanpkg   src<br>bin       extras    library   tests<br>❯ git checkout v3.42.1<br>Note: switching to <span class="hljs-string">&#x27;v3.42.1&#x27;</span>.<br><br>You are <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;detached HEAD&#x27;</span> state. You can look around, make experimental<br>changes and commit them, and you can discard any commits you make <span class="hljs-keyword">in</span> this<br>state without impacting any branches by switching back to a branch.<br><br>If you want to create a new branch to retain commits you create, you may<br><span class="hljs-keyword">do</span> so (now or later) by using -c with the switch <span class="hljs-built_in">command</span>. Example:<br><br>  git switch -c &lt;new-branch-name&gt;<br><br>Or undo this operation with:<br><br>  git switch -<br><br>Turn off this advice by setting config variable advice.detachedHead to <span class="hljs-literal">false</span><br><br>HEAD is now at 68455b087 chore(*): release 3.42.1c (<span class="hljs-comment">#707)</span><br></code></pre></td></tr></table></figure><h1 id="compile-and-install">Compile and Install</h1><p>To compile Lean from this source code, you typically use tools like<strong><code>cmake</code></strong> and<strong><code>make</code></strong>.</p><p>Here's a step-by-step guide to building Lean 3.4.2 from source onmacOS:</p><ol type="1"><li><p><strong>Install Required Dependencies</strong>: First, ensure youhave the necessary dependencies installed. You'll typically need: -<strong><code>cmake</code></strong>: for configuring the build process.- <strong><code>g++</code></strong> or an equivalent C++ compiler: forcompiling the source code. If you use Homebrew, you can install themusing:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install cmake gcc<br></code></pre></td></tr></table></figure></li><li><p><strong>Navigate to the Source Directory</strong>: Changedirectory to the root of the source code: If you followed the stepsaforementioned, you don’t need to do this</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> path/to/your/lean<br></code></pre></td></tr></table></figure></li><li><p><strong>Configure and Build</strong>: Now, configure and compileLean:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p build/release<br><span class="hljs-built_in">cd</span> build/release<br>cmake ../../src<br>make<br></code></pre></td></tr></table></figure><p>This will create a <strong><code>release</code></strong> build ofLean. The binary will be available in the<strong><code>build/release</code></strong> directory once the buildprocess completes. This step take a while and you might see somewarning. Those are fine as long as no error. Here is an example ofwarning</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">...<br>.../lean/src/library/typed_expr.cpp:59:18: warning: <span class="hljs-string">&#x27;write&#x27;</span> overrides a member <span class="hljs-keyword">function</span> but is not marked <span class="hljs-string">&#x27;override&#x27;</span> [-Winconsistent-missing-override]<br>    virtual void write(serializer &amp; s) const &#123;<br><br>.../lean/src/kernel/expr.h:370:18: note: overridden virtual <span class="hljs-keyword">function</span> is here<br>    virtual void write(serializer &amp; s) const = 0;<br>                    ^<br>4 warnings generated.<br></code></pre></td></tr></table></figure></li><li><p><strong>Installation (Optional)</strong>: If you wish to installLean system-wide (or in a specified directory), you can use the<strong><code>install</code></strong> target with<strong><code>make</code></strong>:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">make <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>By default, this might install Lean to<strong><code>/usr/local/bin</code></strong>. If you wish to specify adifferent install directory, you can provide a prefix during the<strong><code>cmake</code></strong> configuration step:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">cmake -<span class="hljs-variable constant_">DCMAKE_INSTALL_PREFIX</span><span class="hljs-symbol">:PATH=/path/to/your/desired/install/location</span> ../../src<br></code></pre></td></tr></table></figure></li><li><p><strong>Using with <code>elan</code></strong>: If you wish tointegrate this build with <strong><code>elan</code></strong>, you caneither: - Copy the binaries to the appropriate<strong><code>elan</code></strong> toolchain directory. - Or, point yoursystem's <strong><code>PATH</code></strong> variable to the directorycontaining the compiled binaries.</p></li><li><p><strong>Potential Issues</strong>:</p><ul><li>Keep an eye out for any error messages during the build process.They can indicate missing dependencies or other issues.</li><li>Ensure you have adequate disk space and permissions to write to thespecified directories.</li></ul></li></ol><p>Once you've successfully built Lean from source, you should be ableto run the <strong><code>lean</code></strong> binary and verify itsversion using <strong><code>lean --version</code></strong>.</p><p>Now, you have successfully installed LEAN, try it out by</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ..<br><span class="hljs-built_in">cd</span> ..<br>bin/lean --version<br></code></pre></td></tr></table></figure><p>It should output something like</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Lean (version 3.42.1, commit 68455b087d87, Release)<br></code></pre></td></tr></table></figure><p>Now you have installed LEAN, in my next blog, I will demonstrate howto put your manually installed LEAN to <code>elan</code></p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Debug Logs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>LEAN</tag>
      
      <tag>automated theorem proving</tag>
      
      <tag>Programming Tips</tag>
      
      <tag>arm based system</tag>
      
      <tag>Homebrew</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Setting Up Lean on an M1 Mac: A Debugging Journey</title>
    <link href="/2023/10/11/Setting-Up-Lean-on-an-M1-Mac-A-Debugging-Journey/"/>
    <url>/2023/10/11/Setting-Up-Lean-on-an-M1-Mac-A-Debugging-Journey/</url>
    
    <content type="html"><![CDATA[<p>Apple's M1 chips have ushered in a new era of computing performance.But with new architectures come new challenges. One such challenge Irecently faced was setting up the Lean theorem prover. Here's how Itackled it.</p><h3 id="the-challenge"><strong>The Challenge</strong></h3><p>While trying to set up Lean using <strong><code>elan</code></strong>,I faced an issue where I couldn't download<strong><code>lean3</code></strong>. It appeared that the links for<strong><code>lean3</code></strong> were replaced in favor of<strong><code>lean4</code></strong>, which was causing the 404errors.</p><h3 id="manual-installation"><strong>Manual Installation</strong></h3><p>Since the automated installation wasn't working, I decided to go themanual route. I downloaded the Lean 3.4.2 package for macOS from the <ahref="https://github.com/leanprover/lean3/releases">official Lean 3GitHub releases</a>.</p><p>After extracting the ZIP file, I was presented with three folders:<strong><code>bin</code></strong>,<strong><code>include</code></strong>, and<strong><code>lib</code></strong>. This meant that the Lean executablewas present and I didn't need to undergo any installation wizards ordrag apps into folders.</p><p>To use Lean seamlessly, I added the path to Lean's<strong><code>bin</code></strong> directory to the system's PATH. Thiswould allow me to run Lean from any terminal window without specifyingthe full path.</p><h3 id="elan-integration"><strong>Elan Integration</strong></h3><p>For better version management, I wanted to integrate the manualinstallation with <strong><code>elan</code></strong>. After placing theextracted Lean folder under<strong><code>~/.elan/toolchains/</code></strong>, I tried setting anoverride with <strong><code>elan</code></strong>, but faced issuesrelated to a missing library:<strong><code>libgmp.10.dylib</code></strong>.</p><h3 id="the-gmp-library-issue"><strong>The GMP LibraryIssue</strong></h3><p>Lean seemed to be expecting a specific version of the GMP librarybuilt for the x86_64 architecture, but my system, being an M1 Mac, hadthe ARM version.</p><p>Here's how I resolved it:</p><ol type="1"><li><p><strong>Install the x86_64 Homebrew</strong>:</p><p>M1 Macs support both ARM and x86_64 architectures, and Homebrewprovides separate installations for both. To ensure I was installingx86_64 software, I had to prefix my commands with<strong><code>arch -x86_64</code></strong>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span> -x86_64 /bin/bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Install the x86_64 version of GMP</strong>:</p><p>Using the x86_64 version of Homebrew:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span> -x86_64 /usr/local/bin/brew install gmp<br></code></pre></td></tr></table></figure><p>This ensured that Lean found the x86_64 version of the library it wasexpecting.</p></li><li><p><strong>Run Lean</strong>:</p><p>After these steps, I was finally able to run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/.elan/toolchains/lean3-manual/bin/lean --version<br></code></pre></td></tr></table></figure><p>And voila! Lean was up and running.</p></li></ol><h3 id="conclusion"><strong>Conclusion</strong></h3><p>Setting up software on newer hardware often requires some tinkering.The M1 transition has introduced challenges, but with a littlepersistence (and a lot of troubleshooting), it's possible to find a way.Hopefully, as more software gets natively compiled for ARM, these issueswill become less frequent.</p><p>Remember, whenever you're stuck, the community (and sometimes even afriendly AI assistant) is there to help!</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Debug Logs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>LEAN</tag>
      
      <tag>automated theorem proving</tag>
      
      <tag>Programming Tips</tag>
      
      <tag>arm based system</tag>
      
      <tag>Homebrew</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jul 12 Wed</title>
    <link href="/2023/07/12/Intern-study-summary-Jul-12-Wed/"/>
    <url>/2023/07/12/Intern-study-summary-Jul-12-Wed/</url>
    
    <content type="html"><![CDATA[<h1 id="python">Python</h1><h2 id="compare-complex-object">Compare complex object</h2><p>When I was doing unittest on my project, I got<code>ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()</code>for my <code>self.assertEqual()</code></p><p>This error is due to trying to directly compare two arrays using the<code>assertEqual</code> function in the <code>unittest</code> module.The error message suggests that it's ambiguous to evaluate the truthvalue of an array with more than one element.</p><p>To fix this, you can use<code>numpy.testing.assert_array_equal</code> to compare numpy arrayselement by element:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestModel</span>(unittest.TestCase):<br>    ...<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_load_model_with_target_size</span>(<span class="hljs-params">self</span>):<br>        ...<br>        np.testing.assert_array_equal(self.sample_target_size, target_size)<br>    ...<br><br></code></pre></td></tr></table></figure><p>This <code>assert_array_equal</code> function raises anAssertionError if two array-like objects are not equal. If they are notthe same shape, they are considered unequal. If an element in one of theinput arrays has a value of <code>NaN</code>, then the correspondingelement in the other input is considered equal if it also has a value of<code>NaN</code>.</p><p>Note: <code>numpy</code> should be already installed if you'redealing with arrays. If not, you may need to install it using<code>pip install numpy</code>.</p><h2 id="one-time-setup">One time <code>setUp()</code></h2><p>While unittesting, we usually need to set up some data before we canactually testing the function. Those setting up process could beduplicated code, which we should void. Thus, we could use the<code>setUp</code> function, which will be auto called before every testfunction ran.</p><p>Yet sometimes we use very complex <code>setUp</code> function to dosome process that might take a lot of time. In this case, it would bebetter to only do the <code>setUp</code> once and make the rest ofunittests use the result from that <code>setUp</code>.</p><p>Here is a conditional way of calling <code>setUp</code>, if somethingalready been initialized, simply return and do not do <code>setUp</code>any more. Here, I will use the <code>id</code> as something we shouldonly initialize once.</p><p>You can check if <code>self.id</code> exists in the instancedictionary of the class using <code>hasattr()</code>. The<code>hasattr()</code> function in Python is used to check if an objecthas the given named attribute and return true if present, elsefalse.</p><p>Here is an example of how you could modify your <code>setUp()</code>method:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> unittest<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestMyClass</span>(unittest.TestCase):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">setUp</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">hasattr</span>(self, <span class="hljs-string">&#x27;id&#x27;</span>):<br>            self.<span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;some id&quot;</span> <span class="hljs-comment"># Or use a function to generate the id</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_something</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># Your test here</span><br>        <span class="hljs-keyword">pass</span><br><br></code></pre></td></tr></table></figure><p>In this example, <code>setUp()</code> first checks if<code>self.id</code> exists. If not, it sets an ID. Now, you can use<code>self.id</code> throughout your tests without getting an<code>AttributeError</code>. This ID will be generated before each testruns, but only if it hasn't been generated before.</p><h3 id="yet-this-way-is-not-perfect-because">Yet this way is notperfect, because:</h3><p>The <code>setUp()</code> method in <code>unittest.TestCase</code> isdesigned to run before each test method, meaning the attributes set init won't persist between tests, causing the <code>AttributeError</code>you're experiencing.</p><p>One possible solution is using the <code>setUpClass(cls)</code>method instead. This method is a class method, and it's run only oncebefore any tests or the <code>setUp()</code> method is run in the testcase. The attribute defined in this method should persist acrossdifferent tests.</p><p>Here's how you can use it:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> unittest<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestModel</span>(unittest.TestCase):<br><span class="hljs-meta">    @classmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">setUpClass</span>(<span class="hljs-params">cls</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">hasattr</span>(cls, <span class="hljs-string">&#x27;test_id&#x27;</span>):<br>            cls.test_id = <span class="hljs-string">&quot;some id&quot;</span>  <span class="hljs-comment"># Set a test_id here</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_load_model_with_target_size</span>(<span class="hljs-params">self</span>):<br>        model, target_size = load_model_with_target_size(self.__class__.test_id)<br>        <span class="hljs-comment"># rest of the test</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_read_model</span>(<span class="hljs-params">self</span>):<br>        model, config = load_model_from_db(self.__class__.test_id)<br>        <span class="hljs-comment"># rest of the test</span><br><br></code></pre></td></tr></table></figure><p>In this case, <code>test_id</code> is set as a class attribute, soit's shared among all instances of <code>TestModel</code>, allowing itto be accessed in any test method. Note the use of<code>self.__class__.test_id</code> in the test methods instead of<code>self.test_id</code>.</p><p>Also, ensure that your function<code>load_model_with_target_size()</code> and<code>load_model_from_db()</code> are implemented correctly and canhandle the value of <code>test_id</code> that you are passing.</p><h3id="but-i-cannot-set-some-attribute-to-self-if-i-used-this-method">But Icannot set some attribute to self if I used this method</h3><p>You're correct that <code>setUpClass(cls)</code> is a class methodand hence doesn't have access to instance-specific variables. Therecommended way to have instance-specific setup is using the<code>setUp(self)</code> method, which gets run before every test methodin the class. However, it will not retain the value of the variablebetween different tests.</p><p>If you want to set a value only once and use that value in multipletests (while still having access to instance variables), you can use acombination of <code>setUpClass(cls)</code> and<code>setUp(self)</code>. Use <code>setUpClass(cls)</code> to set avalue that's shared among all instances, and <code>setUp(self)</code> toassign that shared value to an instance variable.</p><p>Here's an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> unittest<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestModel</span>(unittest.TestCase):<br><span class="hljs-meta">    @classmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">setUpClass</span>(<span class="hljs-params">cls</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">hasattr</span>(cls, <span class="hljs-string">&#x27;test_id&#x27;</span>):<br>            cls.test_id = <span class="hljs-string">&quot;some id&quot;</span>  <span class="hljs-comment"># Set a test_id here</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">setUp</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">hasattr</span>(self, <span class="hljs-string">&#x27;id&#x27;</span>):<br>            self.<span class="hljs-built_in">id</span> = self.__class__.test_id<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_load_model_with_target_size</span>(<span class="hljs-params">self</span>):<br>        model, target_size = load_model_with_target_size(self.<span class="hljs-built_in">id</span>)<br>        <span class="hljs-comment"># rest of the test</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_read_model</span>(<span class="hljs-params">self</span>):<br>        model, config = load_model_from_db(self.<span class="hljs-built_in">id</span>)<br>        <span class="hljs-comment"># rest of the test</span><br><br></code></pre></td></tr></table></figure><p>In this case, <code>setUpClass(cls)</code> sets <code>test_id</code>as a class attribute, which is shared among all instances.<code>setUp(self)</code> then assigns this class attribute to aninstance attribute <code>self.id</code> before each test. Now, you canuse <code>self.id</code> in your test methods. This way, you'll get thedesired effect: <code>test_id</code> is set only once, and its value isused in each test via the instance attribute <code>self.id</code>.</p><p>Remember, this will give you the same <code>test_id</code> for alltest methods in the class. If you want to use different IDs fordifferent test methods, you'll have to generate a new ID within eachtest method itself.</p><h2 id="environment-variable-operation">Environment variableoperation</h2><p>To set environment variables in Python, you can use the<code>os</code> module's <code>environ</code> dictionary. Here's anexample of setting an environment variable:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br><span class="hljs-comment"># Set environment variable</span><br>os.environ[<span class="hljs-string">&#x27;MY_ENV_VAR&#x27;</span>] = <span class="hljs-string">&#x27;my value&#x27;</span><br><br><span class="hljs-comment"># Get environment variable</span><br><span class="hljs-built_in">print</span>(os.getenv(<span class="hljs-string">&#x27;MY_ENV_VAR&#x27;</span>))  <span class="hljs-comment"># Outputs: &#x27;my value&#x27;</span><br><br></code></pre></td></tr></table></figure><p>However, it's important to note that these environment variables areonly set for the current process in which your Python script is running.If you exit this script or start a new one, the environment variablesyou set will not be available.</p><p>If you want to set environment variables that are available to allprocesses, you will need to do this outside of Python, typically in thecommand line for your operating system. The method varies depending onwhether you are using Windows, macOS, or a Linux-based system. Forinstance, in Linux you could use the <code>export</code> command:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">export MY_ENV_VAR=<span class="hljs-string">&quot;my value&quot;</span><br><br></code></pre></td></tr></table></figure><p>And then access it in Python:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br><span class="hljs-comment"># Get environment variable</span><br><span class="hljs-built_in">print</span>(os.getenv(<span class="hljs-string">&#x27;MY_ENV_VAR&#x27;</span>))  <span class="hljs-comment"># Outputs: &#x27;my value&#x27;</span><br><br></code></pre></td></tr></table></figure><p>Keep in mind that this will only set the environment variable for theduration of the current terminal session. If you want to set apersistent environment variable, you will need to add the<code>export</code> line to your shell profile file (like<code>.bashrc</code> or <code>.bash_profile</code> for bash,<code>.zshrc</code> for zsh, etc.).</p><h2 id="flag-argument-in-click">flag argument in click</h2><p>Click is a Python library used for creating beautiful command lineinterfaces. To have an argument that acts as a flag to turn on somefunctionality, you would use an <code>option</code> rather than an<code>argument</code>.</p><p>Options in Click are optional (as the name suggests) and can beboolean flags. This is exactly what you want. Here is an example how youcan implement it:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> click<br><br><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&#x27;--read-file&#x27;</span>, <span class="hljs-string">&#x27;-f&#x27;</span>, is_flag=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;Turn on file reading&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_program</span>(<span class="hljs-params">read_file</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;My Program that reads a file if -f is provided.&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> read_file:<br>        <span class="hljs-comment"># put your file reading code here</span><br>        click.echo(<span class="hljs-string">&#x27;File reading turned on.&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        click.echo(<span class="hljs-string">&#x27;File reading turned off.&#x27;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    my_program()<br><br></code></pre></td></tr></table></figure><p>In the example above, <code>read_file</code> is a boolean that is<code>True</code> if <code>-f</code> or <code>--read-file</code> ispassed on the command line, and <code>False</code> otherwise. The<code>is_flag=True</code> part is what makes this an on/off switch. Notethe use of <code>option</code> instead of <code>argument</code> todenote that this is optional.</p><p>You can run the program with the <code>-f</code> option likethis:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">$ python my_program.py -f<br>File reading turned on.<br><br></code></pre></td></tr></table></figure><p>And without <code>-f</code>, it would be:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">$ python my_program.py<br>File reading turned off.<br><br></code></pre></td></tr></table></figure><h1 id="numpy">Numpy</h1><p>I met a problem when I was trying to read the data(the type isndarray) I saved to my database: I found even the dimension of my datais different. I thought about it and found that the problem was aboutthe <code>dtype</code>. When storing an ndarry, the default<code>dtype</code> is <code>np.float64</code>, yet while reading I used<code>np.float32</code>. Thus, I was thinking make the<code>dtype</code> as an input parameter:</p><h1 id="ndarray-reading-from-file-different-from-storing">ndarrayreading from file different from storing</h1><p>the float</p><p>Please note that the string should match a valid numpy dtype. Thefull list of valid numpy dtypes can be found in the <ahref="https://numpy.org/devdocs/user/basics.types.html">NumPydocumentation</a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">result = from_buffer(target_size_byte, dtype=<span class="hljs-string">&#x27;float64&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>You can also use equivalent string values to represent the numpydtype. For example, you could replace <code>np.float64</code> with thestring <code>'float64'</code>.</p><p>In this function <code>from_buffer</code>, the <code>dtype</code> isa parameter where you can specify the desired data type.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">from_buffer</span>(<span class="hljs-params">target_size_byte, dtype</span>):<br>    target_size = np.frombuffer(target_size_byte, dtype=dtype)<br>    <span class="hljs-keyword">return</span> target_size<br><br><span class="hljs-comment"># Usage</span><br>result = from_buffer(target_size_byte, dtype=np.float64)<br><br></code></pre></td></tr></table></figure><p>If you want to set the <code>np.float64</code> as an input parameterto your function, you can simply use a variable that you pass to yourfunction. This variable should be of type <code>numpy.dtype</code> orany equivalent type string. Here is an example:</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Programming Tips</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>UnitTest</tag>
      
      <tag>Numpy</tag>
      
      <tag>Environment Variable</tag>
      
      <tag>Click Library</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jul 11 Tue</title>
    <link href="/2023/07/11/Intern-study-summary-Jul-11-Tue/"/>
    <url>/2023/07/11/Intern-study-summary-Jul-11-Tue/</url>
    
    <content type="html"><![CDATA[<h1 id="python">Python</h1><h2 id="equal-and">Equal and <code>==</code></h2><p><code>self.assertEqual</code> is a method provided by the<code>unittest</code> module in Python. It is used in test cases toassert that two values are equal. If they are not, the test fails and anAssertionError is raised.</p><p><code>self.assertEqual</code> uses the <code>==</code> operator tocheck for equality, which checks if two objects have the same value.This can be thought of as checking equality "by value".</p><p>In Python, <code>==</code> compares the value of two objects, whereasthe <code>is</code> operator checks whether they are the exact sameobject (i.e., comparing "by reference"). For instance:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>b = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>c = a<br><br><span class="hljs-built_in">print</span>(a == b)  <span class="hljs-comment"># True - a and b have the same values</span><br><span class="hljs-built_in">print</span>(a <span class="hljs-keyword">is</span> b)  <span class="hljs-comment"># False - a and b are different objects in memory</span><br><span class="hljs-built_in">print</span>(a <span class="hljs-keyword">is</span> c)  <span class="hljs-comment"># True - a and c are the exact same object in memory</span><br><br></code></pre></td></tr></table></figure><h3 id="compare-with-java">compare with Java</h3><p>In Java, the <code>==</code> operator checks for reference equality(whether two variables reference the exact same object), which isanalogous to the <code>is</code> operator in Python. The<code>equals</code> method in Java is used to check for value equality,but its behavior can vary depending on how it's implemented in the classof the objects being compared. This is most similar to the<code>==</code> operator in Python or <code>self.assertEqual</code> inPython's <code>unittest</code> module.</p><h2 id="return-two-different-type-together">Return two different typetogether</h2><h3 id="example">example:</h3><p>If I have return as <code>return model, target_size</code>,<code>model</code> is <code>Model</code> type, and<code>target_size</code> is ndarray type. How do I put in the functionafter <code>&gt;</code>?</p><p>The "-&gt;" symbol is used in Python type hinting to indicate thereturn type of a function. It's used to make the code easier tounderstand and maintain, and to help in using tools that perform typechecking or provide coding assistance.</p><p>In your case, since your function is returning a tuple of a<code>Model</code> type object and a <code>ndarray</code> type object,you can indicate the return type like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Model<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">your_function</span>(<span class="hljs-params">...</span>) -&gt; <span class="hljs-built_in">tuple</span>[Model, np.ndarray]:<br>    <span class="hljs-comment"># your code</span><br>    <span class="hljs-keyword">return</span> model, target_size<br><br></code></pre></td></tr></table></figure><p>In this code:</p><ul><li><code>Model</code> is the type for the <code>model</code>.</li><li><code>np.ndarray</code> is the type for<code>target_size</code>.</li></ul><p>Note that these type hints are not enforced at runtime. Python isstill a dynamically typed language. These hints are primarily for thebenefit of the programmer and development tools.</p><p>Also, if your Python version is lower than 3.9, you might want to use<code>Tuple</code> from <code>typing</code> module because the built-in<code>tuple</code> does not support type hints in those versions:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> keras.models <span class="hljs-keyword">import</span> Model<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> typing <span class="hljs-keyword">import</span> <span class="hljs-type">Tuple</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">your_function</span>(<span class="hljs-params">...</span>) -&gt; <span class="hljs-type">Tuple</span>[Model, np.ndarray]:<br>    <span class="hljs-comment"># your code</span><br>    <span class="hljs-keyword">return</span> model, target_size<br><br></code></pre></td></tr></table></figure><h1 id="database">Database</h1><h2 id="mongodb-read-by-id">MongoDB Read by ID</h2><p>In order to access MongoDB data in Python, you need to use a librarycalled <code>pymongo</code>. Here's a simple example of how you canretrieve a document by its <code>_id</code>:</p><p>Firstly, install the <code>pymongo</code> package using pip:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">pip install pymongo<br><br></code></pre></td></tr></table></figure><p>And then use this script:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pymongo <span class="hljs-keyword">import</span> MongoClient<br><span class="hljs-keyword">from</span> bson.objectid <span class="hljs-keyword">import</span> ObjectId<br><br><span class="hljs-comment"># Create a client connection to your MongoDB instance</span><br>client = MongoClient(<span class="hljs-string">&#x27;mongodb://localhost:27017/&#x27;</span>)<br><br><span class="hljs-comment"># Access the &#x27;database&#x27; database and the &#x27;collection&#x27; collection</span><br>db = client[<span class="hljs-string">&#x27;database&#x27;</span>]<br>collection = db[<span class="hljs-string">&#x27;collection&#x27;</span>]<br><br><span class="hljs-comment"># Define the id you&#x27;re looking for</span><br>id_to_find = <span class="hljs-string">&#x27;60ebe5ab9d6965cb97f9d0a2&#x27;</span>  <span class="hljs-comment"># replace with your id string</span><br><br><span class="hljs-comment"># Use the ObjectId class to convert the id string into an ObjectId</span><br>id_to_find = ObjectId(id_to_find)<br><br><span class="hljs-comment"># Use the find_one method, which returns the first matching document</span><br>document = collection.find_one(&#123;<span class="hljs-string">&#x27;_id&#x27;</span>: id_to_find&#125;)<br><br><span class="hljs-comment"># Print the document</span><br><span class="hljs-built_in">print</span>(document)<br><br></code></pre></td></tr></table></figure><p>You will need to replace <code>'mongodb://localhost:27017/'</code>with the connection string for your own MongoDB instance. Replace<code>'database'</code> and <code>'collection'</code> with the names ofyour database and collection, and<code>'60ebe5ab9d6965cb97f9d0a2'</code> with the id string of thedocument you're trying to find.</p><p>This script first connects to your MongoDB instance and selects thedesired database and collection. It then uses the <code>find_one</code>method on the collection to retrieve the document with the specified<code>_id</code>. The <code>find_one</code> method returns<code>None</code> if no document matches the query. Finally, it printsout the document.</p><p>Remember to import the <code>ObjectId</code> class from the<code>bson.objectid</code> module, which is needed to convert the stringrepresentation of an id into a proper MongoDB ObjectId.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Programming Tips</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>Command Line</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jul 10 Mon</title>
    <link href="/2023/07/10/Intern-study-summary-Jul-10-Mon/"/>
    <url>/2023/07/10/Intern-study-summary-Jul-10-Mon/</url>
    
    <content type="html"><![CDATA[<h1 id="scaling-for-predicted-data">Scaling for predicted data</h1><h2id="i-was-in-the-middle-of-a-machine-learning-project-and-i-met-a-situation-where-there-was-a-scaler-applied-after-predicted-data.">Iwas in the middle of a machine learning project, and I met a situationwhere there was a scaler applied after predicted data.</h2><p>There is an example of scaler</p><p>Suppose you're predicting house prices, and let's say the price rangein your data is $100,000 to $1,000,000. In machine learning, it's oftenbeneficial to normalize target variables to make the training processmore efficient and stable. This is especially the case with deeplearning models.</p><p>So, in pre-processing, you might divide all house prices by$1,000,000 to ensure the target values fall within a smaller range, saybetween 0.1 and 1.0. This is your normalization step.</p><p>Now, suppose you have trained your model and are ready to makepredictions. You input a set of features describing a house into yourmodel, and it outputs a value of 0.5.</p><p>Here's the important part: that 0.5 isn't the actual predicted priceof the house. It's the normalized price. Because the model was trainedon normalized prices, it also predicts normalized prices.</p><p>So, how do you interpret this prediction? That's where the originalscale comes back in. You need to undo the normalization to get thepredicted price in dollars. To do this, you multiply the normalizedprediction by the scaling factor you used during pre-processing, whichis $1,000,000 in our example.</p><p>After doing this, we find our model predicts the house to be worth$500,000.</p><p>So, this is why the mean (or any other scaling factor) of the targetvalues is stored: you need it to "unnormalize" the predictions made byyour model to get them back into a meaningful scale. It's not that youneed the target values to make predictions, it's that you need them tointerpret the predictions.</p><h2id="relationship-between-model-and-the-scaling-parameter">Relationshipbetween model and the scaling parameter</h2><p>In a typical production setting, the scaling parameters (for bothfeatures and targets) would be calculated during the training phase,stored, and then used in the prediction phase.</p><p>When you're ready to make predictions with new data, you would:</p><ol type="1"><li>Apply the same preprocessing steps to the new data as were appliedto the training data, using the stored feature scaling parameters. Thisincludes filling in missing values, scaling, and any othertransformations.</li><li>Run the model to make predictions.</li><li>Transform the model's predictions back to the original scale usingthe stored target scaling parameters.</li></ol><p>The point to note here is that the scaling parameters are derivedfrom the training data, not the new data. This ensures that the modelsees the new data in the same way it saw the training data, and that thepredictions it makes are on the correct scale.</p><h1 id="python">Python</h1><h2 id="check-my-global-python">check my global python</h2><p>To check your global Python version, you can use the command line onyour operating system. Here is a general procedure:</p><ol type="1"><li><strong>Open your Terminal</strong><ul><li>For macOS and Linux: you can use the Terminal application</li><li>For Windows: you can use Command Prompt or PowerShell</li></ul></li><li><strong>Type the following command and press Enter</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python --version<br></code></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 --version<br><br></code></pre></td></tr></table></figure><p>This command will output something like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Python 3.8.5<br><br></code></pre></td></tr></table></figure><p>This means that your global Python version is 3.8.5.</p><p>If you have multiple versions of Python installed on your system, the<code>python --version</code> command will give you the version that isset as the default.</p><p>Keep in mind that for some systems, particularly if they're running arecent version of macOS or Linux, <code>python</code> may refer toPython 2.x, and <code>python3</code> will refer to Python 3.x. As such,if you want to know the version of Python 3.x installed, it's oftenbetter to use <code>python3 --version</code>.</p><h2 id="pip-vs-pip3"><code>pip</code> vs <code>pip3</code></h2><p><code>pip</code> and <code>pip3</code> are package managers forPython that allow you to install and manage additional libraries anddependencies not included with the standard Python distribution.</p><p>The primary difference between <code>pip</code> and <code>pip3</code>has to do with the version of Python that they are intended to managepackages for:</p><ol type="1"><li><code>pip</code>: This command is often used for Python 2.xversions. However, if you've only installed Python 3.x on your system,<code>pip</code> might be configured to work with Python 3.x.</li><li><code>pip3</code>: This command is explicitly used for Python 3.xversions. If you have both Python 2.x and Python 3.x installed on yoursystem and you want to manage packages for Python 3.x, you would use<code>pip3</code>.</li></ol><p>Remember that as of January 1, 2020, Python 2.x has been officiallydeprecated, and it's recommended to use Python 3.x. Therefore, it'sgenerally more relevant to use <code>pip3</code> unless you'remaintaining legacy Python 2.x code.</p><p>One more thing to note is that the specific usage of <code>pip</code>or <code>pip3</code> can also depend on how your Python environment isset up. Some environments may be configured such that the<code>pip</code> command refers to Python 3.x, so it's always importantto confirm which version of Python your <code>pip</code> commandcorresponds to. This can usually be done by checking the version of pipwith the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip --version<br><br></code></pre></td></tr></table></figure><p>This command will output the version of pip and the version of Pythonit is linked with.</p><h1 id="problem-with-anaconda-with-jupyter">Problem with Anaconda withJupyter</h1><p>When I created a new virtual environment, I find that it did notappear in my Jupyter Lab. Also, my global python (check by<code>which python</code>) is also not changed. This problem took mehours to fix. Here are detailed steps you may debug:</p><h2 id="ipykernels-problem"><code>ipykernel</code>'s problem</h2><p>To make your newly created conda environment visible in Jupyter Lab,you will need to install the <code>ipykernel</code> module, whichprovides the IPython kernel for Jupyter. Here's how to do it:</p><ol type="1"><li>First, make sure you're in the correct environment. If not, activateit:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate myenv<br><br></code></pre></td></tr></table></figure><ol type="1"><li>Now, install <code>ipykernel</code>:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c anaconda ipykernel<br><br></code></pre></td></tr></table></figure><ol type="1"><li>Finally, create a new kernel for your environment:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -m ipykernel install --user --name=myenv<br><br></code></pre></td></tr></table></figure><p>Replace <code>myenv</code> with the name of your environment.</p><ol type="1"><li>Now, you can deactivate your environment:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda deactivate<br><br></code></pre></td></tr></table></figure><p>After this process, you should be able to see your new environment asa kernel option within Jupyter Lab. Make sure to restart Jupyter Lab sothe changes can take effect.</p><p>Remember, when you're in Jupyter Lab and want to use your newenvironment, you should select the corresponding kernel (named<code>myenv</code> or whatever you named your environment) from thekernel selection list.</p><p>This ensures that the notebook is using your desired Pythonenvironment, and any packages installed there. If you want to return tothe default Python environment, you can select the default kernel fromthe same list.</p><h2id="applicationsxcode.appcontentsdeveloperusrbinpython3-no-module-named-ipykernel"><code>/Applications/Xcode.app/Contents/Developer/usr/bin/python3: No module named ipykernel</code></h2><p>Remember:************************************************************************************************************************Thismight also means that your global python is not switched to your virtualenvironment python! Check that first! (by<code>which python</code>)**</p><p>This error suggests that the <code>ipykernel</code> module is notinstalled in the current Python environment, or that Python is notcorrectly recognizing it.</p><p>You're getting this error because you're trying to run the<code>ipykernel</code> module with the Python version bundled withXcode. That version may not have the necessary modules installed.</p><p>Instead, you should use the Python version from the Conda environmentwhere you've installed <code>ipykernel</code>. Make sure you have yourConda environment activated when you run the command to install thekernel.</p><p>Here's how to do it:</p><ol type="1"><li><p>Activate your environment:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate myenv<br><br></code></pre></td></tr></table></figure></li><li><p>Install <code>ipykernel</code> in your environment:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c anaconda ipykernel<br><br></code></pre></td></tr></table></figure></li><li><p>Now, create a new kernel for your environment:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -m ipykernel install --user --name=myenv<br><br></code></pre></td></tr></table></figure></li></ol><p>Make sure to replace <code>myenv</code> with the name of yourenvironment. After running these commands, you should be able to seeyour new environment as a kernel option within Jupyter Lab. Don't forgetto restart Jupyter Lab to reflect the changes.</p><p>It's also a good idea to verify your Python version and path withinyour Conda environment. Use <code>which python</code> to make sure it'spointing to the Python in your Conda environment and not elsewhere.</p><p>If you're still encountering issues, you might need to adjust thePATH environment variable, or there could be a more complexconfiguration issue at hand.</p><h2 id="am-i-using-python-in-my-conda-environment">Am I using Python inmy Conda environment?</h2><p>You can check which Python version you're using and from whichlocation (path) it's running by using the command <code>which</code> and<code>python --version</code> in your terminal.</p><p>To do so, please follow these steps:</p><ol type="1"><li>Open a terminal.</li><li>If your Conda environment isn't activated, activate it with thecommand:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate myenv<br><br></code></pre></td></tr></table></figure><p>Replace <code>myenv</code> with the name of your Condaenvironment.</p><ol type="1"><li>Now, run the <code>which python</code> command. This will return thepath of the Python interpreter currently in use. When you're in anactive Conda environment, the path should point to a location within theenvironment's directory. For example:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">which</span> python<br><br></code></pre></td></tr></table></figure><p>You might see output similar to this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">/home/user/anaconda3/envs/myenv/bin/python<br><br></code></pre></td></tr></table></figure><p>This indicates that you're using the Python installed in your<code>myenv</code> Conda environment.</p><ol type="1"><li>Additionally, you can check the Python version:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python --version<br><br></code></pre></td></tr></table></figure><p>This will return the Python version that's currently in use in youractive environment. If this matches the version you've installed in yourConda environment, it's an additional confirmation that you're using theright Python interpreter.</p><h2id="i-did-not-get-my-python-pointing-to-my-virtual-environment-after-i-ran-conda-activate-the-environment">Idid not get my python pointing to my virtual environment after I ranconda activate the environment</h2><p>If running <code>conda activate myenv</code> does not switch yourPython interpreter to the one installed in the Conda environment, theremight be several reasons:</p><ol type="1"><li><strong>The PATH isn't updated</strong>: When activating a Condaenvironment, it should add itself to the front of your PATH variable.You can check your PATH by using <code>echo $PATH</code>. The path ofyour Conda environment should be the first one.</li><li><strong>Conda isn't initialized</strong>: If you've installed Condarecently or in a new shell, you may need to run <code>conda init</code>.This will set up your shell to use <code>conda activate</code> properly.You can also try opening a new terminal window or restarting yourcomputer to make sure the changes take effect.</li><li><strong>There's an issue with your Conda installation orenvironment</strong>: If your Conda installation or the specificenvironment has become corrupted for some reason, it might not activateproperly. In that case, you might need to recreate the environment orreinstall Conda.</li><li><strong>There's a problem with your shell configuration</strong>:Shell configurations, like <code>.bashrc</code> or<code>.bash_profile</code> for Bash and <code>.zshrc</code> for Zsh,could be influencing your PATH variable or how the<code>conda activate</code> command works.</li></ol><p>Here are steps you could take to potentially resolve the issue:</p><ul><li>Make sure that Conda is properly initialized for your shell. You cando this by running <code>conda init bash</code> (replace<code>bash</code> with your shell, if it's not Bash).</li><li>Check your shell configuration files (like <code>.bashrc</code>,<code>.bash_profile</code>, or <code>.zshrc</code> depending on yourshell) for anything that might be affecting the PATH variable or theoperation of Conda commands.</li><li>Try to create a new Conda environment and see if<code>conda activate</code> works for that environment.</li></ul><p>Remember to replace <code>myenv</code> with the name of your Condaenvironment when running these commands. If the problem persists, youmight want to consider reinstalling Conda.</p><h3 id="check-which-shell-i-am-using">check which shell I am using</h3><p>You can determine which shell you're currently using by executing thefollowing command in your terminal:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$0</span><br><br></code></pre></td></tr></table></figure><p>This command will output the name of the currently running shell. Theoutput could be <code>-bash</code>, <code>-zsh</code>,<code>-ksh</code>, <code>-csh</code>, <code>-tcsh</code>,<code>-sh</code>, etc. The hyphen (-) before the shell name indicatesthat this shell is a login shell. If there's no hyphen, it means theshell is not a login shell, but the shell name will still bedisplayed.</p><p>If you want to know the default shell, you can use the followingcommand:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span><br><br></code></pre></td></tr></table></figure><p>This will output the path to the default shell, which might look like<code>/bin/bash</code>, <code>/bin/zsh</code>, or something similar.</p><p>Note that you might be running a shell that's different from yourdefault shell, especially if you opened it from an application or scriptthat specified a particular shell to use.</p><h2id="i-tried-several-ways-to-fix-the-problem-of-python-not-pointing-to-correct-virtual-environment.-you-need-to-fix-the-problem-in-.">Itried several ways to fix the problem of python not pointing to correctvirtual environment. You need to fix the problem in .</h2><p>To debug the issue, you can:</p><ol type="1"><li><strong>Check your PATH variable</strong>: Print your PATH variablein your terminal with the command <code>echo $PATH</code> and verifywhether the first path is indeed the path to your conda environment'sbin directory.</li><li><strong>Check for Python aliases</strong>: In your terminal, type<code>alias</code> to see if python has been aliased to something else.Look for a line that begins with <code>alias python=</code>. If such aline exists, <code>python</code> is aliased to whatever follows the<code>=</code>.</li><li><strong>Check Conda Environment List</strong>: Check if yourenvironment is activated properly by listing all your conda environmentswith the command <code>conda env list</code>. The currently activeenvironment will have a `` next to it. If your environment isn't active,try activating it again.</li></ol><p>If you are still having issues, consider providing more details orerrors that you are encountering for more specific troubleshooting.</p><h2 id="echo-path"><code>❯ echo $PATH</code></h2><p>I got</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/local/bin:/Users/ray/opt/anaconda3/envs/test_env_2/bin:/Users/ray/opt/anaconda3/condabin:/Library/Frameworks/Python.framework/Versions/3.11/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:~/.dotnet/tools:/Library/Apple/usr/bin:/Users/ray/.fig/bin:/Users/ray/.local/bin<br></code></pre></td></tr></table></figure><p>when printing out my <code>PATH</code></p><p>From the <code>echo $PATH</code> result, it appears that<code>/usr/local/bin</code> comes before<code>/Users/ray/opt/anaconda3/envs/test_env_2/bin</code>, which is yourConda environment path.</p><p>This is likely the issue: when you type <code>python</code>, yourshell is finding a Python interpreter in <code>/usr/local/bin</code>before it gets to the one in your Conda environment.</p><p>To solve this, you need to ensure that the path to the Pythoninterpreter in your Conda environment comes before any other Pythonpaths. This can be done by appending <code>/usr/local/bin</code> to theend of the PATH instead of at the beginning.</p><p><strong>Please note</strong>: Modifying the PATH variable can affectsystem behavior. Proceed with caution and only if you're comfortabledoing so. If you're uncertain, ask for help.</p><p>You can modify your PATH variable within your shell's configurationfile (e.g., <code>.bashrc</code>, <code>.bash_profile</code>,<code>.zshrc</code>, etc.). The process might look something likethis:</p><ol type="1"><li><p>Open your shell configuration file in a text editor. For example,if you're using Zsh, you might type <code>nano ~/.zshrc</code> in theterminal.</p></li><li><p>Look for a line that starts with <code>export PATH=</code>.You're likely to find a line that looks something like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;/usr/local/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br><br></code></pre></td></tr></table></figure></li><li><p>You need to change it to append <code>/usr/local/bin</code> atthe end of the PATH. It should look like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/usr/local/bin&quot;</span><br><br></code></pre></td></tr></table></figure></li><li><p>Save the file and exit the text editor. If you're using<code>nano</code>, you can do this by pressing <code>Ctrl + X</code>,then <code>Y</code> to confirm that you want to save the changes, then<code>Enter</code> to confirm the file name.</p></li><li><p>The changes will take effect the next time you start a new shellsession, or you can source your shell configuration file to apply thechanges immediately. For example, if you're using Zsh, you could type<code>source ~/.zshrc</code>.</p></li></ol><p>After this, <code>which python</code> should point to the Pythoninterpreter in your activated Conda environment.</p><h2id="python-aliased-to-usrbinpython3"><code>python: aliased to /usr/bin/python3</code></h2><p>It looks like your <code>python</code> command is aliased to<code>/usr/bin/python3</code>. An alias in a shell is a name or shortcutfor a command or a sequence of commands.</p><p>The alias is likely set in your shell profile (like<code>.bashrc</code>, <code>.bash_profile</code>, <code>.zshrc</code>,or equivalent for your shell). You will need to locate where this aliasis set and comment it out or remove it. Here is how you can do it:</p><ol type="1"><li><p>Open your shell profile. If you are using zsh, it would be<code>~/.zshrc</code>. If bash, it could be <code>~/.bashrc</code> or<code>~/.bash_profile</code>. Use a text editor to open the file, forinstance:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.zshrc  <span class="hljs-comment"># for zsh</span><br><br></code></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.bashrc  <span class="hljs-comment"># for bash</span><br><br></code></pre></td></tr></table></figure></li><li><p>Look for a line that says<code>alias python='/usr/bin/python3'</code> or somethingsimilar.</p></li><li><p>Comment out this line by adding a <code>#</code> at the start ofthe line. It should look like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#alias python=&#x27;/usr/bin/python3&#x27;</span><br><br></code></pre></td></tr></table></figure></li><li><p>Save the file and exit. In nano, you can do this by pressing<code>Ctrl+X</code>, then <code>Y</code> to confirm that you want tosave your changes, and then <code>Enter</code> to confirm the filename.</p></li><li><p>Now you need to source your shell profile to apply the changes.If you are using zsh, type <code>source ~/.zshrc</code>. If you're usingbash, type <code>source ~/.bashrc</code> or<code>source ~/.bash_profile</code>.</p></li><li><p>Now type <code>which python</code> again. It should point to thePython in your Conda environment.</p></li></ol><p>Remember, commenting out this alias means that when you type<code>python</code>, it will no longer default to<code>/usr/bin/python3</code> in any terminal session. If you need touse this particular Python interpreter, you might want to create adifferent alias that doesn't conflict with the <code>python</code>command.</p><h2 id="zshrc"><code>.zshrc</code></h2><p>Here is my .zshrc, why when I use which python after activate virtualenvironment, it is shown not the virtual environment one</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ...</span><br><span class="hljs-comment"># alias python=/usr/bin/python3</span><br><br><span class="hljs-comment"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span><br><span class="hljs-comment"># !! Contents within this block are managed by &#x27;conda init&#x27; !!</span><br>__conda_setup=<span class="hljs-string">&quot;<span class="hljs-subst">$(&#x27;/Users/ray/opt/anaconda3/bin/conda&#x27; &#x27;shell.zsh&#x27; &#x27;hook&#x27; 2&gt; /dev/null)</span>&quot;</span><br><span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-variable">$__conda_setup</span>&quot;</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;/Users/ray/opt/anaconda3/etc/profile.d/conda.sh&quot;</span> ]; <span class="hljs-keyword">then</span><br>        . <span class="hljs-string">&quot;/Users/ray/opt/anaconda3/etc/profile.d/conda.sh&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;/Users/ray/opt/anaconda3/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">unset</span> __conda_setup<br><span class="hljs-comment"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span><br><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/usr/local/bin&quot;</span><br><br></code></pre></td></tr></table></figure><p>Based on the <code>.zshrc</code> file, there doesn't appear to be analias that would prevent you from accessing the Python interpreter inyour Conda environment.</p><p>One possible issue could be the placement of the conda initializationblock in your <code>.zshrc</code>.</p><p>The conda initialization block:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span><br>...<br><span class="hljs-comment"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span><br><br></code></pre></td></tr></table></figure><p>is at the very bottom of your <code>.zshrc</code> file. This blockensures that your Conda installation works correctly. It's supposed tomodify your PATH variable so that the <code>conda</code> command and thePython interpreter in your current Conda environment can be found.</p><p>The problem is, you are adding <code>/usr/local/bin</code> to yourPATH <strong>after</strong> the conda initialization. This means thatthe shell will find the Python interpreter in<code>/usr/local/bin</code> before the one in your Condaenvironment.</p><p>To fix this, you should move the<code>export PATH="$PATH:/usr/local/bin"</code> line above the condainitialization block. It should look like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/usr/local/bin&quot;</span><br><br><span class="hljs-comment"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span><br>...<br><span class="hljs-comment"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span><br><br></code></pre></td></tr></table></figure><p>Then, close your terminal, open a new terminal, activate your Condaenvironment, and see if <code>which python</code> points to the Pythoninterpreter in your Conda environment.</p><p>If the issue persists, it may also be due to configurations in othershell configuration files such as <code>.zsh_profile</code> or<code>.zshenv</code>, or due to an alias defined in a shell startup filethat is sourced after <code>.zshrc</code>. If the problem persists, youmay want to examine these other files.</p><h2 id="problem-remained">Problem remained</h2><p>Your <code>which python</code> command is still reporting that<code>python</code> is aliased to <code>/usr/bin/python3</code>, whichmeans somewhere in your configuration, this alias is set.</p><p>Here are a few more steps to debug the issue:</p><ol type="1"><li><strong>Check for global aliases</strong>: You can check globalaliases by typing <code>alias</code> in your terminal. This command willlist all currently active aliases in your shell. Look for an entry thatsays <code>python=/usr/bin/python3</code> or similar.</li><li><strong>Check other shell configuration files</strong>: The aliascould be set in another configuration file that gets loaded when a newshell is started. For Zsh, common ones are <code>.zshenv</code>,<code>.zprofile</code>, <code>.zshrc</code> (which you've alreadychecked), and <code>.zlogin</code>. Look for<code>alias python='/usr/bin/python3'</code> in these files and commentit out if you find it.</li><li><strong>Check conda environment activation scripts</strong>:Sometimes, custom scripts might run when you activate a condaenvironment. These scripts are located in the<code>envs/your_env/etc/conda/activate.d/</code> and<code>envs/your_env/etc/conda/deactivate.d/</code> directories insideyour conda directory. Check these scripts for the alias as well.</li></ol><p>If you find the alias, comment it out by adding a <code>#</code> atthe beginning of the line, save the file, and start a new shellsession.</p><p>If none of the above suggestions help, and you're sure there are noother shell configuration files that could set the alias, you might wantto consider reinstalling conda. Please ensure to back up important databefore proceeding with reinstallation.</p><h3 id="where-is-.zshenv-and-.zprofile">where is <code>.zshenv</code>and <code>.zprofile</code></h3><p>The <code>.zshenv</code> and <code>.zprofile</code> files aretypically located in your home directory, the same place as your<code>.zshrc</code> file. You can check if they exist and view theircontents with the following commands:</p><p>For <code>.zshenv</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.zshenv<br></code></pre></td></tr></table></figure><p>For <code>.zprofile</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.zprofile<br></code></pre></td></tr></table></figure><p>If the files do not exist, the <code>cat</code> command will returnan error message saying that there is "No such file or directory".</p><p>If they do exist, these files are used to set environment variablesand other settings each time a new shell session is started.</p><p>If you find the alias that's causing problems in these files, you cancomment it out by adding a <code>#</code> at the beginning of the line.Then, save the file and start a new shell session to see if the problemis resolved.</p><h2 id="final-problem-.zprofile">Final problem:<code>.zprofile</code></h2><p>Here is the code for .zprofile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Fig pre block. Keep at the top of this file.</span><br>[[ -f <span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.fig/shell/zprofile.pre.zsh&quot;</span> ]] &amp;&amp; <span class="hljs-built_in">builtin</span> <span class="hljs-built_in">source</span> <span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.fig/shell/zprofile.pre.zsh&quot;</span><br><span class="hljs-built_in">export</span> JAVA_HOME=$(/usr/libexec/java_home)<br><br><span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(/opt/homebrew/bin/brew shellenv)</span>&quot;</span><br><br><span class="hljs-comment"># Fig post block. Keep at the bottom of this file.</span><br>[[ -f <span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.fig/shell/zprofile.post.zsh&quot;</span> ]] &amp;&amp; <span class="hljs-built_in">builtin</span> <span class="hljs-built_in">source</span> <span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.fig/shell/zprofile.post.zsh&quot;</span><br><br><span class="hljs-comment"># Setting PATH for Python 3.11</span><br><span class="hljs-comment"># The original version is saved in .zprofile.pysave</span><br>PATH=<span class="hljs-string">&quot;/Library/Frameworks/Python.framework/Versions/3.11/bin:<span class="hljs-variable">$&#123;PATH&#125;</span>&quot;</span><br><span class="hljs-built_in">export</span> PATH<br><br></code></pre></td></tr></table></figure><p>In your <code>.zprofile</code> file, the following lines aremodifying the PATH environment variable:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Setting PATH for Python 3.11</span><br><span class="hljs-comment"># The original version is saved in .zprofile.pysave</span><br>PATH=<span class="hljs-string">&quot;/Library/Frameworks/Python.framework/Versions/3.11/bin:<span class="hljs-variable">$&#123;PATH&#125;</span>&quot;</span><br><span class="hljs-built_in">export</span> PATH<br><br></code></pre></td></tr></table></figure><p>This code prepends the directory<code>/Library/Frameworks/Python.framework/Versions/3.11/bin</code> toyour PATH. The shell looks for executables in the directories listed inPATH in order, from left to right. So, it will find the Python 3.11executable in this directory before it finds the Python executable inyour Conda environment.</p><p>To fix the issue, you should comment out these lines in your<code>.zprofile</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Setting PATH for Python 3.11</span><br><span class="hljs-comment"># The original version is saved in .zprofile.pysave</span><br><span class="hljs-comment"># PATH=&quot;/Library/Frameworks/Python.framework/Versions/3.11/bin:$&#123;PATH&#125;&quot;</span><br><span class="hljs-comment"># export PATH</span><br><br></code></pre></td></tr></table></figure><p>Save the changes, close your terminal, open a new terminal, activateyour Conda environment, and then try <code>which python</code> again. Itshould now point to the Python interpreter in your Condaenvironment.</p><p>Here, the problem solved.</p><h1 id="machine-learning-set-up">Machine Learning Set Up</h1><p>I started working on a machine learning project and here are mylearning summaries for setting up for machine learning</p><h2id="sudo-apt-install-build-essential"><code>sudo apt install build-essential</code></h2><p>The command <code>sudo apt install build-essential</code> is used inDebian-based Linux distributions such as Ubuntu. Here's what each partof the command does:</p><ul><li><code>sudo</code>: This is a command that allows you to run othercommands with administrative (superuser) permissions. It's a way ofsaying, "I know what I'm doing, please allow me to execute thiscommand."</li><li><code>apt</code>: This is the package management command-line toolused by Ubuntu and other Debian-based distributions. It's used forhandling packages, which are collections of files that comprise softwareapplications or parts of them.</li><li><code>install</code>: This is the command you use to tell<code>apt</code> that you want to install a package.</li><li><code>build-essential</code>: This is a package that includes abunch of software that's essential for building (compiling and linking)other software. For example, it includes the <code>gcc</code> and<code>g++</code> compilers, and the <code>make</code> utility, which areall used in the process of turning source code into runnableprograms.</li></ul><p>So, to break it down, <code>sudo apt install build-essential</code>is a command that you would use on a Debian-based system to install theessential packages you need to build other software from sourcecode.</p><h2 id="do-i-use-the-same-commend-in-macos">Do I use the same commend inMacOS?</h2><p>In contrast, macOS uses a different system for package management. Itdoesn't come with a built-in package manager like <code>apt</code>, butmany macOS users use package managers like <code>Homebrew</code> or<code>MacPorts</code> to install software from the command line.</p><p>If you have Homebrew installed, you can install the Xcode CommandLine Tools (which include compilers and other build tools) with thiscommand:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">xcode-select --install<br></code></pre></td></tr></table></figure><p>And, you can install other necessary tools with:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install make gcc<br></code></pre></td></tr></table></figure><p>If you don't have Homebrew, you can install it with the followingcommand:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/bin/bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL &lt;https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&gt;)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>Please note that while these commands are generally safe to run, youshould always be careful when executing commands that require<code>sudo</code> or other administrative privileges, as they canpotentially make major changes to your system. Make sure to understandwhat a command does before you run it.</p><h2 id="miniconda">Miniconda</h2><p>Miniconda is a free, minimal installer for Conda. Conda is anopen-source package management system and environment management systemthat runs on Windows, macOS, and Linux. Conda quickly installs, runs,and updates packages and their dependencies, and it allows you to switchbetween environments on your local machine.</p><p>Miniconda is essentially a stripped-down version of the full Anacondadistribution, which is used for data science and machine learning tasks.Miniconda includes only Conda and its dependencies, making it alightweight alternative for those who don't need (or want to manuallycontrol) the extra packages included in the full Anacondadistribution.</p><p>With Miniconda installed, you can use the Conda commands to manageenvironments and install packages. For instance, if you wanted toinstall a package such as numpy, you could create a new environment andinstall numpy into it using the Conda package manager.</p><p>Miniconda can be a good choice if you:</p><ul><li>Want to minimize the disk space taken up by your Python setup.</li><li>Already know which packages you need and prefer to manually controlyour package installations.</li><li>Are setting up Python on a system where you don't have full controlover your environment, such as a server.</li></ul><h2 id="anaconda-miniconda">Anaconda &amp; Miniconda</h2><h3 id="if-i-have-anaconda-installed-do-i-still-need-miniconda">If Ihave anaconda installed, do I still need miniconda?</h3><p>If you already have Anaconda installed, you don't need to installMiniconda. Both Anaconda and Miniconda use Conda as their packagemanager. The primary difference is that Anaconda comes with a lot morepre-installed packages, while Miniconda starts with a minimal set offeatures to save space.</p><p>To check if you have Conda installed (either through Anaconda orMiniconda), you can use your command line interface. Here's how you doit:</p><ol type="1"><li><p>Open a terminal (on Linux or macOS) or command prompt (onWindows).</p></li><li><p>Type the following command and press enter:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda --version<br></code></pre></td></tr></table></figure></li></ol><p>If Conda is installed, this command should return the version numberof your Conda installation. If the command isn't recognized or returnsan error, then Conda is likely not installed (or not correctly added toyour system's PATH variable).</p><p>In the case that you don't see any output or get an error, you mightneed to install Conda (either through Anaconda for a more completepackage, or Miniconda for a minimalistic setup).</p><h3 id="does-miniconda-and-conda-share-the-same-command">Does minicondaand conda share the same command?</h3><p>Yes, both Anaconda and Miniconda use Conda as their package andenvironment management system. Therefore, the command line interface andthe usage of commands are the same for both.</p><p>Here are a few common Conda commands that you would use in bothAnaconda and Miniconda:</p><ul><li><strong>To create a new environment</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create --name myenv<br><br></code></pre></td></tr></table></figure> Replace"myenv" with the name of your choice.</li><li><strong>To activate an environment</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate myenv<br><br></code></pre></td></tr></table></figure> Replace"myenv" with the name of the environment you wish to activate.</li><li><strong>To install a package</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install package-name<br><br></code></pre></td></tr></table></figure> Replace"package-name" with the name of the package you wish to install.</li><li><strong>To list all environments</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda <span class="hljs-built_in">env</span> list<br><br></code></pre></td></tr></table></figure> Thiscommand shows you all the Conda environments you have on yoursystem.</li><li><strong>To update a specific package</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda update package-name<br><br></code></pre></td></tr></table></figure>Replace "package-name" with the name of the package you wish toupdate.</li><li><strong>To remove a package</strong>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda remove package-name<br><br></code></pre></td></tr></table></figure> Replace"package-name" with the name of the package you wish to remove.</li><li><strong>To deactivate the current environment</strong>:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda deactivate<br><br></code></pre></td></tr></table></figure></li></ul><p>So, regardless of whether you're using Anaconda or Miniconda, thesecommands will work the same way as long as you have Conda installed andproperly set up on your system.</p><h2 id="problem-with-torch">Problem with Torch</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">/var/folders/l7/_k2kxj9n5m5fnj95rbr69_dh0000gn/T/ipykernel_29889/<span class="hljs-number">3360310955.</span>py:<span class="hljs-number">1</span>: UserWarning: Failed to initialize NumPy: No module named <span class="hljs-string">&#x27;numpy&#x27;</span> (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_numpy.cpp:<span class="hljs-number">84.</span>)<br>  x = torch.arange(<span class="hljs-number">12</span>)<br></code></pre></td></tr></table></figure><p>The warning message you're seeing means that the Python environmentin which you're running your code does not have the NumPy moduleinstalled, or the installation has not been properly recognized.</p><p>NumPy is a Python library that provides support for large,multi-dimensional arrays and matrices, along with a collection ofmathematical functions to operate on these arrays. It's a cruciallibrary in scientific computing with Python.</p><p>In the context of PyTorch, a deep learning framework, NumPy is usedinternally for certain operations. The code you're trying to run appearsto be creating a PyTorch tensor using <code>torch.arange(12)</code>, andfor some reason, PyTorch is trying to use NumPy and failing because itcan't find it.</p><p>You can try installing NumPy using pip (Python's package manager)with the following command:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> numpy<br><br></code></pre></td></tr></table></figure><p>Or if you're using an Anaconda distribution, you can use:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">conda <span class="hljs-keyword">install</span> numpy<br><br></code></pre></td></tr></table></figure><p>After installation, make sure you restart your Python interpreter orJupyter notebook (if you're using it), so that the newly installedpackage is correctly picked up by your environment.</p><p>If you've already installed NumPy and still are seeing this issue,it's possible that there's some kind of environment conflict. Make surethat the Python interpreter you're running your code in is the same onewhere you installed NumPy.</p><p>If the issue persists even after these steps, there might be deeperconfiguration issues with your Python environment, which would requiremore detailed debugging.</p><h2 id="can-i-not-fix-it">Can I not fix it?</h2><p>It depends on the tasks you're performing. For simple operations inPyTorch, the absence of NumPy might not affect your code. But as thewarning suggests, some PyTorch functions do rely on NumPy internally. Ifyou attempt to use one of these functions, it may cause errors orunexpected behavior. Additionally, NumPy and PyTorch are often usedtogether in machine learning and data processing workflows due to theircomplementary features, so not having NumPy might limit what you cando.</p><p>For example, PyTorch provides functions to convert its tensors toNumPy arrays and vice versa (<code>torch.from_numpy</code>,<code>tensor.numpy()</code>), which is a common operation in machinelearning pipelines. These functions won't work if NumPy isn'tinstalled.</p><p>Given that NumPy is a fundamental library in the Python scientificstack and it's relatively easy to install, it's generally recommended tohave it installed if you're doing anything related to data analysis,machine learning, or scientific computing. If there's a specific reasonwhy you don't want to install NumPy, it might be helpful to provide morecontext.</p><h1 id="store-model-in-database-mongodb">Store Model in database(MongoDB)</h1><p>To store a machine learning model in MongoDB, you need to serializethe model into a format that can be stored in a MongoDB database.MongoDB is a NoSQL database which supports storing binary data in BSONformat (Binary JSON), so you can save your model as a binary blob andthen save it in MongoDB.</p><p>Here is how you can do it using PyTorch:</p><ol type="1"><li><p><strong>Serialize your PyTorch model (model.pth)</strong></p><p>You can use PyTorch's <code>torch.save()</code> function to serializethe model.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br>model = ...  <span class="hljs-comment"># Assume your model is already trained</span><br>torch.save(model.state_dict(), <span class="hljs-string">&quot;model.pth&quot;</span>)<br><br></code></pre></td></tr></table></figure></li><li><p><strong>Convert the .pth file to bytes</strong></p><p>To save the model in MongoDB, you need to convert the model file tobytes. You can use Python's built-in functions to read the model asbytes.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;model.pth&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    bytes_data = f.read()<br><br></code></pre></td></tr></table></figure></li><li><p><strong>Save the bytes data to MongoDB</strong></p><p>You can now save this bytes data to MongoDB using PyMongo, which is aPython driver for MongoDB.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pymongo <span class="hljs-keyword">import</span> MongoClient<br>client = MongoClient(<span class="hljs-string">&#x27;mongodb://localhost:27017/&#x27;</span>)<br>db = client[<span class="hljs-string">&#x27;mydatabase&#x27;</span>]<br>collection = db[<span class="hljs-string">&#x27;mymodels&#x27;</span>]<br>model_data = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;my_model&quot;</span>,<br>    <span class="hljs-string">&quot;data&quot;</span>: bytes_data<br>&#125;<br>collection.insert_one(model_data)<br><br></code></pre></td></tr></table></figure></li><li><p><strong>Retrieve the model</strong></p><p>Later, if you want to retrieve the model from MongoDB, you can do thefollowing:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">retrieved_model_data = collection.find_one(&#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;my_model&quot;</span>&#125;)<br>bytes_data = retrieved_model_data[<span class="hljs-string">&quot;data&quot;</span>]<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;retrieved_model.pth&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(bytes_data)<br><br><span class="hljs-comment"># Now you can load the model with PyTorch</span><br>model = ...  <span class="hljs-comment"># Instantiate your model class</span><br>model.load_state_dict(torch.load(<span class="hljs-string">&quot;retrieved_model.pth&quot;</span>))<br><br></code></pre></td></tr></table></figure></li></ol><p>This code assumes you have MongoDB running locally and you havePyMongo installed (<code>pip install pymongo</code>). Please replace<code>"mydatabase"</code>, <code>"mymodels"</code>, and<code>"my_model"</code> with your actual database, collection, and modelnames respectively.</p><p>Please note, JSON is a text-based format and might not be efficientfor storing large binary data like machine learning models. Also, someinformation might get lost when converting the binary model to JSON.Therefore, it's better to store the model directly as binary data inMongoDB.</p><p>As a best practice, for larger models, consider using a dedicatedmodel storage system or cloud-based storage solutions like Amazon S3 orGoogle Cloud Storage. MongoDB is great for structured data, but mightnot be the most efficient way to store large binary blobs like machinelearning models.</p><h1 id="some-fun-facts-about-chatgpt">Some fun facts about ChatGPT</h1><p>I asked:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">I am curious about whether you will take any non-characters into account when I am asking. For example, are the two following sentence meaning the same thing <span class="hljs-keyword">for</span> you?<br><span class="hljs-string">&quot;I hate typo&quot;</span><br><span class="hljs-string">&quot;I hate typo!!!!!!!!!!!!&quot;</span><br></code></pre></td></tr></table></figure><p>to ChatGPT</p><p>Here is the answer:</p><blockquote><p>Yes, I do take non-character symbols, such as punctuation marks, intoaccount when interpreting and responding to messages. In naturallanguage processing, the exclamation points in your second sentence canoften be interpreted as conveying a higher degree of emotion orintensity compared to the first sentence.</p><p>"I hate typo" generally indicates a dislike for typos.</p><p>"I hate typo!!!!!!!!!!!!" suggests a very strong, emphatic dislikefor typos, because exclamation points often express strong emotions inwritten language.</p><p>However, while I take these punctuation marks into account tointerpret sentiment or emphasis, my understanding of the semantics,i.e., the meaning of the sentences remains the same in both cases - bothindicate a dislike for typos. The difference is in the degree of emotionconveyed.</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Programming Tips</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>Tech</tag>
      
      <tag>Machine Learning</tag>
      
      <tag>Python Version Problem</tag>
      
      <tag>Command Line</tag>
      
      <tag>ChatGPT fun fact</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jun 28 Wed</title>
    <link href="/2023/06/28/Intern-study-summary-Jun-28-Wed/"/>
    <url>/2023/06/28/Intern-study-summary-Jun-28-Wed/</url>
    
    <content type="html"><![CDATA[<h1 id="key-shortcut">Key shortcut</h1><p>My new key board arrived today. I used to use finger combination onthe track pad to switch between screens and scroll. Now, I have to usemouse and keyboard. Thus, I will also summarize some of key boardshortcut.</p><hr /><blockquote><p>Note: I am using MacOS</p></blockquote><p>Switch screen: <code>Control + Left/Right Arrow</code></p><p>Scroll horizontally: press <code>Shift</code> while scroll withmouse</p><p>Switch between tabs in chrome: <code>cmd + Shift + A</code></p><h1 id="multiple-__init__-in-one-class">Multiple <code>__init()__</code>in one class</h1><p>In Python, a class can only have one <code>__init__</code> method. Ifyou define more than one <code>__init__</code> method, the last one youdefine will overwrite the previous ones.</p><p>However, there are ways to handle different numbers of parameterswhile initializing an instance in Python. The most common way is to usedefault arguments, variable-length arguments or keyword arguments in the<code>__init__</code> method.</p><p>Here's an example of using default arguments:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, a=<span class="hljs-number">1</span>, b=<span class="hljs-number">2</span>, c=<span class="hljs-number">3</span></span>):<br>        self.a = a<br>        self.b = b<br>        self.c = c<br><br><span class="hljs-comment"># Create an instance with default parameters</span><br>obj1 = MyClass()<br><br><span class="hljs-comment"># Create an instance with a different set of parameters</span><br>obj2 = MyClass(<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>)<br><br><span class="hljs-comment"># Create an instance with a different set of parameters, in non-sequential order</span><br>obj3 = MyClass(b=<span class="hljs-number">7</span>, c=<span class="hljs-number">8</span>, a=<span class="hljs-number">9</span>)<br></code></pre></td></tr></table></figure><p>Another way is using variable-length arguments (<code>*args</code>)or keyword arguments (<code>**kwargs</code>):</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        <span class="hljs-comment"># args is a tuple of positional arguments</span><br>        <span class="hljs-comment"># kwargs is a dictionary of keyword arguments</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(args):<br>            self.a = args[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(args) &gt; <span class="hljs-number">1</span>:<br>            self.b = args[<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(args) &gt; <span class="hljs-number">2</span>:<br>            self.c = args[<span class="hljs-number">2</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;d&#x27;</span> <span class="hljs-keyword">in</span> kwargs:<br>            self.d = kwargs[<span class="hljs-string">&#x27;d&#x27;</span>]<br><br><span class="hljs-comment"># Using different numbers of positional arguments</span><br>obj1 = MyClass(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br><br><span class="hljs-comment"># Using keyword arguments</span><br>obj2 = MyClass(d=<span class="hljs-number">4</span>)<br><br><span class="hljs-comment"># Using both positional and keyword arguments</span><br>obj3 = MyClass(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, d=<span class="hljs-number">4</span>)<br><br></code></pre></td></tr></table></figure><p>Remember that using <code>*args</code> and <code>**kwargs</code> canmake your code less clear, because it's not immediately obvious whichparameters the class expects. If you know which parameters your classshould accept, it's often clearer to use default arguments.</p><h1 id="operation-with-yaml-file">Operation with YAML file</h1><p>You may find my introduction to YAML format in my blog: <ahref="https://blog.slray.com/2023/06/23/Intern-study-summary-Jun-15-Thu/#yaml">Internstudy summary Jun 15 Thu</a>.</p><hr /><p>You can use the <code>yaml</code> library in Python to write adictionary to a YAML file. The <code>yaml</code> library is not includedin the standard Python library, so you'll need to install it first. Youcan do so with pip:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install pyyaml<br></code></pre></td></tr></table></figure><p>Here is an example of how to write a dictionary to a YAML file:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> yaml<br><br><span class="hljs-comment"># your dictionary</span><br>data = &#123;<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;John&quot;</span>,<br>    <span class="hljs-string">&quot;age&quot;</span>: <span class="hljs-number">30</span>,<br>    <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-string">&quot;New York&quot;</span><br>&#125;<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.yaml&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    yaml.dump(data, file)<br></code></pre></td></tr></table></figure><p>In this example, <code>yaml.dump()</code> is used to write the datato the file. The output file ('output.yaml') will look something likethis:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">age:</span> <span class="hljs-number">30</span><br><span class="hljs-attr">city:</span> <span class="hljs-string">New</span> <span class="hljs-string">York</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">John</span><br></code></pre></td></tr></table></figure><p>Note: YAML is a human-readable data-serialization language. It iscommonly used for configuration files and in applications where data isbeing stored or transmitted.</p><h1 id="list-comprehension">List Comprehension</h1><p>I had list comprehension questions while I was having an interviewfor a intern position at a quant company. In fact, I did a terrible jobon that. Here I will provide two examples for rewrite a for loop in listcomprehension form.</p><h2 id="example-1">Example 1:</h2><p>Rewrite:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> pair <span class="hljs-keyword">in</span> top_continuous_pairs:<br>    symbol = &#123;<span class="hljs-string">&quot;exchange&quot;</span>: self.exchange, <span class="hljs-string">&quot;pairDb&quot;</span>: pair&#125;<br>    symbols.append(symbol)<br><br></code></pre></td></tr></table></figure><p>Answer:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">symbols = [&#123;<span class="hljs-string">&quot;exchange&quot;</span>: self.exchange, <span class="hljs-string">&quot;pairDb&quot;</span>: pair&#125; <span class="hljs-keyword">for</span> pair <span class="hljs-keyword">in</span> top_continuous_pairs]<br></code></pre></td></tr></table></figure><p>In this single line of code, a new dictionary is created for eachitem in <code>top_continuous_pairs</code>, with "exchange" set to thevalue of <code>self.exchange</code> and "pairDb" set to the currentitem. The result is a list of these dictionaries, which is assigned to<code>symbols</code>.</p><p>This is equivalent to the original for-loop, but more concise. Notethat list comprehensions can be harder to read than regular for-loopswhen they start getting complex, so use them wisely.</p><h2 id="example-2">Example 2:</h2><p>Rewrite:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">backtest_pairs = []<br>    <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> symbols:<br>        backtest_pair = s.copy()<br>        backtest_pair[<span class="hljs-string">&quot;channel&quot;</span>] = self.channel<br>        backtest_pairs.append(backtest_pair)<br></code></pre></td></tr></table></figure><p>The code above creates a deep copy of each dictionary in<code>symbols</code> and then adds a new key-value pair, where "channel"is the key and <code>self.channel</code> is the value. After modifyingthe dictionary, it is then appended to the <code>backtest_pairs</code>list.</p><p>This for-loop can be rewritten as a list comprehension like so:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">backtest_pairs = [&#123;**s, <span class="hljs-string">&quot;channel&quot;</span>: self.channel&#125; <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> symbols]<br></code></pre></td></tr></table></figure><p>In this list comprehension,<code>&#123;**s, "channel": self.channel&#125;</code> creates a new dictionarywhich is a copy of <code>s</code> with an additional key-value pairwhere "channel" is the key and <code>self.channel</code> is the value.The <code>&#123;**s&#125;</code> syntax is using dictionary unpacking to create acopy of the dictionary <code>s</code>.</p><p>Remember that list comprehensions are great for writing more concisecode, but they can also be more difficult to read if they get toocomplex. Always strive for the right balance between conciseness andreadability in your code.</p><h3 id="about-the-s">About the <code>**s</code></h3><p>Does the <code>*s</code> have any relationship with pointer in C?</p><p>No, the <code>**s</code> in Python does not have any relationshipwith pointers in C.</p><p>In Python, the <code>**</code> operator is used for differentpurposes:</p><ol type="1"><li><p>When used in a function call, it's used for unpacking dictionarykey-value pairs as keyword arguments in a function. For example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">a=<span class="hljs-number">1</span>, b=<span class="hljs-number">2</span></span>):<br>    <span class="hljs-built_in">print</span>(a, b)<br><br>args = &#123;<span class="hljs-string">&#x27;a&#x27;</span>: <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;b&#x27;</span>: <span class="hljs-number">4</span>&#125;<br>func(**args)  <span class="hljs-comment"># This will output: 3 4</span><br></code></pre></td></tr></table></figure><p>In this case, <code>**args</code> is unpacking the dictionary andpassing the values to the function as keyword arguments.</p></li><li><p>When used in a function definition, it's used for accepting anarbitrary number of keyword arguments. For example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">**kwargs</span>):<br>    <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> kwargs.items():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;key&#125;</span> = <span class="hljs-subst">&#123;value&#125;</span>&quot;</span>)<br><br>func(a=<span class="hljs-number">3</span>, b=<span class="hljs-number">4</span>, c=<span class="hljs-number">5</span>)  <span class="hljs-comment"># This will output: a = 3, b = 4, c = 5</span><br></code></pre></td></tr></table></figure><p>Here, <code>**kwargs</code> is capturing all keyword arguments passedto the function into a dictionary.</p></li><li><p>When used with a numeric type, <code>*</code> is theexponentiation operator. For example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-number">2</span> ** <span class="hljs-number">3</span>)  <span class="hljs-comment"># This will output: 8</span><br></code></pre></td></tr></table></figure><p>Here, <code>**</code> is used for raising 2 to the power of3.</p></li></ol><p>In C, the <code>*</code> operator is used for a completely differentpurpose: it's used for creating and dereferencing pointers. Python doesnot have pointers like C, and the <code>**</code> operator in Pythondoes not have any relationship with the pointer concept in C.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>Tech</tag>
      
      <tag>List Comprehension</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jun 27 Tue</title>
    <link href="/2023/06/28/Intern-study-summary-Jun-27-Tue/"/>
    <url>/2023/06/28/Intern-study-summary-Jun-27-Tue/</url>
    
    <content type="html"><![CDATA[<h1 id="vim">Vim</h1><p>When I was using git to merge, there was part of the command linepopped up asking me to add some commit message. What is that? How can Iquit it?</p><p>You're very likely to be in Vim, the default editor for many systems,which Git often uses for writing commit messages.</p><p>If you want to exit without saving the message, you can follow thesesteps:</p><ol type="1"><li>Press the <code>ESC</code> key (if you are in insert or appendmode)</li><li>Then type <code>:q!</code> and press <code>Enter</code>. The<code>:q!</code> command tells Vim to quit without saving changes.</li></ol><p>If you want to save your message and then exit, you can follow thesesteps:</p><ol type="1"><li>Press <code>ESC</code> key (if you are in insert or appendmode)</li><li>Then type <code>:wq</code> and press <code>Enter</code>. The<code>:wq</code> command tells Vim to write (save) the changes and thenquit.</li></ol><h2 id="how-to-change-the-default-editor-for-git">How to change thedefault editor for git?</h2><p>You can switch to a different text editor. For example, if you preferto use visual studio code (vsc), you can switch the default editor forgit with the following command:</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">git config --<span class="hljs-keyword">global</span> core.<span class="hljs-keyword">editor</span> <span class="hljs-string">&quot;code&quot;</span><br></code></pre></td></tr></table></figure><h1 id="python-add-argument">Python add argument</h1><p>When using Git, you should often use the commend<code>git commit -m "xxxx"</code>. Here the <code>git</code> is justlike running <code>python xxx.py</code> or <code>make</code>, and thething following it is called an argument. Here the argument is<code>commit -m "xxx"</code>.</p><p>You can also do that in python, which means you could do things like<code>python test.py -times 100</code>. And, you can make your ownargument.</p><p>Here is an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.argument(<span class="hljs-params"><span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, required=<span class="hljs-literal">False</span></span>)</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;-f&quot;</span>, <span class="hljs-string">&quot;--config-file&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">config, config_file</span>):<br>    <span class="hljs-comment"># Your code here</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>Explanation:</p><p>These lines of code belong to a Python program using the<code>click</code> library. <code>click</code> is a package for creatingbeautiful command line interfaces in a composable way. It's highlyconfigurable but comes with sensible defaults out of the box.</p><p>Here's the breakdown:</p><ol type="1"><li><strong><code>@click.command()</code></strong>: This line is adecorator that tells Click this function will be a command-line command.This means when you run your script from the command-line, this functioncan be executed.</li><li><strong><code>@click.argument("config", type=str, required=False)</code></strong>:This decorator adds an argument to your command. Arguments arepositional parameters to your command. In this case, an argument named<code>config</code> is expected, which should be of <code>str</code>(string) type. The <code>required=False</code> parameter means thisargument is optional.</li><li><strong><code>@click.option("-f", "--config-file", type=str, default=None)</code></strong>:This decorator adds an option to your command. Options are extraparameters you can include when calling your command, and they aretypically used to modify the behavior of the command in some way.Options are denoted by either a single`<code>followed by a single character (like</code>f<code>) or by</code>-<code>followed by a word (like</code>-config-file<code>). Either</code>f<code>or</code>-config-file<code>can be used to specify this option in this case. This option takes a string (</code>type=str<code>) and defaults to</code>None<code>if it's not provided (</code>default=None`).</li></ol><p>In practical usage, these decorators would be applied to a functionthat forms the core of your command-line application.</p><p>In the code above, <code>main</code> is the function that getsexecuted when you run your command. The parameters <code>config</code>and <code>config_file</code> get their values from the command-linearguments and options respectively.</p><h2id="what-if-i-want-to-have-another-optional-argument-other-than-config-do-i-add-another-click.arguemnt">whatif I want to have another optional argument other than<code>config</code>? Do I add another <code>@click.arguemnt</code>?</h2><p>Yes, you can add additional arguments by using the<code>@click.argument()</code> decorator again. The key point toremember is that arguments are positional. This means the order in whichthey are defined in your function will be the order in which they shouldbe provided when you run your command.</p><p>Here's an example of adding an additional argument named<code>option</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.argument(<span class="hljs-params"><span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, required=<span class="hljs-literal">False</span></span>)</span><br><span class="hljs-meta">@click.argument(<span class="hljs-params"><span class="hljs-string">&quot;option&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, required=<span class="hljs-literal">False</span></span>)</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;-f&quot;</span>, <span class="hljs-string">&quot;--config-file&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">config, option, config_file</span>):<br>    <span class="hljs-comment"># Your code here</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>In this example, <code>option</code> is another optional argument.When running this command, <code>config</code> would need to be providedbefore <code>option</code>. For instance:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python your_script.py my_config my_option -f my_config_file<br></code></pre></td></tr></table></figure><p>In this command, <code>my_config</code> would be passed to the<code>config</code> argument, <code>my_option</code> would be passed tothe <code>option</code> argument, and <code>my_config_file</code> wouldbe passed to the <code>config_file</code> option.</p><p>If you find the positional nature of arguments to be limiting orconfusing, consider using more options (with<code>@click.option()</code>) instead, as options can be provided in anyorder.</p><h2id="does-the-click.option-has-a-relationship-with-the-upper-one.-for-example-the--f-is-belong-to-option-i-cannot-add--f-after-config">Doesthe <code>@click.option</code> has a relationship with the upper one.For example, the '-f' is belong to option, I cannot add '-f' after'config'?</h2><p>The <code>-f</code> or <code>--config-file</code> option, asspecified in the <code>@click.option</code> decorator, can be placedanywhere on the command line when invoking the command, regardless ofthe order of other arguments or options.</p><p>Here are valid ways of calling the command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">python your_script.py my_config -f my_config_file<br>python your_script.py -f my_config_file my_config<br><br></code></pre></td></tr></table></figure><p>In both of these examples, <code>my_config</code> would be passed tothe <code>config</code> argument and <code>my_config_file</code> wouldbe passed to the <code>config_file</code> option.</p><p>The decorators <code>@click.argument</code> and<code>@click.option</code> only dictate the structure and syntax ofcommand-line inputs for your Python script, they don't rigidly fix thesequence in which these arguments and options should be passed on thecommand line. However, do note that the sequence of positional arguments(<code>@click.argument</code>) is important while the sequence ofoptions (<code>@click.option</code>) is not.</p><h2 id="here-is-a-more-detailed-example">Here is a more detailedexample</h2><p>Requirement: I want to add an optional argument after<code>python xx.py</code> that specify the start, end, and preddate.</p><p>For optional parameters like start date, end date, and predictiondate, it's usually best to use options (<code>@click.option</code>)instead of arguments (<code>@click.argument</code>). Options providemore flexibility as they can be specified in any order and they areeasier for users to understand because they are more explicit.</p><p>Here's how you might add these to your command:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--start-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The start date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--end-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The end date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">start_date, end_date</span>):<br>    <span class="hljs-comment"># Your code here</span><br>    <span class="hljs-keyword">pass</span><br><br></code></pre></td></tr></table></figure><p>In this example, each option can be used like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python xx.py --start-date 2023-01-01 --end-date 2023-12-31<br><br></code></pre></td></tr></table></figure><p>If a user does not provide an option, its default value will be<code>None</code>. If you want a different default value, you can changethe <code>default</code> parameter in the <code>@click.option()</code>call.</p><p>As for conventions, it's typical to use hyphens (<code>-</code>) toseparate words in option and command names, rather than underscores(<code>_</code>). This is more consistent with the way othercommand-line tools work. It's also common to provide a short, one-lettername for each option if it's an option that will be used frequently.This can be done by providing additional names when calling<code>@click.option()</code>, like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;-s&quot;</span>, <span class="hljs-string">&quot;--start-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The start date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><br></code></pre></td></tr></table></figure><p>In this example, the <code>start-date</code> option can be specifiedwith either <code>-s</code> or <code>--start-date</code>. This makes itquicker to type for users who use it frequently, while still keeping iteasy to understand for new users.</p><h2 id="explain-the-example">Explain the example</h2><p>why I am using <code>-</code> in the decorator but <code>_</code> inthe main function? Is it just following the order, which means the topargument is the first in the function, or it is corresponding thatchange '-' to '_'?</p><p>In the Click library, when you define options, they can have a dashin their name (<code>-</code>). This is a common practice in commandline tools. However, in Python, variable names cannot contain a dashbecause the dash is interpreted as the subtraction operator. So, in thecontext of the function definition, you have to use underscores insteadof dashes.</p><p>Click automatically converts dashes to underscores when passing thevalues to your function. This allows you to follow command-lineconventions when defining your arguments and options, while still havingvalid Python variable names inside your function.</p><p>For example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--start-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The start date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br></code></pre></td></tr></table></figure><p>Here, the <code>start-date</code> will be accessed as<code>start_date</code> in your function:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">start_date</span>):<br>    <span class="hljs-comment"># start_date here is equivalent to --start-date in the option</span><br></code></pre></td></tr></table></figure><p>The argument order in the function definition does need to match theorder in which you've decorated the function with<code>@click.argument</code> and <code>@click.option</code> decorators.However, it doesn't matter whether an argument or option has dashes orunderscores in its name; Click handles that conversion for you.</p><hr /><p>So if I change</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--start-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The start date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--end-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The end date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">start_date, end_date</span>):<br>    <span class="hljs-comment"># Your code here</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>to</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--start-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The start date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--end-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The end date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">start_date, pred_date</span>):<br><span class="hljs-comment"># Your code here</span><br><span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>it won't change the functionality of the program?</p><p>For options in Click, the order of parameters in your functiondefinition does not have to match the order of the<code>@click.option()</code> decorators. This is because options are notpositional; they are identified by their names.</p><p>So yes, swapping <code>pred_date</code> and <code>end_date</code> inthe function definition won't change the functionality of yourprogram:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--start-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The start date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&quot;--end-date&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;The end date&quot;</span>, default=<span class="hljs-literal">None</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">start_date, end_date</span>):<br>    <span class="hljs-comment"># Your code here</span><br>    <span class="hljs-keyword">pass</span><br><br></code></pre></td></tr></table></figure><p>You can still call the command with options in any order:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python xx.py --start-date 2023-01-01 --end-date 2023-12-31<br><br></code></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python xx.py --start-date 2023-01-01 --end-date 2023-12-31<br></code></pre></td></tr></table></figure><p>Both will work fine.</p><h1 id="shell-script-grammar">Shell script grammar</h1><p>I am using the shell script grammar under Jenkins, the uppercasedstring inside of <code>$&#123;&#125;</code> is a placeholder (a variable that hasvalues, and the string inside <code>$&#123;&#125;</code> is its name).</p><h2id="if-else-statement-in-shell-script-grammar-example"><code>if-else</code>statement in shell script grammar example</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> <span class="hljs-variable">$&#123;PIP_INSTALL&#125;</span><br><span class="hljs-keyword">then</span><br>   make install<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>In the code above, <code>$&#123;PIP_INSTALL&#125;</code> is a boolean typedvalue. <code>fi</code> is an abbreviation for “finish”, meaning the endof the code block. Similar to the <code>&#125;</code> in java’s if elsestatement.</p><p>Rewrite the code in Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (PIP_INSTALL) &#123;<br><span class="hljs-comment">// make install execution</span><br>&#125;<br></code></pre></td></tr></table></figure><h2id="check-if-a-variable-is-empty-similar-to-null-in-java-and-none-in-python">Checkif a variable is empty (similar to <code>null</code> in Java and<code>None</code> in Python)</h2><p>If you want to check if a variable in a bash shell script (like theone you posted) is empty, you can use <code>-z</code> operator, whichreturns true if the length of the string is zero.</p><p>Here is an example of your script checking if the<code>$&#123;PIP_INSTALL&#125;</code> variable is empty or not:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;PIP_INSTALL&#125;</span>&quot;</span> ]<br><span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;PIP_INSTALL is empty&quot;</span><br><span class="hljs-keyword">else</span><br>   make install<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>In this script, <code>-z "$&#123;PIP_INSTALL&#125;"</code> checks if<code>$&#123;PIP_INSTALL&#125;</code> is empty. If <code>$&#123;PIP_INSTALL&#125;</code> isempty, it prints "PIP_INSTALL is empty", otherwise it runs<code>make install</code>.</p><p>The brackets <code>[</code> and <code>]</code> are required for thetest command (<code>[ -z "$&#123;PIP_INSTALL&#125;" ]</code> is equivalent to<code>test -z "$&#123;PIP_INSTALL&#125;"</code>). And also note that there shouldbe a space between <code>[</code> and <code>-z</code> and between<code>$&#123;PIP_INSTALL&#125;</code> and <code>]</code>.</p><p>The <code>$&#123;PIP_INSTALL&#125;</code> variable is enclosed in quotes. Thisis a good practice because it prevents word splitting and pathnameexpansion. If <code>$&#123;PIP_INSTALL&#125;</code> is not set or if it is set toa value that contains spaces, without the quotes, the script may notbehave as expected.</p><h2 id="and-operation"><code>AND</code> operation</h2><p>If you want to perform an AND operation in a Bash shell script, youcan use <code>-a</code> operator, or <code>&amp;&amp;</code> operatorinside your <code>if</code> condition.</p><p>Let's say you want to check if <code>$&#123;PIP_INSTALL&#125;</code> is notempty, and some other variable <code>$&#123;SOME_VAR&#125;</code> equals "yes",you could do something like:</p><p>Option 1: Using <code>-a</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;PIP_INSTALL&#125;</span>&quot;</span> -a <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;SOME_VAR&#125;</span>&quot;</span> = <span class="hljs-string">&quot;yes&quot;</span> ]<br><span class="hljs-keyword">then</span><br>   make install<br><span class="hljs-keyword">else</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Either PIP_INSTALL is empty or SOME_VAR is not yes&quot;</span><br><span class="hljs-keyword">fi</span><br><br></code></pre></td></tr></table></figure><p>Option 2: Using <code>&amp;&amp;</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;PIP_INSTALL&#125;</span>&quot;</span> ] &amp;&amp; [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;SOME_VAR&#125;</span>&quot;</span> = <span class="hljs-string">&quot;yes&quot;</span> ]<br><span class="hljs-keyword">then</span><br>   make install<br><span class="hljs-keyword">else</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Either PIP_INSTALL is empty or SOME_VAR is not yes&quot;</span><br><span class="hljs-keyword">fi</span><br><br></code></pre></td></tr></table></figure><p>In both scripts:</p><ul><li><code>n "$&#123;PIP_INSTALL&#125;"</code> checks if<code>$&#123;PIP_INSTALL&#125;</code> is not empty.</li><li><code>"$&#123;SOME_VAR&#125;" = "yes"</code> checks if<code>$&#123;SOME_VAR&#125;</code> is equal to "yes".</li><li>The <code>if</code> statement is true (and <code>make install</code>is executed) if and only if both conditions are true. Otherwise, "EitherPIP_INSTALL is empty or SOME_VAR is not yes" is printed.</li></ul><p>Again, note the spaces surrounding the brackets and operators. Theyare required for the script to work correctly.</p><h2 id="equal-in-if-comparing-to-other-languages">equal in if comparingto other languages</h2><p>If I want to see if something equals to another, unlike otherprogramming languages that I have to write "==", I can use only one"=”.</p><p>Yes, that's correct. In Bash shell scripts, you use a single equalssign (<code>=</code>) for string comparison in an <code>if</code>statement, rather than the double equals sign (<code>==</code>) that'stypically used in many programming languages.</p><p>For example, if you wanted to check if the string variable<code>$&#123;MY_VAR&#125;</code> equals the string "Hello", you could write:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;MY_VAR&#125;</span>&quot;</span> = <span class="hljs-string">&quot;Hello&quot;</span> ]<br><span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;MY_VAR is Hello&quot;</span><br><span class="hljs-keyword">else</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;MY_VAR is not Hello&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>This would print "MY_VAR is Hello" if <code>$&#123;MY_VAR&#125;</code> equals"Hello", and "MY_VAR is not Hello" otherwise.</p><p>However, it is also worth noting that using <code>==</code> forcomparison also works in bash and it is common to see it in many scriptsfor the sake of clarity and consistency with other programminglanguages, although <code>=</code> is more traditional:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;MY_VAR&#125;</span>&quot;</span> == <span class="hljs-string">&quot;Hello&quot;</span> ]<br><span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;MY_VAR is Hello&quot;</span><br><span class="hljs-keyword">else</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;MY_VAR is not Hello&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>In both cases, be sure to leave spaces around the <code>=</code> or<code>==</code>. Bash treats them as special characters and requiresspaces around them to correctly interpret your command.</p><h2 id="print-in-shell">“<code>print</code>” in shell</h2><p>The <code>echo</code> in the code above, then, is like the printstatement in other language?</p><p>Yes, that's correct. The <code>echo</code> command in Bash is similarto the <code>print</code> statement in many other programminglanguages.</p><p><code>echo</code> is used in shell scripts and command lineinterfaces to output the strings it is being passed as arguments to thestandard output, which is typically the terminal. This can be text orthe value of a variable.</p><p>For example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Hello, World!&quot;</span><br></code></pre></td></tr></table></figure><p>This command will print "Hello, World!" to the terminal.</p><p>And you can use it with variables like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">MY_VAR=<span class="hljs-string">&quot;Hello, World!&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;MY_VAR&#125;</span><br></code></pre></td></tr></table></figure><p>This will also print "Hello, World!" to the terminal.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>Tech</tag>
      
      <tag>Terminal</tag>
      
      <tag>Terminal Command</tag>
      
      <tag>Shell Script Grammar</tag>
      
      <tag>Vim</tag>
      
      <tag>Git</tag>
      
      <tag>Git command</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jun 25 Sun</title>
    <link href="/2023/06/25/Intern-study-summary-Jun-25-Sun/"/>
    <url>/2023/06/25/Intern-study-summary-Jun-25-Sun/</url>
    
    <content type="html"><![CDATA[<p>This blog is create on the day of 2023-06-28 21:37:02. Yet, tomaintain the order, I changed the creating date.</p><h1 id="python">Python</h1><h2 id="package-directory-folder">Package &amp; Directory (folder)</h2><p>In Python, a directory becomes a package when it contains a specialfile named <code>__init__.py</code>. This file can be empty, and itindicates that the directory should be treated as a Python package. APython package is simply a way of organizing related modules(<code>.py</code> files) into a directory hierarchy.</p><p>Essentially, a package in Python is also a directory, but not alldirectories are packages. If you have a directory with Python files butno <code>__init__.py</code>, Python will treat it as a directory ofscripts, not as a package.</p><p>Let's say you have a directory called <code>utils</code> and insideit, you have some Python scripts like <code>script1.py</code>,<code>script2.py</code>, etc. If you want to import functions from thesescripts in other parts of your code like so:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> utils.script1 <span class="hljs-keyword">import</span> my_function<br></code></pre></td></tr></table></figure><p>You would need to make <code>utils</code> a package by adding an<code>__init__.py</code> file inside it. If you don't add an<code>__init__.py</code> file, Python won't recognize <code>utils</code>as a package and you won't be able to import from it in this manner.</p><p>To summarize, if you just want a bunch of Python scripts in a folderand you're not concerned about importing from them, you can just use aregular directory. But if you want to be able to importfunctions/classes from these scripts as part of a package, you shouldadd an <code>__init__.py</code> file to the directory, turning it into apackage.</p><h2 id="io-in-python"><code>I/O</code> in python</h2><h3 id="create-folders-by-python">Create folders by python</h3><p>You can create folders (directories) in Python using the<code>os</code> module's <code>mkdir</code> or <code>makedirs</code>function.</p><p>Here's how to create a single folder:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>os.mkdir(<span class="hljs-string">&quot;my_folder&quot;</span>)<br></code></pre></td></tr></table></figure><p>This will create a folder named "my_folder" in the currentdirectory.</p><p>If you want to create a nested directory structure, you can use<code>os.makedirs</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>os.makedirs(<span class="hljs-string">&quot;my_folder/sub_folder/sub_sub_folder&quot;</span>)<br></code></pre></td></tr></table></figure><p>This will create the entire path, even if the intermediate folders("my_folder" and "my_folder/sub_folder") do not exist.</p><p>Note that these functions will raise a <code>FileExistsError</code>if the folder you're trying to create already exists. If you want toavoid this, you can check if the directory exists before creatingit:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&quot;my_folder&quot;</span>):<br>    os.mkdir(<span class="hljs-string">&quot;my_folder&quot;</span>)<br></code></pre></td></tr></table></figure><p>Or, if you're using Python 3.7 or later, you can use the<code>exist_ok</code> parameter with <code>os.makedirs</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>os.makedirs(<span class="hljs-string">&quot;my_folder/sub_folder/sub_sub_folder&quot;</span>, exist_ok=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>This will not raise an error if the folder already exists.</p><h3 id="get-a-list-of-folders-name">Get a list of folder's name</h3><p>You can get a list of folder names in a directory using the<code>os</code> module's <code>listdir</code> or <code>os.scandir</code>functions.</p><p>Here's a simple example using <code>os.listdir</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>folder_path = <span class="hljs-string">&quot;/path/to/your/folder&quot;</span><br>folders = [name <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> os.listdir(folder_path) <span class="hljs-keyword">if</span> os.path.isdir(os.path.join(folder_path, name))]<br><br><span class="hljs-built_in">print</span>(folders)<br></code></pre></td></tr></table></figure><p>This script will give you a list of all the directories (not files)in the specified folder. The <code>os.path.isdir</code> function checksif the path is a directory.</p><p>Here's an example using <code>os.scandir</code>, which is a bit moreefficient if you're doing additional operations like checking if thepaths are directories:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>folder_path = <span class="hljs-string">&quot;/path/to/your/folder&quot;</span><br>folders = [entry.name <span class="hljs-keyword">for</span> entry <span class="hljs-keyword">in</span> os.scandir(folder_path) <span class="hljs-keyword">if</span> entry.is_dir()]<br><br><span class="hljs-built_in">print</span>(folders)<br></code></pre></td></tr></table></figure><p>Both these scripts will print the names of the folders in thespecified directory. Note that these are just the folder names, nottheir full paths. If you want the full paths, replace<code>entry.name</code> with <code>entry.path</code> in the secondexample, or <code>name</code> with<code>os.path.join(folder_path, name)</code> in the first.</p><h3 id="create-a-file">Create a file</h3><p>You can create a file in Python using the built-in <code>open</code>function with the <code>w</code> (write) mode. Here's an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;myfile.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>This code will create a file named <code>myfile.txt</code> in thecurrent directory. If the file already exists, this will overwriteit.</p><p>The <code>with</code> statement is used for context management, itensures that the file is properly closed after it is no longerneeded.</p><p>If you want to write some data to the file when you create it, youcan do that like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;myfile.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(<span class="hljs-string">&quot;Hello, World!&quot;</span>)<br></code></pre></td></tr></table></figure><p>This code will create <code>myfile.txt</code> and write the string<code>Hello, World!</code> to it.</p><p>If you want to create the file without overwriting it if it alreadyexists, you can use the <code>x</code> (exclusive creation) mode:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;myfile.txt&#x27;</span>, <span class="hljs-string">&#x27;x&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-keyword">except</span> FileExistsError:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The file already exists.&quot;</span>)<br></code></pre></td></tr></table></figure><p>This code will only create the file if it doesn't already exist. Ifthe file does exist, a <code>FileExistsError</code> is raised, and thecode in the <code>except</code> block is executed.</p><h3 id="how-to-delete-a-file">how to delete a file</h3><p>You can delete a file in Python using the <code>os</code> module's<code>remove</code> function. Here's a simple example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>file_path = <span class="hljs-string">&quot;/path/to/your/file.txt&quot;</span><br>os.remove(file_path)<br></code></pre></td></tr></table></figure><p>This code will delete the file at the specified path.</p><p>Please be careful, because this operation cannot be undone. Once afile is deleted in this way, it cannot be recovered.</p><p>If you want to make sure that a file exists before you try to deleteit, you can use <code>os.path.isfile</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>file_path = <span class="hljs-string">&quot;/path/to/your/file.txt&quot;</span><br><br><span class="hljs-keyword">if</span> os.path.isfile(file_path):<br>    os.remove(file_path)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Error: <span class="hljs-subst">&#123;file_path&#125;</span> not a valid filename&#x27;</span>)<br></code></pre></td></tr></table></figure><p>This code will only try to delete the file if it exists. If the filedoesn't exist, it will print an error message instead.</p><h2id="unexpected-eof-while-parsing"><strong><code>unexpected EOF while parsing</code></strong></h2><p>The error message <code>unexpected EOF while parsing</code> typicallymeans that the Python interpreter has reached the end of your file (EOFstands for End Of File) while it was expecting to find something else.This is typically due to unmatched or improperly used parentheses,brackets, or quotes.</p><p>For example, this error could happen if you have an openingparenthesis or bracket without a closing one:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Missing closing parenthesis</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello, world!&quot;</span><br><br><span class="hljs-comment"># Missing closing bracket</span><br>my_list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>Or if you have opened a string with a quote but never closed it:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Missing closing quote</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello, world)</span><br></code></pre></td></tr></table></figure><p>Without the rest of your code, I can't tell you exactly what'scausing the problem. But you should go through your code and make surethat all parentheses, brackets, and quotes are properly matched andclosed. Using an IDE or a text editor with syntax highlighting can bevery helpful for this, as it will often visually indicate unmatchedparentheses or quotes.</p><h2id="parameter-filename-unfilled"><code>Parameter 'filename' unfilled</code></h2><p>When a Python function, method, or constructor (the<code>__init__</code> method in a class) requires arguments, you mustprovide those arguments whenever you call the function, method, orconstructor. If you don't, you will see an error message or a warningdepending on your development environment.</p><p>The message "Parameter 'filename' unfilled" is telling you that youare calling a function or method that requires a parameter named'filename', but you are not providing a value for that parameter.</p><p>For example, suppose you have the following function:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_file_contents</span>(<span class="hljs-params">filename</span>):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>        <span class="hljs-built_in">print</span>(file.read())<br></code></pre></td></tr></table></figure><p>If you call <code>print_file_contents()</code> without providing anargument, like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">print_file_contents()<br></code></pre></td></tr></table></figure><p>Then you will see an error because you didn't fill in the 'filename'parameter. The correct way to call the function is to provide thefilename as an argument, like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">print_file_contents(<span class="hljs-string">&#x27;myfile.txt&#x27;</span>)<br></code></pre></td></tr></table></figure><p>This error can also occur if you're using an Integrated DevelopmentEnvironment (IDE) or editor that provides code checking or lintingservices, and you've written a function call without filling in all therequired parameters. In this case, the IDE will flag the incompletefunction call as an error even before you run the code.</p><h2 id="key-check-in-python">Key check in Python</h2><p><code>has_key()</code> in python:</p><p>The <code>has_key()</code> method in Python dictionaries wasdeprecated and removed in Python 3. It was used to check if a given keyexists in a dictionary. Instead of using <code>has_key()</code>, you candirectly use the <code>in</code> operator to check for the presence of akey in a dictionary.</p><p>Here's an example of how you can check if a key exists in adictionary using the <code>in</code> operator:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">my_dict = &#123;<span class="hljs-string">&#x27;key1&#x27;</span>: <span class="hljs-string">&#x27;value1&#x27;</span>, <span class="hljs-string">&#x27;key2&#x27;</span>: <span class="hljs-string">&#x27;value2&#x27;</span>, <span class="hljs-string">&#x27;key3&#x27;</span>: <span class="hljs-string">&#x27;value3&#x27;</span>&#125;<br><br><span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;key2&#x27;</span> <span class="hljs-keyword">in</span> my_dict:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Key &#x27;key2&#x27; exists in the dictionary.&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Key &#x27;key2&#x27; does not exist in the dictionary.&quot;</span>)<br></code></pre></td></tr></table></figure><p>Output:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Key <span class="hljs-string">&#x27;key2&#x27;</span> exists <span class="hljs-keyword">in</span> the dictionary.<br></code></pre></td></tr></table></figure><p>Using the <code>in</code> operator is the recommended way to checkfor the presence of a key in a dictionary in Python.</p><h2 id="hex-in-python">Hex in python</h2><h3 id="example">Example:</h3><p>Convert str of hex to a hex in python, and add one</p><p>To convert a string representation of a hexadecimal number to aninteger, use the <code>int</code> function in Python with base 16. Thenyou can add one to this value as it is now an integer. Here's anexample:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">hex_str = <span class="hljs-string">&quot;0x1a&quot;</span><br>value = <span class="hljs-built_in">int</span>(hex_str, <span class="hljs-number">16</span>)<br>value += <span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(value)<br></code></pre></td></tr></table></figure><p>This will output <code>27</code> (1a in hexadecimal is 26 indecimal).</p><p>If you want the result to remain in hexadecimal format, you can thenconvert it back to a hexadecimal string using the <code>hex</code>function:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">hex_str = <span class="hljs-string">&quot;0x1a&quot;</span><br>value = <span class="hljs-built_in">int</span>(hex_str, <span class="hljs-number">16</span>)<br>value += <span class="hljs-number">1</span><br>new_hex_str = <span class="hljs-built_in">hex</span>(value)<br><span class="hljs-built_in">print</span>(new_hex_str)<br></code></pre></td></tr></table></figure><p>This will output <code>0x1b</code> (27 in decimal is 1b inhexadecimal).</p><h3 id="hex-to-decimal">Hex to Decimal</h3><p>The conversion of a hexadecimal (hex) number to a decimal number inPython can be done using the built-in <code>int()</code> function,specifying the base as 16 (since hexadecimal is base 16).</p><p>Here's an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">hex_number = <span class="hljs-string">&quot;0x1a&quot;</span> <span class="hljs-comment"># hex_number is a string representation of a hexadecimal number.</span><br>dec_number = <span class="hljs-built_in">int</span>(hex_number, <span class="hljs-number">16</span>) <span class="hljs-comment"># dec_number is now a decimal (base 10) representation of hex_number.</span><br><span class="hljs-built_in">print</span>(dec_number)<br><br></code></pre></td></tr></table></figure><p>This will output: <code>26</code></p><p>In this case, the hexadecimal number <code>1a</code> corresponds tothe decimal number <code>26</code>.</p><p>The <code>int()</code> function in Python can convert a stringrepresentation of a number in any base (between 2 and 36) to a decimalinteger. When you pass in '16' as the second argument, you're telling itto interpret the string as a hexadecimal number.</p><h1 id="restful-api">RESTful API</h1><p>RESTful API is a type of web API that uses HTTP methods to interactwith resources. REST stands for Representational State Transfer, andit's a set of design principles for creating networked applications.</p><p>Here's a brief overview of the basic principles of REST:</p><ol type="1"><li><strong>Client-Server Architecture:</strong> REST APIs follow aclient-server model, where the client sends a request to the server andwaits for a response. The client and server are independent and can bedeveloped separately.</li><li><strong>Stateless:</strong> Each request from the client to theserver must contain all the information needed to understand and processthe request. The server shouldn't store any information about theclient's state between requests.</li><li><strong>Cacheable:</strong> Responses from the server can be cachedby the client. This can improve performance by reducing the need forrepeated requests.</li><li><strong>Uniform Interface:</strong> REST APIs should have aconsistent, uniform interface, which makes them easier to use. Thisinvolves using standard HTTP methods (like GET, POST, PUT, DELETE),using resource URIs to identify resources, and using standard HTTPresponse codes.</li><li><strong>Layered System:</strong> REST APIs can be composed ofmultiple layers, each performing specific tasks. For example, theremight be a layer for handling requests, a layer for processing data, anda layer for storing data.</li></ol><p>A RESTful API is typically used to allow different software systemsto communicate with each other. In your case, you would use a RESTfulAPI to allow your Swift front-end to communicate with your Pythonback-end. The Swift code would send HTTP requests to the API, and theAPI would respond with the requested data.</p><h1 id="cat"><code>cat</code></h1><p>You can use <code>cat</code> command in the terminal to check thecontent of a file.</p><h1 id="pycharm-python-interpreter-problem">PyCharm Python interpreterproblem</h1><p>Look at the following situation and see if you are able to figure itout:</p><p>I am working on a flask project. have finished the project beforewith PyCharm and I am using the PyCharm to open it. Now it is promptingthat package requirements 'python-dotev == 1.0.0', 'Flask == 2.3.2' notsatisfied. I clicked on the install package, got "Cannot set up a pythonSDK at Python 3.8 (serverProj)(/Users/ray/rayfile/serverProj/venv/bin/python). The SDK seemsinvalid.”</p><p>Solution:</p><p>This issue seems to be due to a problem with the Python interpreterselected for your project in PyCharm. The interpreter might beimproperly configured, or the virtual environment associated with theproject might be corrupted.</p><p>Here are some steps you can follow to try to resolve this:</p><ol type="1"><li><strong>Ensure that Python is correctly installed</strong>: Open aterminal (outside of PyCharm) and type <code>python3 --version</code>.This should return the version of Python installed. If it doesn't, youmight need to install Python.</li><li><strong>Recreate the virtual environment</strong>: It's possiblethat your project's virtual environment is corrupted. Navigate to yourproject's directory in terminal, delete the existing 'venv' directory(<code>rm -rf venv</code>), and create a new one using<code>python3 -m venv venv</code>.</li><li><strong>Reconfigure your PyCharm interpreter</strong>: In PyCharm,go to Preferences -&gt; Project -&gt; Python Interpreter. Add a newinterpreter, and select "Existing environment". Navigate to the Pythonexecutable in your newly created 'venv' directory (it should be at/path-to-your-project/venv/bin/python). Set this as your projectinterpreter.</li><li><strong>Reinstall the packages</strong>: Try installing'python-dotenv' and 'Flask' again. You can do this in PyCharm or fromthe terminal by activating your virtual environment(<code>source venv/bin/activate</code>), and then using pip to installthe packages(<code>pip install python-dotenv==1.0.0 Flask==2.3.2</code>).</li></ol><h1 id="and-in-url"><code>?</code> and <code>&amp;</code> in URL</h1><p>Here I will provide an example of RESTful API to better illustratewhat a RESTful API is and dive deeper in to the URL’s world.</p><hr /><h2 id="example-1">Example:</h2><p>While I was developing an API for data querying for the company, Ihad the following requirement:</p><p>I need to write a function in python flask with the entry point as"/data-api/top-pairs/<exchange>?endDate=<end_date>&amp;days=<days>".</p><p>Query string <code>endDate</code> and <code>days</code> areoptional</p><p>Default <code>endDate</code> = current UTC date and default<code>days</code> is 7.</p><p>The function returns the link</p><p><strong>Solution</strong></p><p>Here's how you could define a Flask route with the endpoint<code>/data-api/top-pairs/&lt;exchange&gt;</code>, accepting optionalquery parameters <code>endDate</code> and <code>days</code>.</p><p>The function first checks if the query parameters are present in therequest, and if not, it assigns them default values. It then constructsand returns a link.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request<br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime, timedelta<br><span class="hljs-keyword">import</span> pytz<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/a-api/b-function/&lt;c_parameter&gt;&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">afunction</span>(<span class="hljs-params">c_parameter</span>):<br>    <span class="hljs-comment"># Get query parameters, provide default values if not present</span><br>    p1 = request.args.get(<span class="hljs-string">&#x27;c-optional-parameter&#x27;</span>, <span class="hljs-string">&quot;default-value-c&quot;</span>)<br>    p2 = request.args.get(<span class="hljs-string">&#x27;d-optional-parameter&#x27;</span>, <span class="hljs-string">&quot;default-value-d&quot;</span>)<br><br>    <span class="hljs-comment"># Construct and return the link</span><br>    link = <span class="hljs-string">f&quot;/a-api/b-function/<span class="hljs-subst">&#123;c_parameter&#125;</span>?c-optional-parameter=<span class="hljs-subst">&#123;p1&#125;</span>&amp;days=<span class="hljs-subst">&#123;p2&#125;</span>&quot;</span><br>    <span class="hljs-keyword">return</span> link<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>In this example, <code>c_parameter</code> is part of the URL, while<code>c-optional-parameter</code> and <code>d-optional-parameter</code>are optional query parameters. The function <code>afunction()</code>extracts these parameters using <code>request.args.get()</code>,providing default values of the current date (in UTC) and 7 days ifthey're not present. Then, it constructs a link string and returnsit.</p><p>Note: This code uses Flask's built-in request object to access thequery parameters. The <code>args</code> attribute is a MultiDict objectthat contains all the received query parameters. The <code>get()</code>method is used to access a parameter value, and allows you to provide adefault value if the parameter is not found.</p><h2 id="dive-deeper">Dive deeper</h2><p>What is the <code>?</code> and <code>&amp;</code> in the link? Ialways see those stuff in a weblink. Why here the string in the<code>@app.route()</code> is without <code>c-optional-parameter</code>and <code>d-optional-parameter</code>?</p><p>In a URL, the <code>?</code> and <code>&amp;</code> symbols are usedto specify query parameters.</p><ul><li>The <code>?</code> symbol is used to start the query parameterssection of a URL. It separates the path portion of the URL from thequery parameters.</li><li>The <code>&amp;</code> symbol is used to separate multiple queryparameters.</li></ul><p>So, in the URL<code>https://example.com/page?param1=value1&amp;param2=value2</code>,<code>param1</code> and <code>param2</code> are query parameters withrespective values of <code>value1</code> and <code>value2</code>.</p><p>Regarding your second question, in the <code>@app.route()</code>decorator, you only specify the path portion of the URL. This is becausethe route is used to map a URL to a specific function in your Flaskapplication.</p><p>In the case above, the route is<code>/a-api/b-function/&lt;c_parameter&gt;</code>. The<code>&lt;c_parameter&gt;</code> part is a variable part of the URL andFlask captures the value in this part of the URL and passes it to yourfunction as an argument.</p><p>The query parameters (<code>c-optional-parameter</code> and<code>d-optional-parameter</code> in your case) are not part of theroute because they are optional and their order does not matter. Theyare accessed inside your function using <code>request.args.get()</code>.This is a dictionary-like object that allows you to access the queryparameters by their name.</p><p>The route does not need to know about these parameters. It only needsto know about the fixed and variable parts of the path of the URL. It'sthe job of your function to handle the query parameters, not theroute.</p><h1 id="tips-for-preventing-typos">Tips for preventing typos</h1><p>I hate typo!!!!!!!!!!!!!!!!!!!!!</p><p>Typos can sometimes be very tricky to spot, especially when theyresult in valid but incorrect code, as was the case here. They can be acommon source of bugs that are hard to find.</p><p>Here are a few suggestions to minimize the impact of typos:</p><ol type="1"><li><strong>Use an Integrated Development Environment (IDE)</strong>:Most IDEs have features like syntax highlighting and autocomplete thatcan help spot typos. Some can even detect some types of bugs before youeven run your code.</li><li><strong>Code Reviews</strong>: Having another set of eyes look overyour code can often spot mistakes that you might have missed.</li><li><strong>Testing</strong>: Writing tests for your code can helpensure that it's doing what you expect and can help catch bugsintroduced by typos.</li><li><strong>Take Breaks</strong>: Sometimes, if you've been looking atthe same piece of code for a long time, it can be hard to spot mistakes.Taking a short break can help reset your perspective and make it easierto see errors.</li><li><strong>Pair Programming</strong>: This is a technique where twoprogrammers work together at one workstation. One, the driver, writesthe code while the other, the observer or navigator, reviews each lineof code as it is typed in. The two programmers switch rolesfrequently.</li></ol><p>Remember, everyone makes mistakes and that's okay. What's importantis learning from them and finding ways to minimize them in the future.And remember, even the best programmers often find that "the problem wasa typo" after a long debugging session!</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Programming Tips</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>Tech</tag>
      
      <tag>Command Line</tag>
      
      <tag>PyCharm Professional</tag>
      
      <tag>I/O</tag>
      
      <tag>Error Explanation</tag>
      
      <tag>RESTful API</tag>
      
      <tag>URL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jun 15 Thu</title>
    <link href="/2023/06/23/Intern-study-summary-Jun-15-Thu/"/>
    <url>/2023/06/23/Intern-study-summary-Jun-15-Thu/</url>
    
    <content type="html"><![CDATA[<h1 id="intern-study-summary---jun-15-thu">Intern study summary - Jun 15Thu</h1><p>This blog is a record for what I learned during my internship at300K—a quant company.</p><p>I spent most of my day on fixing bugs of the project. Thus this blogmight include less new information.</p><h1 id="asymmetric-encryption">Asymmetric Encryption</h1><p>Think about a scenario: Alice is communicating with Bob by mail. Theproblem is that they do not want other people to see their conversationbut they cannot ensure that people won’t see their mails(other peoplemight be the courier or other people who had access during the postingprocess).</p><p>Thus they figured a way to encrypt the mail. For example, they letevery character move to the next one: “I love you” become “J mpwf zpv”.The way to cipher the mail is also called a<strong><em>key</em></strong>. Anyone with the cipher key could decipherthe mail. However, a new problem came out: how can they tell each otherabout the way of encrypting? They cannot send the key to each othersince the sending process could be monitored.</p><p>The above mentioned way of encrypting is called symmetric encryption,where the same key is used for both encryption and decryption.</p><img src="/2023/06/23/Intern-study-summary-Jun-15-Thu/symmetric-encrypt.jpeg" class="" title="symmetric encryption"><p>Now, to solve the problem of having to send the key, a new way ofencrypting was invented, which is the asymmetric encryption.</p><p>Think about a mail box with two doors.</p><p>One of the door is a tiny small door that only allows putting inmails. The second door is a bigger door. Only through this door can amail be taken out.</p><p>Each door is paired with a key, of course. The key to open the firstdoor (that only allows putting in mails) is called <strong><em>publickey(pk)</em></strong>. The second key is thus called a<strong><em>private key</em></strong>, or <strong><em>secretkey</em></strong>(<strong><em>sk</em></strong>).</p><p>Now, let’s go through how this weird box solved the problem ofsymmetric encrypt:</p><p>Before Bob send an mails to Alice, Alice send this mail box with twodoor aforementioned and a public key to Bob. Once Bob got the box andthe public key, Bob put an mail into the box. Then send the mail whichis inside the box back to Alice. Since Alice did not give her privatekey to anyone, no one could take the mail out of the box until Alice getthe box.</p><p>This solution made the communicating process much securer. The mailitself is called <em>plaintext</em>, the box with mail inside is called<em>ciphertext</em> (I use putting a mail into a box as a metaphor ofcipher.)</p><img src="/2023/06/23/Intern-study-summary-Jun-15-Thu/assymetric-encrypt.jpeg" class="" title="assymmetric encryption"><h1 id="make"><code>make</code></h1><p><code>make</code> is a build automation tool that automaticallybuilds executable programs and libraries from source code by readingfiles called <code>Makefiles</code> which specify how to derive thetarget program.</p><p>If you are looking to use the <code>make</code> command on your Mac,here's what you should do:</p><ol type="1"><li><p>Install Xcode: Xcode is a free development tool from Apple.<code>make</code> is part of this toolset. To install Xcode, you need togo to the Apple App Store, search for Xcode, and install it.</p></li><li><p>Once you have Xcode installed, open a terminal window (you canfind Terminal by searching for it in Spotlight - the magnifying glassicon at the top right of your screen).</p></li><li><p>In the Terminal, type the following command to install CommandLine Tools, which includes <code>make</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">xcode-select --install<br></code></pre></td></tr></table></figure><p>You might be prompted for your password. Type it in and press enter.This will start the download and installation process.</p></li><li><p>After the installation is completed, you can verify theinstallation by typing <code>make -v</code> in the Terminal. If<code>make</code> is installed, you'll see some version informationoutputted.</p></li></ol><p>In case you have already installed Xcode and Command Line Tools, andyou're just looking for how to use the <code>make</code> command, here'san example:</p><p>Let's say you have a C program and you want to compile it using<code>make</code>.</p><p>First, create a file named <code>Makefile</code> in your projectdirectory and it might look something like this:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">myprogram: myprogram.c</span><br>    gcc -o myprogram myprogram.c<br></code></pre></td></tr></table></figure><p>This <code>Makefile</code> tells <code>make</code> how to build yourprogram. Here <code>myprogram</code> is the target,<code>myprogram.c</code> is the dependency, and<code>gcc -o myprogram myprogram.c</code> is the command<code>make</code> will run to create or update the target.</p><p>Then you can just run <code>make</code> in your terminal:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">make<br></code></pre></td></tr></table></figure><p>This will compile your <code>myprogram.c</code> file into anexecutable called <code>myprogram</code>.</p><p>If your source code changes, you can recompile just by running<code>make</code> again. If your code hasn't changed, <code>make</code>won't do anything.</p><h2id="make-nothing-to-be-done-for-xxxx."><code>make: Nothing to be done for 'xxxx'.</code></h2><p>I got this problem when I have the <code>'xxxx'</code> in myMakefile. Make sure that the Makefile the format is the same. For a newmake command, use <code>tab</code> instead of <code>space</code>, Ifound PyCharm will automatically convert <code>tab</code> to<code>space</code> which took me a while to debug.</p><h1 id="xarray-library-in-python"><code>xarray</code> library inPython</h1><p>I need to merge two <code>DataArrays</code> together when I wasprocessing the data.</p><p>Here is the detailed documentation for <code>xarray</code>: <ahref="https://docs.xarray.dev/en/stable/user-guide/combining.html#concatenate">Documentation</a></p><h2 id="concat">concat</h2><p>Here is a visual sense of concat:</p><img src="/2023/06/23/Intern-study-summary-Jun-15-Thu/xarray-concat.jpeg" class="" title="xarray concat"><p>Here is the <ahref="https://www.youtube.com/watch?v=xdrcMi_FB8Q&amp;t=1102s&amp;ab_channel=WestDRI">video</a>I watched to learn about <code>xarray</code>, they also compared it with<code>numpy</code> and <code>pandas</code>, which might be helpful forthose who are familiar with those two library.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> xarray <span class="hljs-keyword">as</span> xr<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-meta">&gt;&gt;&gt; </span>data = xr.DataArray(<br><span class="hljs-meta">... </span>np.random.random(size=(<span class="hljs-number">4</span>, <span class="hljs-number">3</span>)),<br><span class="hljs-meta">... </span>dims=(<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;x&quot;</span>),<br><span class="hljs-meta">... </span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>data<br>&lt;xarray.DataArray (y: <span class="hljs-number">4</span>, x: <span class="hljs-number">3</span>)&gt;<br>array([[<span class="hljs-number">0.66017383</span>, <span class="hljs-number">0.01435655</span>, <span class="hljs-number">0.82392498</span>],<br>       [<span class="hljs-number">0.06476051</span>, <span class="hljs-number">0.6504625</span> , <span class="hljs-number">0.61194439</span>],<br>       [<span class="hljs-number">0.40693448</span>, <span class="hljs-number">0.22710373</span>, <span class="hljs-number">0.30344243</span>],<br>       [<span class="hljs-number">0.06840932</span>, <span class="hljs-number">0.32321194</span>, <span class="hljs-number">0.13938409</span>]])<br>Dimensions without coordinates: y, x<br><span class="hljs-meta">&gt;&gt;&gt; </span>data2 = xr.DataArray(np.random.random(size=(<span class="hljs-number">4</span>, <span class="hljs-number">3</span>)),dims=(<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;x&quot;</span>),)<br><span class="hljs-meta">&gt;&gt;&gt; </span>data2<br>&lt;xarray.DataArray (y: <span class="hljs-number">4</span>, x: <span class="hljs-number">3</span>)&gt;<br>array([[<span class="hljs-number">0.90414607</span>, <span class="hljs-number">0.12080436</span>, <span class="hljs-number">0.12541235</span>],<br>       [<span class="hljs-number">0.68558428</span>, <span class="hljs-number">0.27262736</span>, <span class="hljs-number">0.74151799</span>],<br>       [<span class="hljs-number">0.21410586</span>, <span class="hljs-number">0.02924536</span>, <span class="hljs-number">0.32955468</span>],<br>       [<span class="hljs-number">0.01220016</span>, <span class="hljs-number">0.25980773</span>, <span class="hljs-number">0.47056426</span>]])<br>Dimensions without coordinates: y, x<br><span class="hljs-meta">&gt;&gt;&gt; </span>data3 = xr.DataArray(np.random.random(size=(<span class="hljs-number">4</span>, <span class="hljs-number">4</span>)),dims=(<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;x&quot;</span>),)<br><span class="hljs-meta">&gt;&gt;&gt; </span>data3<br>&lt;xarray.DataArray (y: <span class="hljs-number">4</span>, x: <span class="hljs-number">4</span>)&gt;<br>array([[<span class="hljs-number">0.19104632</span>, <span class="hljs-number">0.40055872</span>, <span class="hljs-number">0.20014418</span>, <span class="hljs-number">0.60157153</span>],<br>       [<span class="hljs-number">0.94211448</span>, <span class="hljs-number">0.21033792</span>, <span class="hljs-number">0.63576454</span>, <span class="hljs-number">0.77343922</span>],<br>       [<span class="hljs-number">0.3038103</span> , <span class="hljs-number">0.70945801</span>, <span class="hljs-number">0.95828555</span>, <span class="hljs-number">0.19862075</span>],<br>       [<span class="hljs-number">0.73792562</span>, <span class="hljs-number">0.52394306</span>, <span class="hljs-number">0.9605408</span> , <span class="hljs-number">0.48479543</span>]])<br>Dimensions without coordinates: y, x<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>xr.concat([data, data2], dim = <span class="hljs-string">&quot;y&quot;</span>)<br>&lt;xarray.DataArray (y: <span class="hljs-number">8</span>, x: <span class="hljs-number">3</span>)&gt;<br>array([[<span class="hljs-number">0.66017383</span>, <span class="hljs-number">0.01435655</span>, <span class="hljs-number">0.82392498</span>],<br>       [<span class="hljs-number">0.06476051</span>, <span class="hljs-number">0.6504625</span> , <span class="hljs-number">0.61194439</span>],<br>       [<span class="hljs-number">0.40693448</span>, <span class="hljs-number">0.22710373</span>, <span class="hljs-number">0.30344243</span>],<br>       [<span class="hljs-number">0.06840932</span>, <span class="hljs-number">0.32321194</span>, <span class="hljs-number">0.13938409</span>],<br>       [<span class="hljs-number">0.90414607</span>, <span class="hljs-number">0.12080436</span>, <span class="hljs-number">0.12541235</span>],<br>       [<span class="hljs-number">0.68558428</span>, <span class="hljs-number">0.27262736</span>, <span class="hljs-number">0.74151799</span>],<br>       [<span class="hljs-number">0.21410586</span>, <span class="hljs-number">0.02924536</span>, <span class="hljs-number">0.32955468</span>],<br>       [<span class="hljs-number">0.01220016</span>, <span class="hljs-number">0.25980773</span>, <span class="hljs-number">0.47056426</span>]])<br>Dimensions without coordinates: y, x<br><span class="hljs-meta">&gt;&gt;&gt; </span>data<br>&lt;xarray.DataArray (y: <span class="hljs-number">4</span>, x: <span class="hljs-number">3</span>)&gt;<br>array([[<span class="hljs-number">0.66017383</span>, <span class="hljs-number">0.01435655</span>, <span class="hljs-number">0.82392498</span>],<br>       [<span class="hljs-number">0.06476051</span>, <span class="hljs-number">0.6504625</span> , <span class="hljs-number">0.61194439</span>],<br>       [<span class="hljs-number">0.40693448</span>, <span class="hljs-number">0.22710373</span>, <span class="hljs-number">0.30344243</span>],<br>       [<span class="hljs-number">0.06840932</span>, <span class="hljs-number">0.32321194</span>, <span class="hljs-number">0.13938409</span>]])<br>Dimensions without coordinates: y, x<br><span class="hljs-meta">&gt;&gt;&gt; </span>data2<br>&lt;xarray.DataArray (y: <span class="hljs-number">4</span>, x: <span class="hljs-number">3</span>)&gt;<br>array([[<span class="hljs-number">0.90414607</span>, <span class="hljs-number">0.12080436</span>, <span class="hljs-number">0.12541235</span>],<br>       [<span class="hljs-number">0.68558428</span>, <span class="hljs-number">0.27262736</span>, <span class="hljs-number">0.74151799</span>],<br>       [<span class="hljs-number">0.21410586</span>, <span class="hljs-number">0.02924536</span>, <span class="hljs-number">0.32955468</span>],<br>       [<span class="hljs-number">0.01220016</span>, <span class="hljs-number">0.25980773</span>, <span class="hljs-number">0.47056426</span>]])<br>Dimensions without coordinates: y, x<br><span class="hljs-meta">&gt;&gt;&gt; </span>xr.concat([data, data3], dim = <span class="hljs-string">&quot;x&quot;</span>)<br>&lt;xarray.DataArray (y: <span class="hljs-number">4</span>, x: <span class="hljs-number">7</span>)&gt;<br>array([[<span class="hljs-number">0.66017383</span>, <span class="hljs-number">0.01435655</span>, <span class="hljs-number">0.82392498</span>, <span class="hljs-number">0.19104632</span>, <span class="hljs-number">0.40055872</span>,<br>        <span class="hljs-number">0.20014418</span>, <span class="hljs-number">0.60157153</span>],<br>       [<span class="hljs-number">0.06476051</span>, <span class="hljs-number">0.6504625</span> , <span class="hljs-number">0.61194439</span>, <span class="hljs-number">0.94211448</span>, <span class="hljs-number">0.21033792</span>,<br>        <span class="hljs-number">0.63576454</span>, <span class="hljs-number">0.77343922</span>],<br>       [<span class="hljs-number">0.40693448</span>, <span class="hljs-number">0.22710373</span>, <span class="hljs-number">0.30344243</span>, <span class="hljs-number">0.3038103</span> , <span class="hljs-number">0.70945801</span>,<br>        <span class="hljs-number">0.95828555</span>, <span class="hljs-number">0.19862075</span>],<br>       [<span class="hljs-number">0.06840932</span>, <span class="hljs-number">0.32321194</span>, <span class="hljs-number">0.13938409</span>, <span class="hljs-number">0.73792562</span>, <span class="hljs-number">0.52394306</span>,<br>        <span class="hljs-number">0.9605408</span> , <span class="hljs-number">0.48479543</span>]])<br>Dimensions without coordinates: y, x<br></code></pre></td></tr></table></figure><h1 id="dex-decentralized-exchanges">DEX (decentralized exchanges)</h1><p>DEX and CEX refer to two types of cryptocurrency exchanges:Decentralized Exchanges (DEX) and Centralized Exchanges (CEX).</p><p>CEXs operate similarly to traditional financial exchanges. They aremanaged by a central authority (the company running the exchange), whichprovides a platform for buyers and sellers to trade cryptocurrencies.They handle the security of users' funds and users' private keys areheld by the exchange. Examples of CEXs include Binance, Coinbase, andKraken.</p><p>DEXs, on the other hand, operate without a central authority. Theyuse blockchain technology to enable direct peer-to-peer cryptocurrencytransactions. Users keep control of their private keys and funds, whichadds to the security, but also means users are fully responsible fortheir own security. Examples of DEXs include Uniswap, SushiSwap, andPancakeSwap.</p><p>Key differences include:</p><ol type="1"><li>Custody: In CEX, the exchange has custody of the funds while in DEX,users have full control of their funds.</li><li>Anonymity: DEXs often don't require user identification, making themmore anonymous than CEXs, which usually require some form of KYC (KnowYour Customer) process.</li><li>Number and Types of Assets: CEXs often have a wider range ofcryptocurrencies and other assets, while DEXs mainly focus on tokens ofa specific blockchain (like ERC20 tokens for Ethereum).</li><li>Trust: In CEXs, users need to trust the exchange, while in DEXs,trust is based on smart contracts and the underlying blockchaintechnology.</li></ol><h2 id="blockchain">blockchain</h2><p>A blockchain is a type of distributed ledger technology that storesdata across multiple systems in a network. It's designed to be secure,transparent, and resistant to modification of the data. This data isstored in blocks, and each block is linked to the one before it, forminga chain (hence the name, blockchain).</p><p>Here's how it works in a bit more detail:</p><ol type="1"><li><strong>Data Transactions</strong>: When a transaction occurs (likea Bitcoin being sent from one person to another), that transaction isgrouped together with other transactions that have occurred in the sametime frame into a block.</li><li><strong>Block Verification</strong>: This block is then sent to allthe nodes in the network. Nodes are computers that are participating inthe blockchain network. They have a copy of the entire blockchain andwork to verify the transactions in the new block.</li><li><strong>Consensus</strong>: Once the nodes reach consensus andconfirm that the transactions in the block are valid, the block is addedto the chain. The new block includes a unique identifier called acryptographic hash, as well as the hash of the previous block in thechain, which is what links the blocks together in a chain and makes theblockchain secure.</li></ol><p>One of the most famous uses of blockchain technology is forcryptocurrencies like Bitcoin, but there are many other potential uses,including supply chain tracking, voting systems, identity verification,and more.</p><p>The main advantages of blockchain technology are its transparency,security, and decentralization. However, it also faces challenges, suchas scalability and the significant amount of energy required by theconsensus process in many blockchains (like Bitcoin's proof-of-worksystem).</p><h2 id="how-dex-uses-blockchain-exactly">How DEX uses blockchainexactly?</h2><p>Decentralized Exchanges (DEXs) use blockchain technology tofacilitate direct peer-to-peer transactions, bypassing the need for acentral authority.</p><p>Here's a more detailed explanation:</p><ol type="1"><li><strong>Smart Contracts</strong>: DEXs are primarily built usingsmart contracts. These are self-executing contracts with the terms ofthe agreement directly written into code. They're stored on theblockchain, which makes them transparent and immutable. In a DEX, smartcontracts are used to facilitate and automate the trading process.</li><li><strong>On-chain Transactions</strong>: All trades occur directly onthe blockchain. When a user submits a trade on a DEX, it's essentially atransaction that's broadcast to the entire network, just like any otherblockchain transaction.</li><li><strong>Liquidity Pools</strong>: In many DEXs, liquidity isprovided by users themselves through a system known as liquidity pools.Instead of an order book matching buyers and sellers, users depositpairs of tokens into a pool, creating a market that others can tradeagainst. The smart contract maintains the balance between the two tokensin the pool based on the trades happening.</li><li><strong>Wallet Integration</strong>: DEXs allow direct integrationwith decentralized wallets (like MetaMask). Since trades arewallet-to-wallet, users maintain control over their private keysthroughout the entire process, enhancing security.</li><li><strong>Token Swaps</strong>: DEXs primarily facilitate token swaps,which is the exchange of one cryptocurrency for another. This isachieved through smart contracts which handle the swap automaticallyonce the user initiates the transaction.</li></ol><p>Remember, though, that while the decentralized nature of DEXs offersadvantages like increased privacy and control over one's assets, it alsomeans that the responsibility for security rests largely with the user.If you lose access to your wallet, for instance, the DEX can't help yourecover it.</p><h2 id="more-resources">More resources:</h2><p>Here are some of passages and videos I watched:</p><p>In English:</p><ul><li>Videos:<ul><li><ahref="https://www.youtube.com/watch?v=2tTVJL4bpTU&amp;ab_channel=WhiteboardCrypto">Whatis a DEX? How A Decentralized Exchange Works</a></li><li>A good YouTube Channel: <ahref="https://www.youtube.com/c/WhiteboardCrypto">WhiteboardCrypto</a></li></ul></li></ul><p>In Chinese:</p><ul><li>Passages:<ul><li><a href="https://zhuanlan.zhihu.com/p/634263865">一文读懂 DEX去中心化交易所</a></li></ul></li><li>Videos:<ul><li><ahref="https://www.bilibili.com/video/BV1pG4y1b7HY/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d84085799dfdb99d199a04d156250394">【科普篇】什么是去中心化交易所Uniswap(dApp)以及什么是 Uni 代币动画演示中英双字幕</a></li><li><ahref="https://www.bilibili.com/video/BV1NJ411D7rf/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d84085799dfdb99d199a04d156250394">尚硅谷区块链全套教程完整版(深入掌握以太坊核心技术)</a></li></ul></li></ul><h1 id="yaml">yaml</h1><p>YAML, which stands for "YAML Ain't Markup Language," is ahuman-friendly data serialization standard for all programminglanguages. It's often used for configuration files and in applicationswhere data is being stored or transmitted. YAML files typically have theextension <code>.yaml</code> or <code>.yml</code>.</p><p>In YAML, we use indentation to represent hierarchical relationships,similar to the way it's done in Python. This can be easier to read thanother data formats like JSON or XML, where structural information can beobscured by syntactical clutter.</p><p>There are several data types that YAML can represent, but two of themost important are lists (also known as sequences) and maps (also knownas dictionaries or hashes).</p><ol type="1"><li><p><strong>Lists</strong>: Lists are simply a sequence of items. InYAML, lists are represented by each item in the list being on a new linewith the same indentation and a leading dash (<code>-</code>).</p><p>For example:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">fruits:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Apple</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Banana</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Orange</span><br></code></pre></td></tr></table></figure><p>In this case, "fruits" is a list that includes "Apple", "Banana", and"Orange".</p></li><li><p><strong>Maps</strong>: Maps are used to link together pairs ofitems. In YAML, maps are represented with a colon (<code>:</code>)between the items in each pair.</p><p>For example:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">person:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">John</span><br>  <span class="hljs-attr">age:</span> <span class="hljs-number">30</span><br></code></pre></td></tr></table></figure><p>In this case, "person" is a map that includes "name: John" and "age:30".</p></li></ol><p>Moreover, YAML supports complex nesting of sequences and maps. Thisallows you to create a data structure as complex as your applicationrequires. For example:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">persons:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">John</span><br>    <span class="hljs-attr">age:</span> <span class="hljs-number">30</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Jane</span><br>    <span class="hljs-attr">age:</span> <span class="hljs-number">25</span><br></code></pre></td></tr></table></figure><p>In this case, "persons" is a list of maps, each map represents aperson with attributes "name" and "age".</p><p>YAML files are commonly used for configuration purposes, especiallyin DevOps environments, and can be found in applications like Ansible,Kubernetes, and Docker. They are also often used for defining workflows,like GitHub Actions workflows, or setting up continuousintegration/continuous deployment (CI/CD) pipelines. Additionally, theycan be used for data exchange between languages with different datastructures, data serialization, and more.</p><h1 id="command-line-tips-pycharm">Command Line tips &amp; PyCharm:</h1><p>I am using the PyCharm professional that is the most recent versionup to today.</p><h2id="command-shift-f-to-search-every-thing-in-project"><code>command + shift + f</code>to search every thing in project</h2><p>Sometimes you can only remember a line of code or a specific specialword in one of the files in your project. When you are trying to locatesuch words, or trying to local such files by such words or lines ofcodes, you could try <code>command + shift + f</code>. This command willfind all the occurrence of your input string in all the files.</p><h2 id="command-shift-o-to-search-file"><code>command + shift + o</code>to search file</h2><p>This is used to such a specific file. For example, you want to open afile named “self-destruct.py”, you could search “self-destruct.py” afterusing <code>command + shift + o</code>, then click <code>return</code>on your keyboard.</p><h2 id="cc-and-w"><code>Cc</code> and <code>W</code></h2><p>When you are trying to local a specific word that must to totallyidentical to your input, you could use <code>Cc</code> and<code>W</code>. This would be useful when you are trying to replacecertain word with another one.</p><p><code>Cc</code> is matching with the same case. When this is clicked,“Ray” and “ray” is not the same word. Which means you cannot find “ray”by searching “Ray”.</p><p><code>W</code> is searching the whole word. When this is clicked, youwon’t find “Ray-is-smart” or “Rayisexcellent” by searching “Ray”.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>Tech</tag>
      
      <tag>PyCharm</tag>
      
      <tag>PyCharm Professional</tag>
      
      <tag>Terminal</tag>
      
      <tag>Terminal Command</tag>
      
      <tag>Decentralized Exchange</tag>
      
      <tag>Dex</tag>
      
      <tag>xarray</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jun 14 Wed</title>
    <link href="/2023/06/14/Intern-study-summary-Jun-14-Wed/"/>
    <url>/2023/06/14/Intern-study-summary-Jun-14-Wed/</url>
    
    <content type="html"><![CDATA[<style>.tog-button {    color: white;  border-radius: 20px; /* Rounded corners */  /* border: 10px;  */  /* Remove default button border */  /* border-color: white; */  padding: 10px 20px; /* Add some padding */  text-decoration: none; /* Remove default underline */  cursor: pointer; /* Change cursor on hover */  background-color: transparent; /* Transparent background */  color: white; /* Add some color */}.tog-button:hover {  background-color: #ddd; /* Add a hover effect */  color: black;}.tog-content {    background-color: rgba(255, 255, 255, 0.1);    border-radius: 5px;    /* color: white; */    /* boarder: 10px; */}</style><h1 id="python">Python</h1><h2 id="polymorphism">Polymorphism</h2><h3id="does-python-have-the-same-thing-as-javas-polymorphism-for-example-i-have-class-car-price-int-age-int-name-strand-class-bmwcar-power-str-color-str-when-i-declare-a-function-as-get_car_infocar-car-can-i-input-an-instance-of-bmw-will-i-be-able-to-access-the-power-and-color-attribute-of-the-input-which-is-type-car">Doespython have the same thing as Java's Polymorphism? For example, I have<code>class Car: price: int; age: int; name: str</code>and<code>class BMW(car): power: str; color: str</code>, when I declare afunction as <code>get_car_info(car: Car)</code> can I input an instanceof <code>BMW</code>? will i be able to access the <code>power</code> and<code>color</code> attribute of the input, which is type<code>Car</code>?</h3><div class="tog-container"><p><button class="tog-button">Show/Hide Answer</button></p></div><div class="tog-content" style="display: none;"><p>Yes, Python does support a form of polymorphism, but it is somewhatdifferent from Java's. Python's typing is dynamic, whereas Java's isstatic. In Python, if an object has a method or property, you can useit, regardless of the object's type. This concept is often summarized bythe phrase "duck typing": If it walks like a duck and quacks like aduck, it's a duck.</p><p>In your example, you define <code>Car</code> and <code>BMW</code>classes, and then a function <code>get_car_info(car: Car)</code>. Thetype hint <code>Car</code> is just that: a hint. Python will allow youto pass any object to <code>get_car_info</code>. If the object has allthe properties and methods the function tries to use, the function willwork fine.</p><p>So, yes, you can pass a <code>BMW</code> instance to<code>get_car_info</code>. Whether you can access <code>power</code> and<code>color</code> depends on the body of <code>get_car_info</code>. Ifthe function tries to access those properties, it will work fine with a<code>BMW</code> instance. If you pass in a <code>Car</code> instancethat doesn't have those properties, however, the function will raise anAttributeError.</p><p>Here is an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Car</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, price: <span class="hljs-built_in">int</span>, age: <span class="hljs-built_in">int</span>, name: <span class="hljs-built_in">str</span></span>):<br>        self.price = price<br>        self.age = age<br>        self.name = name<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BMW</span>(<span class="hljs-title class_ inherited__">Car</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, price: <span class="hljs-built_in">int</span>, age: <span class="hljs-built_in">int</span>, name: <span class="hljs-built_in">str</span>, power: <span class="hljs-built_in">str</span>, color: <span class="hljs-built_in">str</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__(price, age, name)<br>        self.power = power<br>        self.color = color<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_car_info</span>(<span class="hljs-params">car: Car</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Name: <span class="hljs-subst">&#123;car.name&#125;</span>, Age: <span class="hljs-subst">&#123;car.age&#125;</span>, Price: <span class="hljs-subst">&#123;car.price&#125;</span>&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(car, BMW):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Power: <span class="hljs-subst">&#123;car.power&#125;</span>, Color: <span class="hljs-subst">&#123;car.color&#125;</span>&#x27;</span>)<br><br>my_bmw = BMW(<span class="hljs-number">30000</span>, <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;BMW X5&#x27;</span>, <span class="hljs-string">&#x27;250 hp&#x27;</span>, <span class="hljs-string">&#x27;Red&#x27;</span>)<br>get_car_info(my_bmw)<br><br></code></pre></td></tr></table></figure><p>Here, the <code>get_car_info</code> function first checks whether the<code>car</code> is an instance of <code>BMW</code> before trying toaccess the <code>power</code> and <code>color</code> attributes,avoiding an AttributeError when used with a <code>Car</code>instance.</p><p>It's worth mentioning that Python's approach to polymorphism is moreflexible than Java's, but it also has downsides. The lack of stricttyping can lead to errors that are only caught at runtime, rather thanat compile-time like in Java. You might want to consider using Python'soptional type checking features to get some of the benefits of statictyping while keeping the flexibility of Python.</p></div><script>let togButton = document.querySelector('.tog-button');let togContent = document.querySelector('.tog-content');togButton.addEventListener('click', function() {    console.log("clicked")  if(togContent.style.display == 'none') {    togContent.style.display = 'block';  } else {    togContent.style.display = 'none';  }});</script><h1 id="pyenv">pyenv</h1><h2id="use-pyenv-to-change-the-python-version-of-your-system-global">Usepyenv to change the python version of your system (global)</h2><p><code>pyenv</code> is a simple yet powerful Python version managementtool. Here are the steps to change the global Python version using<code>pyenv</code>:</p><ol type="1"><li><p><strong>Install <code>pyenv</code></strong>: Before you use<code>pyenv</code>, you need to install it. Here is the command toinstall <code>pyenv</code> using Homebrew on macOS:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew update<br>brew install pyenv<br></code></pre></td></tr></table></figure><p>For Linux, you can use the <code>pyenv-installer</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl &lt;https://pyenv.run&gt; | bash<br></code></pre></td></tr></table></figure><p>Make sure you follow the instructions provided by the installer toset up your shell for pyenv usage.</p></li><li><p><strong>List Available Python Versions</strong>: Use the<code>pyenv install --list</code> command to see the list of allavailable Python versions. It should display a list of versions likethis:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">2.7.17<br>3.5.9<br>3.6.10<br>3.7.7<br>3.8.2<br>...<br></code></pre></td></tr></table></figure></li><li><p><strong>Install a Specific Python Version</strong>: You caninstall a specific Python version using <code>pyenv</code>. For example,to install Python 3.8.2, you would use this command:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pyenv</span> install <span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Set the Global Python Version</strong>: After the Pythonversion you want is installed, you can set it as the global version with<code>pyenv global</code>. For example, to set Python 3.8.2 as theglobal version, you would use this command:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pyenv</span> global <span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Confirm the Change</strong>: To confirm that the globalPython version has been changed, you can use the<code>python --version</code> command. It should display something like<code>Python 3.8.2</code>, indicating that the version has beenchanged.</p></li></ol><p>That's it! You have successfully changed the global Python versionusing <code>pyenv</code>. Keep in mind that changing the global Pythonversion will affect all the Python programs on your system, so make sureyou really want to do this before you proceed.</p><h2 id="wont-work">Won’t work</h2><p>Sometimes you will find that even you followed the stepsaforementioned, when you type <code>python3 --version</code>, you willstill see the old version, which means the command<code>pyenv global 3.8.2</code>is not working. Keep reading:</p><p>If you have just installed <code>pyenv</code> and have set the globalPython version, but when running <code>python3 --version</code> theversion shown is still the system version (Python 3.8.9 in this case),it suggests that your shell environment might not be set up properly touse <code>pyenv</code>.</p><p>One of the common reasons for this is that <code>pyenv</code> is notproperly integrated in your shell.</p><p>Here is how you can do it:</p><ol type="1"><li><p><strong>Add <code>pyenv</code> to bash so command line knowsabout <code>pyenv</code></strong>: Depending on your shell, you need toadd these lines to your shell's configuration file (<code>.bashrc</code>or <code>.bash_profile</code> for bash, <code>.zshrc</code> forZsh):</p><p>For <code>bash</code>:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">echo</span> -e &#x27;<span class="hljs-keyword">if</span> <span class="hljs-keyword">command</span> -v pyenv 1&gt;<span class="hljs-string">/dev/null</span> 2&gt;&amp;1; then\\n  eval <span class="hljs-string">&quot;$(pyenv init -)&quot;</span>\\nfi&#x27; &gt;&gt; ~<span class="hljs-string">/.bashrc</span><br>source ~<span class="hljs-string">/.bashrc</span><br><br></code></pre></td></tr></table></figure><p>For <code>zsh</code>:</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">echo</span> -e &#x27;<span class="hljs-keyword">if</span> <span class="hljs-keyword">command</span> -v pyenv 1&gt;<span class="hljs-string">/dev/null</span> 2&gt;&amp;1; then\\n  eval <span class="hljs-string">&quot;$(pyenv init -)&quot;</span>\\nfi&#x27; &gt;&gt; ~<span class="hljs-string">/.zshrc</span><br>source ~<span class="hljs-string">/.zshrc</span><br><br></code></pre></td></tr></table></figure><p>These commands will append the <code>pyenv init</code> command toyour shell configuration file and then reload the shell configurationfile. The <code>pyenv init</code> command configures the shell to use<code>pyenv</code> for Python version management.</p></li><li><p><strong>Restart your shell</strong>: This ensures that thechanges take effect.</p></li><li><p><strong>Check the Python version</strong>: Now, when you type<code>python3 --version</code>, it should display<code>Python 3.8.16</code> or whatever version you set as the globalversion using <code>pyenv</code>.</p></li></ol><p>If the version is still not showing up correctly, it might be due tothe specific naming of the python binaries. Try using the command<code>python --version</code> instead of <code>python3 --version</code>.<code>pyenv</code> might have set the version correctly, but the<code>python3</code> command could still be pointing to your system'sPython installation.</p><p>If the issue persists, do check the list of Python versions installedunder <code>pyenv</code> using <code>pyenv versions</code>. This willhelp you verify whether the intended Python version is correctlyinstalled under <code>pyenv</code>. If it's not listed, you'll need toinstall it using <code>pyenv install 3.8.16</code>.</p><h1 id="pycharm">PyCharm:</h1><p>Note: I am using the newest version up to date 2023 Jun 14th ofPyCharm Professional. (MacOS with M1 Pro)</p><h2 id="install-a-python-package-in-pycharm">Install a python package inPyCharm</h2><p>Installing a Python package in PyCharm is quite simple. Here's howyou do it:</p><ol type="1"><li>Open your project in PyCharm.</li><li>Navigate to <code>File -&gt; Settings</code>. For macOS, navigate to<code>PyCharm -&gt; Preferences</code>.</li><li>In the Settings/Preferences dialog, navigate to<code>Project: [your_project_name] -&gt; Project Interpreter</code>.</li><li>In the top-right corner of the dialog, click the <code>+</code>(plus) icon to add a new package.</li><li>In the new window that opens (the Available Packages dialog), you'llsee a list of available packages. You can search for the package youwant to install by typing its name into the search box.</li><li>After you find your package, simply click the<code>Install Package</code> button at the bottom of the dialog.</li><li>Wait for PyCharm to download and install the package. You can seethe installation progress in the status bar at the bottom of thedialog.</li><li>After the installation finishes, you can close the dialog. Yourpackage is now installed and ready to use.</li></ol><p>Remember that PyCharm creates a new virtual environment for eachproject by default, so the package you've installed is only available inthe current project's environment. If you want the package to beavailable globally or in a different project, you need to install it inthe corresponding environment.</p><h1 id="command">Command</h1><h2 id="clear-the-terminal">Clear the terminal:</h2><p>You can simply type the following code to clear your screen:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">clear<br></code></pre></td></tr></table></figure><p>Yet you will find that when you scroll up, the content you typedbefore still exists. Here is one of the reasons:</p><p>The <code>clear</code> command on a Unix-based system like macOS willclear the visible window of the terminal, but it doesn't clear theterminal's scrollback buffer. That means when you scroll up, you'llstill be able to see the previous commands and output.</p><p>If you want to clear the terminal completely, including thescrollback buffer, you can use the <code>reset</code> command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">reset<br></code></pre></td></tr></table></figure><p>This will not only clear the terminal screen, but also the scrollbackbuffer, so you won't be able to scroll up to see previous output.</p><p>Alternatively, if you're using the Terminal app on macOS, you can usethe keyboard shortcut <code>Cmd+K</code> to clear the screen and thescrollback buffer. This works in both bash and zsh, the default shell onmacOS as of Catalina.</p><p>Please note, always be careful when using commands that permanentlydelete history or output, especially in production environments or whenworking with sensitive data.</p><p>Note: sometimes when you use <code>reset</code>command, the effect issame as using <code>clear</code> . In this case, <code>Cmd+K</code> is abetter choice.</p><h1 id="hexo">Hexo</h1><p>I am using Hexo basing my blog. I also had some tips for how tofurther beautify your blog.</p><p>Note, you might know that Hexo could render Markdown grammar. Yet youmight not know that Hexo could also render html code in the middle ofMarkdown file. I used to write my blog in notion, yet notion, unlikeclassical markdown compiler, supported tog element which allows you tohide and show content when other people click on a button. Here is ahtml version of code you can use to achieve the same effect. Actually,you’ve seen such use at the beginning of this blog.</p><p>Here's the way to add the HTML and JavaScript code into your Markdownfile:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html">Here&#x27;s an interactive section that hides and shows content:<br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tog-container&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tog-button&quot;</span>&gt;</span>Show/Hide Answer<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tog-content&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: none;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Your answer goes here.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">let</span> togButton = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.tog-button&quot;</span>);</span><br><span class="language-javascript">  <span class="hljs-keyword">let</span> togContent = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.tog-content&quot;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">  togButton.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">if</span> (togContent.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> == <span class="hljs-string">&quot;none&quot;</span>) &#123;</span><br><span class="language-javascript">      togContent.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&quot;block&quot;</span>;</span><br><span class="language-javascript">    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">      togContent.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&quot;none&quot;</span>;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Please note that in the above example, the JavaScript code isembedded directly in the Markdown file. Some Markdown processors havesafety features that remove script tags. If your script is not runningafter you add it, you might want to check your Markdown processor'sdocumentation or use an external <code>.js</code> file.</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>Tech</tag>
      
      <tag>PyCharm</tag>
      
      <tag>PyCharm Professional</tag>
      
      <tag>Terminal</tag>
      
      <tag>Terminal Command</tag>
      
      <tag>Hexo</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Intern study summary - Jun 13 Tue</title>
    <link href="/2023/06/14/intern-log/"/>
    <url>/2023/06/14/intern-log/</url>
    
    <content type="html"><![CDATA[<h1 id="python">Python</h1><h2 id="pass"><code>pass</code></h2><p>In Python, the <code>pass</code> keyword is a<strong>placeholder</strong> statement. It is used when a statement isrequired syntactically, but no action needs to be performed.</p><h3 id="example.">Example.</h3><p>Suppose you're designing a new class and you know it needs aparticular method, but you aren't sure what the implementation of thatmethod should be yet. You can use <code>pass</code> as a placeholderlike so:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">future_method</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>In this code, <code>future_method</code> does nothing, but it's avalid method. Without the <code>pass</code> statement, the code wouldhave a syntax error because Python expects a block of code to follow themethod definition. The <code>pass</code> keyword is saying, "Iacknowledge that you expect something here, but I don't want to doanything."</p><p>Similarly, it can be used in conditional statements, loops, etc.where some code is expected:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> some_condition:<br>    <span class="hljs-keyword">pass</span>  <span class="hljs-comment"># <span class="hljs-doctag">TODO:</span> handle this condition</span><br><br></code></pre></td></tr></table></figure><p>In the above case, <code>pass</code> is used to indicate that thiscondition should be handled in the future.</p><p>Keep in mind, it's typically used in development phases, and in mostcases, you should eventually replace <code>pass</code> with somemeaningful code.</p><h2 id="dataclass"><code>@dataclass</code></h2><p>The <code>@dataclass</code> decorator is a feature of Pythonintroduced in Python 3.7, as part of the <code>dataclasses</code>module. It provides a convenient way to generate special methods forclasses which mainly contain data, like the <strong>init</strong>,<strong>repr</strong>, and <strong>eq</strong> methods.</p><h3 id="example">Example:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@dataclass</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DogInfo</span>():<br>    name: <span class="hljs-built_in">str</span><br>    age: <span class="hljs-built_in">int</span><br><br></code></pre></td></tr></table></figure><p><code>DogInfo</code> is defined as a dataclass, which means Pythonwill automatically add special methods like <strong>init</strong>,<strong>repr</strong>, and <strong>eq</strong>.</p><h3 id="compare-to-java">Compare to Java</h3><p>Java does not have a direct equivalent to Python's dataclasses, butit does have similar features for creating simple classes that mainlycontain data.</p><p>One approach in Java is to create a simple class with private fields,and generate getter, setter, <code>equals()</code>,<code>hashCode()</code>, and <code>toString()</code> methods. Mostmodern Java IDEs can generate these methods for you.</p><p>Starting from Java 14, there's also a preview feature called<code>record</code> which provides similar functionality to Python'sdataclasses. Here's an example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">record</span> <span class="hljs-title class_">DogInfo</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span> &#123;&#125;<br></code></pre></td></tr></table></figure><p>In this Java code, <code>DogInfo</code> is defined as a record withtwo fields: <code>name</code> and <code>age</code>. Java automaticallygenerates constructor, equals, hashCode, and toString methods.</p><h3id="dataclassfrozentrue-the-frozentrue"><code>@dataclass(frozen=True)</code>the <code>(frozen=True)</code></h3><p>The <code>@dataclass</code> decorator in Python comes with severalparameters that you can use to customize the behavior of the dataclass,and one of these parameters is <code>frozen</code>.</p><p>If you set <code>frozen=True</code> when you define a dataclass, itmakes the instances of that dataclass immutable, similar to a tuple.That is, once the instance has been created and its attributes have beenset, you can't change them.</p><p>If you try to change an attribute of a frozen dataclass, Pythonraises an exception. Here's an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> dataclasses <span class="hljs-keyword">import</span> dataclass<br><br><span class="hljs-meta">@dataclass(<span class="hljs-params">frozen=<span class="hljs-literal">True</span></span>)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Point</span>:<br>    x: <span class="hljs-built_in">float</span><br>    y: <span class="hljs-built_in">float</span><br><br>p = Point(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)<br>p.x = <span class="hljs-number">5</span>  <span class="hljs-comment"># Raises a `dataclasses.FrozenInstanceError`</span><br><br></code></pre></td></tr></table></figure><p>If you run this code, you'll get a <code>FrozenInstanceError</code>when you try to assign <code>5</code> to <code>p.x</code>.</p><p>The <code>frozen=True</code> parameter is useful when you want tocreate a dataclass that is hashable and can be used as a dictionary key,or when you want to ensure that an instance of the class won't changeonce it's been created.</p><h4 id="compare-to-javas-final-keyword">Compare to Java’s<code>final</code> keyword</h4><p>Compare with <code>final float PI</code> in Java: the<code>frozen=True</code> parameter for Python's <code>@dataclass</code>and the <code>final</code> keyword in Java serve similar purposes, butthey're not exactly the same.</p><p>The <code>frozen=True</code> parameter in Python makes it so that allattributes of an instance of a dataclass are immutable -- you can'tchange them once they're set. This is similar to how a<code>final</code> variable in Java can't be changed once it'sinitialized.</p><p>However, the <code>final</code> keyword in Java can be used inseveral contexts. When used with a variable (like<code>final float PI</code>), it makes that variable a constant -- youcan't change its value once it's initialized. When used with a class, itmeans the class can't be subclassed. When used with a method, it meansthe method can't be overridden by subclasses.</p><p>The <code>frozen=True</code> parameter in Python's<code>@dataclass</code> only affects the mutability of instances of theclass. It doesn't prevent the class from being subclassed, nor does itprevent methods from being overridden. There's no exact equivalent inPython for Java's <code>final</code> keyword when used with classes andmethods. Python's philosophy tends towards allowing greater flexibility,so "final" classes and methods are not a language feature.</p><h3 id="post_init"><code>post_init</code></h3><p>The <code>__post_init__</code> method in Python is a special methodprovided by the dataclasses module. It's a method that you can define inyour dataclass, and if it exists, it gets called automatically at theend of the generated <code>__init__</code> method.</p><p>The purpose of the <code>__post_init__</code> method is to performany additional initialization steps that you need to do beyond justsetting the attributes of your dataclass to the provided values.</p><p>Here's an example of how you might use it:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> dataclasses <span class="hljs-keyword">import</span> dataclass<br><br><span class="hljs-meta">@dataclass</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Point</span>:<br>    x: <span class="hljs-built_in">float</span><br>    y: <span class="hljs-built_in">float</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__post_init__</span>(<span class="hljs-params">self</span>):<br>        self.magnitude = (self.x ** <span class="hljs-number">2</span> + self.y ** <span class="hljs-number">2</span>) ** <span class="hljs-number">0.5</span><br><br>p = Point(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(p.magnitude)  <span class="hljs-comment"># Outputs: 5.0</span><br><br></code></pre></td></tr></table></figure><p>In this example, after the <code>x</code> and <code>y</code>attributes are set in the <code>__init__</code> method, the<code>__post_init__</code> method is automatically called. Thiscalculates the magnitude of the point from its <code>x</code> and<code>y</code> coordinates and stores it in the <code>magnitude</code>attribute.</p><p>If you don't define a <code>__post_init__</code> method in yourdataclass, then nothing extra happens after <code>__init__</code>. Butif you do define it, then it provides a way to add some additionalinitialization behavior that goes beyond just setting attributevalues.</p><h2 id="inherit-in-python-and-java">Inherit in Python and Java</h2><p>Inheritance is a key feature in many object-oriented programminglanguages, including Python and Java. It is a mechanism that allows aclass to acquire the properties and behaviors of another class.</p><p>The class from which properties are inherited is known as the parentclass, superclass, or base class. The class that inherits thoseproperties is known as the child class, subclass, or derived class.</p><p>When a class inherits from another class in Python, it gains accessto all of the superclass's attributes and methods. This means thatobjects of the subclass can be treated as instances of the superclass,and code that works with the superclass will automatically work with thesubclass.</p><p>Python's inheritance is defined as follows:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ParentClass</span>:<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ChildClass</span>(<span class="hljs-title class_ inherited__">ParentClass</span>):<br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>In this example, <code>ChildClass</code> is inheriting from<code>ParentClass</code>.</p><p>Python supports both single and multiple inheritance. Singleinheritance is when a class inherits from a single superclass, whilemultiple inheritance is when a class inherits from more than onesuperclass. Here is an example of multiple inheritance:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ParentClass1</span>:<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ParentClass2</span>:<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ChildClass</span>(ParentClass1, ParentClass2):<br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>In this example, <code>ChildClass</code> is inheriting from both<code>ParentClass1</code> and <code>ParentClass2</code>.</p><p>Java also supports inheritance, but with a key difference: Java doesnot support multiple inheritance for classes. A class in Java can onlydirectly inherit from one superclass. However, a class can implementmultiple interfaces, which is a sort of workaround for multipleinheritance.</p><p>This is how you define inheritance in Java:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ParentClass</span> &#123;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ChildClass</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ParentClass</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>In this example, <code>ChildClass</code> is inheriting from<code>ParentClass</code>.</p><p>Despite the difference in multiple inheritance, the fundamental ideabehind inheritance is the same in both languages. It's a way to organizecode, increase reusability, and set up relationships between differenttypes.</p><p>Also, Java have abstract class which might be different with whatpython’s inherit behaves.</p><h4 id="a-key-example">A key example:</h4><p>Yes, you're correct. When you create an instance of<code>AClass</code> by calling <code>AClass("t1", "t2", "t3")</code>,the <code>p1</code>, <code>p2</code>, and <code>p3</code> attributes of<code>a_class</code> will be set to "t1", "t2", and "t3"respectively.</p><p>The values "p1_attribute", "p2_attribute", and "p3_attribute"specified in the class definition are default values. They are used ifyou create an instance without providing corresponding arguments.</p><p>Here's how it works:</p><p>Try to answer the following question:</p><p>If I have code</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@dataclass(<span class="hljs-params">frozen=<span class="hljs-literal">True</span></span>)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AClass</span>:<br>    p1: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;p1_attribute&quot;</span><br>    p2: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;p2_attribute&quot;</span><br>    p3: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;p3_attribute&quot;</span><br></code></pre></td></tr></table></figure><p>and I have <code>a_class = AClass("t1", "t2", "t3")</code>, then the<code>p1, p2, p3</code> of <code>a_class</code> will be "t1", "t2", and"t3"?</p><style>.tog-button {    color: white;  border-radius: 20px; /* Rounded corners */  /* border: 10px;  */  /* Remove default button border */  /* border-color: white; */  padding: 10px 20px; /* Add some padding */  text-decoration: none; /* Remove default underline */  cursor: pointer; /* Change cursor on hover */  background-color: transparent; /* Transparent background */  color: white; /* Add some color */}.tog-button:hover {  background-color: #ddd; /* Add a hover effect */  color: black;}.tog-content {    background-color: rgba(255, 255, 255, 0.1);    border-radius: 5px;    /* color: white; */    /* boarder: 10px; */}</style><div class="tog-container"><p><button class="tog-button">Show/Hide Answer</button></p></div><div class="tog-content" style="display: none;"><p>Yes, it’s correct. When you create an instance of <code>AClass</code>by calling <code>AClass("t1", "t2", "t3")</code>, the <code>p1</code>,<code>p2</code>, and <code>p3</code> attributes of <code>a_class</code>will be set to "t1", "t2", and "t3" respectively. The values"p1_attribute", "p2_attribute", and "p3_attribute" specified in theclass definition are default values. They are used if you create aninstance without providing corresponding arguments. Here's how itworks:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> dataclasses <span class="hljs-keyword">import</span> dataclass<br><span class="hljs-meta">@dataclass(<span class="hljs-params">frozen=<span class="hljs-literal">True</span></span>)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AClass</span>:<br>p1: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;p1_attribute&quot;</span><br>p2: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;p2_attribute&quot;</span><br>p3: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;p3_attribute&quot;</span><br><span class="hljs-comment"># Creating an instance with arguments</span><br>a_class = AClass(<span class="hljs-string">&quot;t1&quot;</span>, <span class="hljs-string">&quot;t2&quot;</span>, <span class="hljs-string">&quot;t3&quot;</span>)<br><span class="hljs-built_in">print</span>(a_class.p1)  <span class="hljs-comment"># Outputs: t1</span><br><span class="hljs-built_in">print</span>(a_class.p2)  <span class="hljs-comment"># Outputs: t2</span><br><span class="hljs-built_in">print</span>(a_class.p3)  <span class="hljs-comment"># Outputs: t3</span><br><span class="hljs-comment"># Creating an instance without arguments</span><br>another_class = AClass()<br><span class="hljs-built_in">print</span>(another_class.p1)  <span class="hljs-comment"># Outputs: p1_attribute</span><br><span class="hljs-built_in">print</span>(another_class.p2)  <span class="hljs-comment"># Outputs: p2_attribute</span><br><span class="hljs-built_in">print</span>(another_class.p3)  <span class="hljs-comment"># Outputs: p3_attribute</span><br></code></pre></td></tr></table></figure><p>In this code, when we create <code>a_class</code> with arguments,those arguments override the default values. But when we create<code>another_class</code> without arguments, the attributes get set tothe default values.</p></div><script>let togButton = document.querySelector('.tog-button');let togContent = document.querySelector('.tog-content');togButton.addEventListener('click', function() {    console.log("clicked")  if(togContent.style.display == 'none') {    togContent.style.display = 'block';  } else {    togContent.style.display = 'none';  }});</script><h2 id="yield"><code>yield</code></h2><p>I search several times on the <code>yiedl</code> key word in python.Even with ChatGPT, I cannot clearly understand how <code>yield</code>keyword is working in python and why we need it. One key step tounderstand it is that the <strong><code>yield</code></strong> keywordcannot be replaced with <strong><code>return</code></strong> because<strong><code>return</code></strong> in a function terminates thefunction entirely, while <strong><code>yield</code></strong> only pausesthe function. If you replace <strong><code>yield</code></strong> with<strong><code>return</code></strong>, your function will stop executingafter the first <strong><code>return</code></strong> statement itencounters, and it will not be able to produce multiple values overtime.</p><hr /><p>The <code>yield</code> keyword in Python is used in a special kind offunction called a generator. Generators are a type of iterable, likelists or tuples. Unlike lists, they don't allow indexing with arbitraryindices, but they can still be iterated through with for loops.</p><p>When the <code>yield</code> keyword is called in a function, itreturns a value and pauses execution of the function. The function canthen be resumed right where it left off, allowing it to generate asequence of results over time, instead of computing them all at once andreturning them in a list for instance.</p><p>Here's a simple example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">simple_generator</span>():<br>    <span class="hljs-keyword">yield</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">yield</span> <span class="hljs-number">2</span><br>    <span class="hljs-keyword">yield</span> <span class="hljs-number">3</span><br><br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> simple_generator():<br>    <span class="hljs-built_in">print</span>(value)<br></code></pre></td></tr></table></figure><p>This will output:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>If you only need to generate a single value from your function, thenyou can use <code>return</code> instead of <code>yield</code>. Also, ifyour function generates a small number of values, you might be able touse <code>return</code> to return them all at once in a list, ratherthan generating them one at a time with <code>yield</code>.</p><p>In summary, <code>yield</code> is a special keyword used in thecontext of Python generators, and it cannot be simply replaced with<code>return</code> without changing the function's behavior.</p><h3 id="can-i-use-a-block-of-code-to-implement-yield">Can I use a blockof code to implement <code>yield</code>?</h3><p>In Python, the <code>yield</code> keyword is used to make a functioninto a generator that can produce a sequence of results over time.However, the <code>yield</code> keyword itself does quite a bit ofbehind-the-scenes work, so it's not straightforward to replace it with afew lines of code. You would need to implement a whole class with aniterator to get equivalent behavior.</p><p>Here is a simple example of how you might do that. This exampleimplements a generator that yields the numbers 1, 2, and 3, similar tothe previous example.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SimpleGenerator</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.current = <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iter__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__next__</span>(<span class="hljs-params">self</span>):<br>        self.current += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> self.current &gt; <span class="hljs-number">3</span>:<br>            <span class="hljs-keyword">raise</span> StopIteration<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> self.current<br><br><span class="hljs-comment"># Use the generator</span><br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> SimpleGenerator():<br>    <span class="hljs-built_in">print</span>(value)<br><br></code></pre></td></tr></table></figure><p>In this code, the <code>SimpleGenerator</code> class has a<code>__next__</code> method that implements the logic of the generator:it keeps track of the current number, and each time<code>__next__</code> is called, it increments the number and returnsit. When the number gets bigger than 3, it raises a<code>StopIteration</code> exception, which signals that the generatoris done.</p><p>This is a more explicit way of implementing a generator, and it cangive you a clearer sense of what's going on behind the scenes when youuse the <code>yield</code> keyword. However, using <code>yield</code> isgenerally simpler and more concise, which is why it's usually preferredfor creating generators in Python.</p><h3id="but-with-yield-keyword-there-wont-be-such-thing-to-store-the-iterable-result-which-means-i-wont-be-able-to-print-the-whole-return-result-inside-of-the-method-with-yield">butwith <code>yield</code> keyword, there won't be such thing to store theiterable result, which means I won't be able to print the whole returnresult inside of the method with 'yield`?</h3><div class="tog-container"><p><button class="tog-button" name="button2">Show/HideAnswer</button></p></div><div class="tog-content" style="display: none;" name="content2"><p>You're correct. A generator (a function that uses the<code>yield</code> keyword) doesn't return a value that can be stored ina variable like a list or tuple. Instead, it produces values one at atime on-the-fly as you iterate over the generator. Here's anexample:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-keyword">def</span> <span class="hljs-title function_">simple_generator</span>():<br>    <span class="hljs-keyword">yield</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">yield</span> <span class="hljs-number">2</span><br>    <span class="hljs-keyword">yield</span> <span class="hljs-number">3</span><br><br><span class="hljs-comment"># This won&#x27;t work as you might expect:</span><br>result = simple_generator()<br>print(result)  <span class="hljs-comment"># Outputs: &lt;generator object simple_generator at 0x7f...&gt;</span><br><br></code></pre></td></tr></table></figure><p>When you try to print <code>result</code>, it tells you that it's agenerator object, not a list of numbers. If you want to collect all thevalues produced by a generator into a list, you can do that by passingthe generator to the <code>list</code> function:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-literal">result</span> = <span class="hljs-built_in">list</span>(simple_generator())<br>print(<span class="hljs-literal">result</span>)  <span class="hljs-comment"># Outputs: [1, 2, 3]</span><br><br></code></pre></td></tr></table></figure><p>However, it's important to remember that one of the main reasons touse generators is when you're working with a large amount of data thatwon't fit into memory all at once. In such cases, you'd generally wantto process the generator's values one at a time, rather than trying tostore them all in a list.</p></div><script>let elements = document.getElementsByName('button2');let button2 = elements[0]let elements2 = document.getElementsByName('content2');let content2 = elements2[0]button2.addEventListener('click', function() {    console.log("clicked")    console.log(content2)  if(content2.style.display == 'none') {    content2.style.display = 'block';  } else {    content2.style.display = 'none';  }});</script><h2 id="enumerate"><code>enumerate()</code></h2><p>The <code>enumerate</code> function in Python is a built-in functionthat allows you to loop over something and have an automaticcounter.</p><p>In a <code>for</code> loop, when you use<code>enumerate(sources)</code>, it returns an enumerate object, whichis an iterable that yields pairs of the form<code>(index, value)</code>. In each iteration of the loop,<code>idx</code> is the index of the current item, and<code>source</code> is the value of the current item.</p><p>Here's a simple example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">fruits = [<span class="hljs-string">&#x27;apple&#x27;</span>, <span class="hljs-string">&#x27;banana&#x27;</span>, <span class="hljs-string">&#x27;cherry&#x27;</span>]<br><br><span class="hljs-keyword">for</span> idx, fruit <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(fruits):<br>    <span class="hljs-built_in">print</span>(idx, fruit)<br></code></pre></td></tr></table></figure><p>This will output:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">0</span> apple<br><span class="hljs-number">1</span> banana<br><span class="hljs-number">2</span> cherry<br></code></pre></td></tr></table></figure><p>As you can see, <code>idx</code> is the index of each item in thelist, and <code>fruit</code> is the value of each item. This can be veryuseful in situations where you need to know the index of the items asyou're looping over them.</p><h2 id="iter"><code>iter()</code></h2><p>The <code>iter()</code> function in Python is a built-in functionthat returns an iterator object. An iterator is an object that can beiterated (looped) upon. An object which will return data, one element ata time when <code>next()</code> is called on it.</p><p>In more technical terms, an iterator is an object that implements theiterator protocol, which consists of the methods <code>__iter__()</code>and <code>__next__()</code>.</p><p>Here's an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">my_list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>my_iter = <span class="hljs-built_in">iter</span>(my_list)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(my_iter))  <span class="hljs-comment"># Outputs: 1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(my_iter))  <span class="hljs-comment"># Outputs: 2</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(my_iter))  <span class="hljs-comment"># Outputs: 3</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(my_iter))  <span class="hljs-comment"># Outputs: 4</span><br><br></code></pre></td></tr></table></figure><p>In this code, <code>iter(my_list)</code> returns an iterator objectthat you can fetch values from one at a time using the<code>next()</code> function. Once all elements are exhausted,<code>next()</code> will raise a <code>StopIteration</code>exception.</p><p>Most of the time, you don't need to use <code>iter()</code> and<code>next()</code> directly, because Python's <code>for</code> loopautomatically calls them when you loop over an iterable object:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">my_list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br><span class="hljs-keyword">for</span> element <span class="hljs-keyword">in</span> my_list:<br>    <span class="hljs-built_in">print</span>(element)<br><br></code></pre></td></tr></table></figure><p>This code does the same thing as the previous example, but it's a lotsimpler and clearer. The <code>for</code> loop automatically calls<code>iter(my_list)</code> to get an iterator, and then it calls<code>next()</code> on that iterator for each iteration of the loop.When <code>next()</code> raises a <code>StopIteration</code> exception,the <code>for</code> loop catches it and gracefully exits the loop.</p><h2 id="ternary-operator-in-python">ternary operator in Python</h2><h3 id="example-1">Example:</h3><p>rewrite the following Java code in Python</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> (j &gt; <span class="hljs-number">1</span>) ? <span class="hljs-number">6</span> : <span class="hljs-number">7</span>; <span class="hljs-comment">// if j &gt; 1, then i = 6, else, i = 7</span><br></code></pre></td></tr></table></figure><p>Python does have a similar construct, but the syntax is differentfrom Java. Instead of <code>(j &gt; 1) ? 6 : 7</code>, in Python youwould write <code>6 if j &gt; 1 else 7</code>.</p><p>Here's an example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">j = <span class="hljs-number">5</span><br>i = <span class="hljs-number">6</span> <span class="hljs-keyword">if</span> j &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p>In this Python code, <code>6 if j &gt; 1 else 7</code> is aconditional expression (often called a ternary operation). It checks if<code>j &gt; 1</code>. If <code>j &gt; 1</code> is true, it evaluates to<code>6</code>. Otherwise, it evaluates to <code>7</code>. This value isthen assigned to <code>i</code>.</p><p>This is similar to the <code>? :</code> operator in Java, but thesyntax is slightly different.</p><h1 id="git">Git</h1><h2id="differences-between-git-switch-another-branch-and-git-checkout-another-branch">Differencesbetween <code>git switch another-branch</code> and<code>git checkout another-branch</code></h2><p>In versions of Git prior to 2.23, the command<code>git checkout</code> was primarily used to switch between branchesin a Git repository. However, starting from Git 2.23, the command<code>git switch</code> was introduced as a more intuitive and saferalternative to <code>git checkout</code> when it comes to switchingbranches. Here are the main differences between the two commands:</p><ol type="1"><li>Simplicity and clarity: The <code>git switch</code> command wasintroduced to provide a clearer and more straightforward syntax forswitching branches. The name "switch" better reflects the action beingperformed, making it easier to understand its purpose at a glance.</li><li>Safety: The <code>git switch</code> command is designed to be morecautious and less error-prone than <code>git checkout</code>. When using<code>git switch</code>, Git performs additional checks to ensure thatyou don't accidentally lose work or overwrite uncommitted changes. Forexample, if you have uncommitted changes in your working directory, Gitwill refuse to switch branches unless you either commit the changes orstash them. This helps prevent data loss.</li><li>Branch creation: With <code>git switch</code>, you can create andswitch to a new branch in a single command using the<code>git switch -c &lt;new-branch&gt;</code> syntax. This combines thecreation of a branch and switching to it into a single step. Incontrast, <code>git checkout</code> requires separate commands to createand switch to a new branch (<code>git branch &lt;new-branch&gt;</code>and <code>git checkout &lt;new-branch&gt;</code>).</li><li>Replacing detached HEAD: In <code>git switch</code>, the command<code>git switch &lt;commit&gt;</code> is used to switch to a specificcommit, effectively replacing the old "detached HEAD" state. This syntaxmakes it more explicit and less error-prone to switch to a specificcommit, as opposed to <code>git checkout &lt;commit&gt;</code>.</li></ol><p>It's worth noting that <code>git checkout</code> is still supportedin recent versions of Git to maintain backward compatibility, but<code>git switch</code> is encouraged for branch switching operationsdue to its advantages in safety and simplicity.</p><h2id="git-command-for-create-and-checkout-to-a-new-branch-together">Gitcommand for create and checkout to a new branch together</h2><p>You may use <code>git checkout -b another-branch</code></p><h1 id="terminal-command">Terminal Command</h1><h2 id="split-the-command-window-to-multiple-sub-windows">Split thecommand window to multiple sub windows</h2><p>You may use <code>command</code> + <code>D</code> on key board</p>]]></content>
    
    
    <categories>
      
      <category>Daily Logs</category>
      
      <category>Intern Log</category>
      
      <category>Tech Summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Learning Log</tag>
      
      <tag>Intern</tag>
      
      <tag>Intern Log</tag>
      
      <tag>Intern At 300K</tag>
      
      <tag>Python</tag>
      
      <tag>Python Grammar</tag>
      
      <tag>Tech</tag>
      
      <tag>Terminal</tag>
      
      <tag>Terminal Command</tag>
      
      <tag>Git</tag>
      
      <tag>Git Command</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Self-built Annotation :Format and Essence</title>
    <link href="/2023/02/04/Java-Annotation-build-annotations-by-yourself/"/>
    <url>/2023/02/04/Java-Annotation-build-annotations-by-yourself/</url>
    
    <content type="html"><![CDATA[<p>This is the video version of the tutorial:</p><div style="position: relative; width: 100%; padding-bottom: 70%;"><p><iframe src="https://www.youtube.com/embed/kdzch2RvTOg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p></div><h1 id="self-built-java-annotation-format-essence">Self built JavaAnnotation: Format &amp; Essence</h1><p>After learning about annotations built by others, we might wonder ifwe can also built some annotations by our own. After all, the beauty oflearning programming is to build your own world.</p><p>However, we have no idea how to program an annotation ourselves. Sowhat do we do? We simulate. So first let’s see how is the built-inannotation is programed.</p><h1 id="format-of-annotation">Format of annotation</h1><p>We can jump into the source code clicking the<code>@Override</code>while holding <code>⌘command</code>. Here is thesource code for <code>@Override</code></p><h2 id="override"><code>@Override</code></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> ......</span><br><span class="hljs-comment"> * @jls 9.6.4.4 @Override</span><br><span class="hljs-comment"> * @since 1.5</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Target(ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.SOURCE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Override &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>Here we found that there are two part of the code. A chunk of codelike this:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Target(ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.SOURCE)</span><br></code></pre></td></tr></table></figure><p>And another chunk of code like this:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Override &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="deprecated"><code>@Deprecated</code></h2><p>Now let’s see the source code for <code>@Deprecated</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">.......</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Documented</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-meta">@Target(value=&#123;CONSTRUCTOR, FIELD, LOCAL_VARIABLE, METHOD, PACKAGE, MODULE, PARAMETER, TYPE&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Deprecated &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">    ....</span><br><span class="hljs-comment">     */</span><br>    String <span class="hljs-title function_">since</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     ....</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-title function_">forRemoval</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>;<br><br></code></pre></td></tr></table></figure><p><strong>It seems like that the definition of annotations is dividedinto two part: upper part with a bunch of other annotations; and a lowerpart with <code>public @interface ....</code></strong></p><h1 id="to-define-an-annotation">To define an annotation:</h1><p>We are correct, there are two parts. The annotation above<code>public @interface ....</code> is called “Meta annotation”, whichmeans the annotation for annotation. Does that sound familiar? Yeah, wesaw it in the last video in the <ahref="https://en.wikipedia.org/wiki/Java_annotation">Java AnnotationWikipedia Page</a>, which is the thing that we would ignore for“now”.</p><img src="/2023/02/04/Java-Annotation-build-annotations-by-yourself/Wikipedia_JAnnotation_MetaAnno.png" class="" title="Wikipedia page for meta annotation"><h1 id="create-our-own-annotations">Create our own annotations:</h1><p>Now we do not care about the meta annotation, will still delay thatfor now.</p><p>Yet for the following part, we always see something like<code>public @interface ....</code>, that is essentially how we build anannotation. Alright, since we have revealed the mysterious vail on thetop of the annotation, let’s build one ourselves.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> RayAnno &#123;&#125;<br></code></pre></td></tr></table></figure><p>Let’s try it out.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RayAnno</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RayAnnoTest</span> &#123;<br><span class="hljs-meta">@RayAnno</span><br>    <span class="hljs-type">int</span> age;<br><br><span class="hljs-meta">@RayAnno</span><br>    String name;<br><br><span class="hljs-meta">@RayAnno</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testMethod1</span><span class="hljs-params">()</span> &#123;&#125;<br><br><span class="hljs-meta">@RayAnno</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">testMethod2</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br><br><span class="hljs-meta">@RayAnno</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testMethod3</span><span class="hljs-params">()</span> &#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>We found that we could add my own annotation to wherever we want.</p><h1 id="what-is-behind-annotation">What is behind annotation</h1><p>Now we’ve known how the define an annotation, though don’t know whatthat can be used for. But we are human. WE ARE CURIOUS. We want to knowhow this is working, just like we want to know others’ secrets.</p><p>We can do this by decompile. The java file will eventually becompiled to a <ahref="https://en.wikipedia.org/wiki/Bytecode">Byte-code</a> file, and wecan decompile it to see what is really behind the scene.</p><p>So how do we do it?</p><p>We have the code:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> RayAnno &#123;&#125;<br></code></pre></td></tr></table></figure><p>and a file <code>RayAnno.java</code></p><p>We do the following to compile <code>.java</code> file, we will get a<code>RayAnno.class</code>file, which is the <ahref="https://en.wikipedia.org/wiki/Bytecode">Byte-code</a> fileaforementioned.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">% javac RayAnno.java<br></code></pre></td></tr></table></figure><p>Then we do the following commend to disassemble the<code>RayAnno.class</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">% javac RayAnno.class<br></code></pre></td></tr></table></figure><p>We get</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Compiled from <span class="hljs-string">&quot;RayAnno.java&quot;</span><br>public interface RayAnno extends java.lang.annotation.Annotation &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>which means that a “new” <code>.java</code> file was generated, whichincludes:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">RayAnno</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">java</span>.lang.annotation.Annotation &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>How amazing!</p><p>Thus, we found the essence of the annotation. Which is<strong><code>public interface RayAnno extends java.lang.annotation.Annotation &#123;&#125;</code></strong>.</p><h1id="public-interface-rayanno-extends-java.lang.annotation.annotation"><code>public interface RayAnno extends java.lang.annotation.Annotation &#123;&#125;</code></h1><p>This line of code reveals that we are actually creating a newinterface when we create an annotation. Furthermore, this interfaceextends <code>Annotation</code> interface under package<code>java.lang.annotation</code>.</p><h2id="lets-take-a-trip-into-this-intriguing-annotation-interface">Let’stake a trip into this intriguing <code>Annotation</code> interface</h2><p>Here is the <ahref="https://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Annotation.html">APIdocumentation</a>. We found the following:</p><img src="/2023/02/04/Java-Annotation-build-annotations-by-yourself/API_Docu_Annotation.png" class="" title="Java Annotation Description"><p>This just means that this interface is the root interface for allannotations.</p><p>We also see some built in methods, which we will talk about lateron.</p><img src="/2023/02/04/Java-Annotation-build-annotations-by-yourself/API_JavaDoc_Anno_Method.png" class="" title="Java Annotation Methods"><p>Now we have known that an annotation is simply an interface. Thus, itmakes sense to induce that what can be defined in interfaces should beable to be defined in the annotation. And now we are going to talk aboutsome characteristic about annotations.</p><h1 id="annotations-content">Annotation’s content</h1><p>So what do we talk about in the interface? Methods. (Attributes arekinda useless in this case) Let’s take a look about the methods inannotations.</p><p>We can code some abstract method in annotations as:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> RayAnno &#123;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">show</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>We can add an <code>abstract</code> of course:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> RayAnno &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> String <span class="hljs-title function_">show</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>We call those methods in annotation “attributes” of annotation. Thereare some special features about these attributes, which we will talkabout soon.</p>]]></content>
    
    
    <categories>
      
      <category>Tech</category>
      
      <category>Java</category>
      
      <category>Java Language</category>
      
      <category>Annotation Tutorial</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tech</tag>
      
      <tag>Java</tag>
      
      <tag>Java Annotation</tag>
      
      <tag>Programming</tag>
      
      <tag>Tutorial</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java Annotation-built in annotation</title>
    <link href="/2023/02/02/Java-Annotation-built-in-annotation/"/>
    <url>/2023/02/02/Java-Annotation-built-in-annotation/</url>
    
    <content type="html"><![CDATA[<p>Here is the video version:</p><div style="position: relative; width: 100%; padding-bottom: 70%;"><p><iframe src="https://www.youtube.com/embed/DPzwfhlGf-c" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p></div><h1 id="what-are-some-built-in-annotations">What are some built inannotations</h1><p>We can check some definitions from the <ahref="https://en.wikipedia.org/wiki/Java_annotation">Wikipedia pageabout Java annotation</a></p><p>We found that they introduced three built in annotation here</p><img src="/2023/02/02/Java-Annotation-built-in-annotation/wiki_javaAnno.png" class="" title="Wikipidia page about java annotation"><h2id="override-check-if-the-method-is-correctly-overriding-another-one"><code>@Override</code>:check if the method is correctly overriding another one</h2><h2id="deprecated-to-note-that-the-method-is-out-dated-might-have-a-problem-or-too-slow"><code>@Deprecated</code>:to note that the method is out-dated (might have a problem or tooslow)</h2><h2id="suppresswarnings-to-wipe-out-warnings"><code>@SuppressWarnings</code>:to wipe out warnings</h2><p>now let's jump into some code and see how these three annotations areworking in real-world cases</p><h1 id="override"><code>@Override</code></h1><p>As we introduce before in the <ahref="https://blog.slray.com/2023/02/02/What-is-Java-Annotation-intro/">Annotation-intro</a>,<code>@Override</code> annotation is for checking whether a method iscorrectly overriding this class’ super class, or interface.</p><p>Let's go through some example codes:</p><p>We have an <code>Animal</code> class:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :An animal class for annotation demo</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> &#123;<br>    String name;<br>    <span class="hljs-type">int</span> age;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attack</span><span class="hljs-params">(String name)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;attacking-&gt;&quot;</span> + name);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>And a <code>cat</code>class that extend <code>Animal</code>class:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Cat</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Animal</span>&#123;<br><span class="hljs-comment">//If we change the return type, input parameter type or amount</span><br><span class="hljs-comment">//then the program will post an erro</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attack</span><span class="hljs-params">(String name)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Miao attack! -&gt;&quot;</span> + name);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="deprecated"><code>@Deprecated</code></h1><p><code>@Deprecated</code> annotation will mark current method asout-dated.</p><p>Let’s look at an example.</p><p>We have a <code>SumCalculator</code>class in which we are planning todo sum calculation. At first we have the method as such:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SumCalculator</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<span class="hljs-keyword">return</span> a+b;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>but later on we found that the <code>sum()</code>method can only taketwo parameters, but we wanna change it so that it could take whatevernumbers people wanna input. Moreover, we also wanna inform people thatthe <code>sum()</code>method is out-dated. Instead, people should use<code>sumNumbers()</code>. We can do such thing:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SumCalculator</span> &#123;<br>    <span class="hljs-meta">@Deprecated</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<span class="hljs-keyword">return</span> a+b;&#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sumNumbers</span><span class="hljs-params">(<span class="hljs-type">int</span>[] nums)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> num : nums) &#123;<br>            result += num;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Notice here we can add a <code>@Deprecated</code> on the top of<code>sum()</code> method. Thus when we call it, we will have followingeffect to remind users that they are calling deprecated methods.</p><img src="/2023/02/02/Java-Annotation-built-in-annotation/sum_depre.png" class="" title="Deprecated sum reminding"><h2 id="some-source-code-with-deprecated">Some source code with<code>@Deprecated</code>:</h2><p>Where do we see a lot of deprecated method? When we are codinginvolving <code>Date</code> class.</p><img src="/2023/02/02/Java-Annotation-built-in-annotation/builtin_depre.png" class="" title="Built in built in deprecated methods"><h1 id="suppresswarnings"><code>@SuppressWarnings</code>:</h1><p>This annotation is used to suppress compiler’s warning.</p><p>When we write code like this, we can see on the top right cornerwhere is a yellow triangle with an exclamation mark with number 4. Wecan also see that on the right side, there are 4 bars.</p><img src="/2023/02/02/Java-Annotation-built-in-annotation/warnings.png" class="" title="All the warnings"><p>Each bar represent some warning. Such as “Method ‘test()’ is neverused”.</p><img src="/2023/02/02/Java-Annotation-built-in-annotation/warning_big.png" class="" title="detailed warnings"><p>But we can suppress the warning by doing this:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WarningDemo</span> &#123;<br>    <span class="hljs-meta">@SuppressWarnings(&quot;all&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test</span><span class="hljs-params">()</span>&#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Notice we added <code>@SuppressWarnings("all")</code> on the top ofthe method whose warning you want to suppress.</p><p>After doing this, you will find that the yellow bar disappeared.</p><ul><li>Parameters in annotation:</li></ul><p>You might have noticed that there was an “all” parameter inside ofthe annotation. This means we want to suppress all the warning. We willlook as this later.</p><p>Normally, we would add <code>@SuppressWarnings("all")</code> on thetop of the class, so that we can suppress all the warnings.</p>]]></content>
    
    
    <categories>
      
      <category>Tech</category>
      
      <category>Java</category>
      
      <category>Java Language</category>
      
      <category>Annotation Tutorial</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tech</tag>
      
      <tag>Java</tag>
      
      <tag>Java Annotation</tag>
      
      <tag>Programming</tag>
      
      <tag>Tutorial</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>What is Java Annotation?-intro</title>
    <link href="/2023/02/02/What-is-Java-Annotation-intro/"/>
    <url>/2023/02/02/What-is-Java-Annotation-intro/</url>
    
    <content type="html"><![CDATA[<h1 id="annotation-intro">Annotation-intro</h1><p>This is the video version:</p><div style="position: relative; width: 100%; padding-bottom: 70%;"><p><iframe src="https://www.youtube.com/embed/XEE_BeI-U_I" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p></div><h1 id="introduction">Introduction</h1><h2 id="where-have-we-seen-annotation">Where have we seenannotation</h2><ul><li>When learning inheritance: <code>@Override</code><ul><li>extend a super class</li><li>implements an interface</li></ul></li><li>When we use Unit test: <code>@Test</code><ul><li>To run something “without” a main method</li></ul></li><li><dl><dt>When learning Java Spring (totally fine if you haven’t touchedanything about spring)</dt><dd><p><code>@Configuration</code>, <code>@Component</code>,<code>@Repository</code>, <code>@Autowire</code>...</p></dd></dl><ul><li>We can use annotation to create beans</li><li>We can use annotation to set restriction for parameters</li></ul></li></ul><h1 id="what-is-annotation">What is annotation</h1><h2 id="in-short-it-is-a-kind-of-not-part-of-the-program">In short, itis a kind of “not part of the program”</h2><p>Where have we see something that feels like not part of the program?Yes, comments! Annotation is just like comments. But instead of forhuman, annotation is more like a comment for program, specifically forjava compiler.</p><h2 id="why-do-we-wanna-learn-annotation">Why do we wanna learnannotation?</h2><p>Admittedly, you can write Java programs and use annotation withoutlearning the underlaying principle. However, if you are not satisfiedwith just using the frameworks developed by others, if you wanna doframeworks by yourself, or if you want to have a deeper understanding ofwhat is inside of Java language design, then it is indispensable tolearn annotation and finish this series.</p><p>Annotation is counted as an advanced knowledge of Java programming.You are stepping out of beginners and intermediate, if you are watchingthis video!</p><h2 id="say-in-the-end">Say in the end</h2><ul><li>We will jump into the source code of annotation and have a touch onwhat exactly annotation is. (spoil alert! it is simply aninterface)</li><li>I will introduce several frequently used built-in annotation</li></ul><h1 id="definitions">Definitions:</h1><h2 id="to-describe-programs-but-for-programs">--To describe programs,but for programs</h2><h2 id="format-xxx">--Format: <code>@XXX</code></h2><h1 id="functions">Functions:</h1><h2 id="to-format-java-documentation-api-doc">1. To format javadocumentation (API doc)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> : Ray Li</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@created</span> : 13/31/3033, 25:61</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span> :</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> name of the person you wanna greet</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> sentence of the greeting</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> full greeting sentence</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">greet</span><span class="hljs-params">(String name, String sentence)</span> &#123;<br>        <span class="hljs-keyword">return</span> sentence + <span class="hljs-string">&quot;, &quot;</span> + name;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>A java document is something you see when you search up thing like"how to slipt String in Java". Here are some examples.<ul><li><ahref="https://docs.oracle.com/javase/7/docs/api/java/lang/String.html">ClassString</a></li><li><ahref="https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html">ClassCollections</a></li></ul></li></ul><p>Then, type <code>javadoc</code> in the command line, and you willfound the files pop out.</p><p>Click the <code>index.html</code>, you will find the java doc.</p><h2 id="analyze-the-code">2. Analyze the code</h2><h2 id="compiling-check">3. Compiling check</h2>]]></content>
    
    
    <categories>
      
      <category>Tech</category>
      
      <category>Java</category>
      
      <category>Java Language</category>
      
      <category>Annotation Tutorial</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tech</tag>
      
      <tag>Java</tag>
      
      <tag>Java Annotation</tag>
      
      <tag>Programming</tag>
      
      <tag>Tutorial</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How does this website come into place?</title>
    <link href="/2023/01/10/How-does-this-website-come-into-place/"/>
    <url>/2023/01/10/How-does-this-website-come-into-place/</url>
    
    <content type="html"><![CDATA[<p>I wrote this blog for those of you who might be interested inbuilding a website, not necessaryly a personal blog. You could simplyshow your projects, resume, or just have a world of your own. I buildthis blog out of nothing but a thought, thus do not let coding or CSskills become an obstacle on your way.</p><p>There will be a table of content on the right side, feel free to jumpto the prefered part.</p><h1 id="why-would-i-care-about-how-you-build-this-website">Why would Icare about how you build this website?</h1><p>A short answer would be very similar to the introduction. Yet otherthan that, you can truly learn a lot from exploring the world of web. Itried AWS, Google Could, Microsoft cloud, and even a local server--aRasperry Pi; I bought a domain name, trying to connect it to my cloudserver, which spent tens of my life and hair. During the process, I gota touch on what dynamic/static web page is, what DNS is, what IP addressis, to name a few. It is a journey worth to try.</p><h1 id="so-how-did-you-build-this-website">So how did you build thiswebsite?</h1><p>A short answer: <a href="https://pages.github.com/">GitHub Pages</a>+ <a href="https://hexo.io/">Hexo</a> + a domain name(<ahref="https://blog.slray.com/">blog.slray.com</a>).</p><h2 id="why-github-pages">Why GitHub Pages</h2><p>I am an international student from China, and I would love to show mywebsite to both my friends from China and the rest of the world.Fortunately, <a href="https://github.com/">GitHub</a> is no longerblocked in China. Thus, I used <ahref="https://pages.github.com/">GitHub Pages</a> as my web server.</p><h3 id="a-problem-with-github-pages">A problem with GitHub Pages</h3><p>You can only deploy static web pages. This does not mean that youcannot have animations or special effects for the website. A static webpages is more like a solely online web page, meaning that you can not(orit is very hard to) collect data from the websites as well as show data.In other words, you can have a blog showing your words, your pictures,or your videos. Yet you cannot deploy a web application.</p><p>However, that would not be a huge problem, and a static page isalready enough for now.</p><h2 id="what-is-hexo">What is Hexo</h2><p>This is a website providing well-designed web-pages for those who arebad at designing. I used this website for a better appearance of thedesign of the website.</p><p>Remember when doing a slide for presentation, groupmates would goonline for templates. <a href="https://hexo.io/">Hexo</a> is a similarwebsite for template, but for webpages instead of a slide. (Come on, awebsite is much coooler than a slide!)</p><hr /><p>I have spent so much time on this website. This would be my firstofficial post with content. It would not be an easy job to build awebsite, espcially when you are fighting alone and searching up thequestions that only have two pages of result. I know there would stillbe a lot of confusions: what is a web server? what is git? what is adomain? what is web? what is those <code>http</code> stuff. Is itexpensive to build a website? I will probably post more details abouthow I build this website. I basically tried out most of the ways andtouched on most of erros. I would love to try my best to save some timeand provide some consolation for those who are encoutering the sameproblems and feeling that no one could help.</p><p>See you next time!</p>]]></content>
    
    
    <categories>
      
      <category>Tech</category>
      
      <category>Web</category>
      
      <category>Personal Website</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
      <tag>server</tag>
      
      <tag>GitHub</tag>
      
      <tag>AWS</tag>
      
      <tag>Google Could</tag>
      
      <tag>Personal Blog</tag>
      
      <tag>Building website</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/10/hello-world/"/>
    <url>/2023/01/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://blog.slray.com">Ray's website</a>! Thisis my very first post!</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
